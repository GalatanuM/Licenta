
SimulareGamepad.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000082bc  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  080083c8  080083c8  000093c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008450  08008450  0000a168  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08008450  08008450  0000a168  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08008450  08008450  0000a168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008450  08008450  00009450  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008454  08008454  00009454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000168  20000000  08008458  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000820  20000168  080085c0  0000a168  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000988  080085c0  0000a988  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000a168  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c9a2  00000000  00000000  0000a191  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002a5a  00000000  00000000  00016b33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b10  00000000  00000000  00019590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000081c  00000000  00000000  0001a0a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019717  00000000  00000000  0001a8bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ecbc  00000000  00000000  00033fd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000896af  00000000  00000000  00042c8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000cc33e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002b84  00000000  00000000  000cc384  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  000cef08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000168 	.word	0x20000168
 8000128:	00000000 	.word	0x00000000
 800012c:	080083b0 	.word	0x080083b0

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000016c 	.word	0x2000016c
 8000148:	080083b0 	.word	0x080083b0

0800014c <__aeabi_frsub>:
 800014c:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000150:	e002      	b.n	8000158 <__addsf3>
 8000152:	bf00      	nop

08000154 <__aeabi_fsub>:
 8000154:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000158 <__addsf3>:
 8000158:	0042      	lsls	r2, r0, #1
 800015a:	bf1f      	itttt	ne
 800015c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000160:	ea92 0f03 	teqne	r2, r3
 8000164:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000168:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800016c:	d06a      	beq.n	8000244 <__addsf3+0xec>
 800016e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000172:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000176:	bfc1      	itttt	gt
 8000178:	18d2      	addgt	r2, r2, r3
 800017a:	4041      	eorgt	r1, r0
 800017c:	4048      	eorgt	r0, r1
 800017e:	4041      	eorgt	r1, r0
 8000180:	bfb8      	it	lt
 8000182:	425b      	neglt	r3, r3
 8000184:	2b19      	cmp	r3, #25
 8000186:	bf88      	it	hi
 8000188:	4770      	bxhi	lr
 800018a:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 800018e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000192:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000196:	bf18      	it	ne
 8000198:	4240      	negne	r0, r0
 800019a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 800019e:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80001a2:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 80001a6:	bf18      	it	ne
 80001a8:	4249      	negne	r1, r1
 80001aa:	ea92 0f03 	teq	r2, r3
 80001ae:	d03f      	beq.n	8000230 <__addsf3+0xd8>
 80001b0:	f1a2 0201 	sub.w	r2, r2, #1
 80001b4:	fa41 fc03 	asr.w	ip, r1, r3
 80001b8:	eb10 000c 	adds.w	r0, r0, ip
 80001bc:	f1c3 0320 	rsb	r3, r3, #32
 80001c0:	fa01 f103 	lsl.w	r1, r1, r3
 80001c4:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 80001c8:	d502      	bpl.n	80001d0 <__addsf3+0x78>
 80001ca:	4249      	negs	r1, r1
 80001cc:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80001d0:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 80001d4:	d313      	bcc.n	80001fe <__addsf3+0xa6>
 80001d6:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 80001da:	d306      	bcc.n	80001ea <__addsf3+0x92>
 80001dc:	0840      	lsrs	r0, r0, #1
 80001de:	ea4f 0131 	mov.w	r1, r1, rrx
 80001e2:	f102 0201 	add.w	r2, r2, #1
 80001e6:	2afe      	cmp	r2, #254	@ 0xfe
 80001e8:	d251      	bcs.n	800028e <__addsf3+0x136>
 80001ea:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 80001ee:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001f2:	bf08      	it	eq
 80001f4:	f020 0001 	biceq.w	r0, r0, #1
 80001f8:	ea40 0003 	orr.w	r0, r0, r3
 80001fc:	4770      	bx	lr
 80001fe:	0049      	lsls	r1, r1, #1
 8000200:	eb40 0000 	adc.w	r0, r0, r0
 8000204:	3a01      	subs	r2, #1
 8000206:	bf28      	it	cs
 8000208:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 800020c:	d2ed      	bcs.n	80001ea <__addsf3+0x92>
 800020e:	fab0 fc80 	clz	ip, r0
 8000212:	f1ac 0c08 	sub.w	ip, ip, #8
 8000216:	ebb2 020c 	subs.w	r2, r2, ip
 800021a:	fa00 f00c 	lsl.w	r0, r0, ip
 800021e:	bfaa      	itet	ge
 8000220:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000224:	4252      	neglt	r2, r2
 8000226:	4318      	orrge	r0, r3
 8000228:	bfbc      	itt	lt
 800022a:	40d0      	lsrlt	r0, r2
 800022c:	4318      	orrlt	r0, r3
 800022e:	4770      	bx	lr
 8000230:	f092 0f00 	teq	r2, #0
 8000234:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000238:	bf06      	itte	eq
 800023a:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 800023e:	3201      	addeq	r2, #1
 8000240:	3b01      	subne	r3, #1
 8000242:	e7b5      	b.n	80001b0 <__addsf3+0x58>
 8000244:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000248:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 800024c:	bf18      	it	ne
 800024e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000252:	d021      	beq.n	8000298 <__addsf3+0x140>
 8000254:	ea92 0f03 	teq	r2, r3
 8000258:	d004      	beq.n	8000264 <__addsf3+0x10c>
 800025a:	f092 0f00 	teq	r2, #0
 800025e:	bf08      	it	eq
 8000260:	4608      	moveq	r0, r1
 8000262:	4770      	bx	lr
 8000264:	ea90 0f01 	teq	r0, r1
 8000268:	bf1c      	itt	ne
 800026a:	2000      	movne	r0, #0
 800026c:	4770      	bxne	lr
 800026e:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000272:	d104      	bne.n	800027e <__addsf3+0x126>
 8000274:	0040      	lsls	r0, r0, #1
 8000276:	bf28      	it	cs
 8000278:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 800027c:	4770      	bx	lr
 800027e:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000282:	bf3c      	itt	cc
 8000284:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000288:	4770      	bxcc	lr
 800028a:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 800028e:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000292:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000296:	4770      	bx	lr
 8000298:	ea7f 6222 	mvns.w	r2, r2, asr #24
 800029c:	bf16      	itet	ne
 800029e:	4608      	movne	r0, r1
 80002a0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80002a4:	4601      	movne	r1, r0
 80002a6:	0242      	lsls	r2, r0, #9
 80002a8:	bf06      	itte	eq
 80002aa:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80002ae:	ea90 0f01 	teqeq	r0, r1
 80002b2:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 80002b6:	4770      	bx	lr

080002b8 <__aeabi_ui2f>:
 80002b8:	f04f 0300 	mov.w	r3, #0
 80002bc:	e004      	b.n	80002c8 <__aeabi_i2f+0x8>
 80002be:	bf00      	nop

080002c0 <__aeabi_i2f>:
 80002c0:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 80002c4:	bf48      	it	mi
 80002c6:	4240      	negmi	r0, r0
 80002c8:	ea5f 0c00 	movs.w	ip, r0
 80002cc:	bf08      	it	eq
 80002ce:	4770      	bxeq	lr
 80002d0:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 80002d4:	4601      	mov	r1, r0
 80002d6:	f04f 0000 	mov.w	r0, #0
 80002da:	e01c      	b.n	8000316 <__aeabi_l2f+0x2a>

080002dc <__aeabi_ul2f>:
 80002dc:	ea50 0201 	orrs.w	r2, r0, r1
 80002e0:	bf08      	it	eq
 80002e2:	4770      	bxeq	lr
 80002e4:	f04f 0300 	mov.w	r3, #0
 80002e8:	e00a      	b.n	8000300 <__aeabi_l2f+0x14>
 80002ea:	bf00      	nop

080002ec <__aeabi_l2f>:
 80002ec:	ea50 0201 	orrs.w	r2, r0, r1
 80002f0:	bf08      	it	eq
 80002f2:	4770      	bxeq	lr
 80002f4:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 80002f8:	d502      	bpl.n	8000300 <__aeabi_l2f+0x14>
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	ea5f 0c01 	movs.w	ip, r1
 8000304:	bf02      	ittt	eq
 8000306:	4684      	moveq	ip, r0
 8000308:	4601      	moveq	r1, r0
 800030a:	2000      	moveq	r0, #0
 800030c:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000310:	bf08      	it	eq
 8000312:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000316:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 800031a:	fabc f28c 	clz	r2, ip
 800031e:	3a08      	subs	r2, #8
 8000320:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000324:	db10      	blt.n	8000348 <__aeabi_l2f+0x5c>
 8000326:	fa01 fc02 	lsl.w	ip, r1, r2
 800032a:	4463      	add	r3, ip
 800032c:	fa00 fc02 	lsl.w	ip, r0, r2
 8000330:	f1c2 0220 	rsb	r2, r2, #32
 8000334:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000338:	fa20 f202 	lsr.w	r2, r0, r2
 800033c:	eb43 0002 	adc.w	r0, r3, r2
 8000340:	bf08      	it	eq
 8000342:	f020 0001 	biceq.w	r0, r0, #1
 8000346:	4770      	bx	lr
 8000348:	f102 0220 	add.w	r2, r2, #32
 800034c:	fa01 fc02 	lsl.w	ip, r1, r2
 8000350:	f1c2 0220 	rsb	r2, r2, #32
 8000354:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000358:	fa21 f202 	lsr.w	r2, r1, r2
 800035c:	eb43 0002 	adc.w	r0, r3, r2
 8000360:	bf08      	it	eq
 8000362:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000366:	4770      	bx	lr

08000368 <__aeabi_fmul>:
 8000368:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800036c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000370:	bf1e      	ittt	ne
 8000372:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000376:	ea92 0f0c 	teqne	r2, ip
 800037a:	ea93 0f0c 	teqne	r3, ip
 800037e:	d06f      	beq.n	8000460 <__aeabi_fmul+0xf8>
 8000380:	441a      	add	r2, r3
 8000382:	ea80 0c01 	eor.w	ip, r0, r1
 8000386:	0240      	lsls	r0, r0, #9
 8000388:	bf18      	it	ne
 800038a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 800038e:	d01e      	beq.n	80003ce <__aeabi_fmul+0x66>
 8000390:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8000394:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000398:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 800039c:	fba0 3101 	umull	r3, r1, r0, r1
 80003a0:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80003a4:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80003a8:	bf3e      	ittt	cc
 80003aa:	0049      	lslcc	r1, r1, #1
 80003ac:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80003b0:	005b      	lslcc	r3, r3, #1
 80003b2:	ea40 0001 	orr.w	r0, r0, r1
 80003b6:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80003ba:	2afd      	cmp	r2, #253	@ 0xfd
 80003bc:	d81d      	bhi.n	80003fa <__aeabi_fmul+0x92>
 80003be:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80003c2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80003c6:	bf08      	it	eq
 80003c8:	f020 0001 	biceq.w	r0, r0, #1
 80003cc:	4770      	bx	lr
 80003ce:	f090 0f00 	teq	r0, #0
 80003d2:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80003d6:	bf08      	it	eq
 80003d8:	0249      	lsleq	r1, r1, #9
 80003da:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80003de:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80003e2:	3a7f      	subs	r2, #127	@ 0x7f
 80003e4:	bfc2      	ittt	gt
 80003e6:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 80003ea:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80003ee:	4770      	bxgt	lr
 80003f0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80003f4:	f04f 0300 	mov.w	r3, #0
 80003f8:	3a01      	subs	r2, #1
 80003fa:	dc5d      	bgt.n	80004b8 <__aeabi_fmul+0x150>
 80003fc:	f112 0f19 	cmn.w	r2, #25
 8000400:	bfdc      	itt	le
 8000402:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000406:	4770      	bxle	lr
 8000408:	f1c2 0200 	rsb	r2, r2, #0
 800040c:	0041      	lsls	r1, r0, #1
 800040e:	fa21 f102 	lsr.w	r1, r1, r2
 8000412:	f1c2 0220 	rsb	r2, r2, #32
 8000416:	fa00 fc02 	lsl.w	ip, r0, r2
 800041a:	ea5f 0031 	movs.w	r0, r1, rrx
 800041e:	f140 0000 	adc.w	r0, r0, #0
 8000422:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000426:	bf08      	it	eq
 8000428:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800042c:	4770      	bx	lr
 800042e:	f092 0f00 	teq	r2, #0
 8000432:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000436:	bf02      	ittt	eq
 8000438:	0040      	lsleq	r0, r0, #1
 800043a:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 800043e:	3a01      	subeq	r2, #1
 8000440:	d0f9      	beq.n	8000436 <__aeabi_fmul+0xce>
 8000442:	ea40 000c 	orr.w	r0, r0, ip
 8000446:	f093 0f00 	teq	r3, #0
 800044a:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 800044e:	bf02      	ittt	eq
 8000450:	0049      	lsleq	r1, r1, #1
 8000452:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000456:	3b01      	subeq	r3, #1
 8000458:	d0f9      	beq.n	800044e <__aeabi_fmul+0xe6>
 800045a:	ea41 010c 	orr.w	r1, r1, ip
 800045e:	e78f      	b.n	8000380 <__aeabi_fmul+0x18>
 8000460:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000464:	ea92 0f0c 	teq	r2, ip
 8000468:	bf18      	it	ne
 800046a:	ea93 0f0c 	teqne	r3, ip
 800046e:	d00a      	beq.n	8000486 <__aeabi_fmul+0x11e>
 8000470:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000474:	bf18      	it	ne
 8000476:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 800047a:	d1d8      	bne.n	800042e <__aeabi_fmul+0xc6>
 800047c:	ea80 0001 	eor.w	r0, r0, r1
 8000480:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000484:	4770      	bx	lr
 8000486:	f090 0f00 	teq	r0, #0
 800048a:	bf17      	itett	ne
 800048c:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000490:	4608      	moveq	r0, r1
 8000492:	f091 0f00 	teqne	r1, #0
 8000496:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 800049a:	d014      	beq.n	80004c6 <__aeabi_fmul+0x15e>
 800049c:	ea92 0f0c 	teq	r2, ip
 80004a0:	d101      	bne.n	80004a6 <__aeabi_fmul+0x13e>
 80004a2:	0242      	lsls	r2, r0, #9
 80004a4:	d10f      	bne.n	80004c6 <__aeabi_fmul+0x15e>
 80004a6:	ea93 0f0c 	teq	r3, ip
 80004aa:	d103      	bne.n	80004b4 <__aeabi_fmul+0x14c>
 80004ac:	024b      	lsls	r3, r1, #9
 80004ae:	bf18      	it	ne
 80004b0:	4608      	movne	r0, r1
 80004b2:	d108      	bne.n	80004c6 <__aeabi_fmul+0x15e>
 80004b4:	ea80 0001 	eor.w	r0, r0, r1
 80004b8:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80004bc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004c0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80004c4:	4770      	bx	lr
 80004c6:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80004ca:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80004ce:	4770      	bx	lr

080004d0 <__aeabi_fdiv>:
 80004d0:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004d4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80004d8:	bf1e      	ittt	ne
 80004da:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80004de:	ea92 0f0c 	teqne	r2, ip
 80004e2:	ea93 0f0c 	teqne	r3, ip
 80004e6:	d069      	beq.n	80005bc <__aeabi_fdiv+0xec>
 80004e8:	eba2 0203 	sub.w	r2, r2, r3
 80004ec:	ea80 0c01 	eor.w	ip, r0, r1
 80004f0:	0249      	lsls	r1, r1, #9
 80004f2:	ea4f 2040 	mov.w	r0, r0, lsl #9
 80004f6:	d037      	beq.n	8000568 <__aeabi_fdiv+0x98>
 80004f8:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 80004fc:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000500:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000504:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000508:	428b      	cmp	r3, r1
 800050a:	bf38      	it	cc
 800050c:	005b      	lslcc	r3, r3, #1
 800050e:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000512:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000516:	428b      	cmp	r3, r1
 8000518:	bf24      	itt	cs
 800051a:	1a5b      	subcs	r3, r3, r1
 800051c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000520:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000524:	bf24      	itt	cs
 8000526:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800052a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800052e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000532:	bf24      	itt	cs
 8000534:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000538:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 800053c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000540:	bf24      	itt	cs
 8000542:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000546:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800054a:	011b      	lsls	r3, r3, #4
 800054c:	bf18      	it	ne
 800054e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000552:	d1e0      	bne.n	8000516 <__aeabi_fdiv+0x46>
 8000554:	2afd      	cmp	r2, #253	@ 0xfd
 8000556:	f63f af50 	bhi.w	80003fa <__aeabi_fmul+0x92>
 800055a:	428b      	cmp	r3, r1
 800055c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000560:	bf08      	it	eq
 8000562:	f020 0001 	biceq.w	r0, r0, #1
 8000566:	4770      	bx	lr
 8000568:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 800056c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000570:	327f      	adds	r2, #127	@ 0x7f
 8000572:	bfc2      	ittt	gt
 8000574:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000578:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 800057c:	4770      	bxgt	lr
 800057e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000582:	f04f 0300 	mov.w	r3, #0
 8000586:	3a01      	subs	r2, #1
 8000588:	e737      	b.n	80003fa <__aeabi_fmul+0x92>
 800058a:	f092 0f00 	teq	r2, #0
 800058e:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000592:	bf02      	ittt	eq
 8000594:	0040      	lsleq	r0, r0, #1
 8000596:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 800059a:	3a01      	subeq	r2, #1
 800059c:	d0f9      	beq.n	8000592 <__aeabi_fdiv+0xc2>
 800059e:	ea40 000c 	orr.w	r0, r0, ip
 80005a2:	f093 0f00 	teq	r3, #0
 80005a6:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 80005aa:	bf02      	ittt	eq
 80005ac:	0049      	lsleq	r1, r1, #1
 80005ae:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 80005b2:	3b01      	subeq	r3, #1
 80005b4:	d0f9      	beq.n	80005aa <__aeabi_fdiv+0xda>
 80005b6:	ea41 010c 	orr.w	r1, r1, ip
 80005ba:	e795      	b.n	80004e8 <__aeabi_fdiv+0x18>
 80005bc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80005c0:	ea92 0f0c 	teq	r2, ip
 80005c4:	d108      	bne.n	80005d8 <__aeabi_fdiv+0x108>
 80005c6:	0242      	lsls	r2, r0, #9
 80005c8:	f47f af7d 	bne.w	80004c6 <__aeabi_fmul+0x15e>
 80005cc:	ea93 0f0c 	teq	r3, ip
 80005d0:	f47f af70 	bne.w	80004b4 <__aeabi_fmul+0x14c>
 80005d4:	4608      	mov	r0, r1
 80005d6:	e776      	b.n	80004c6 <__aeabi_fmul+0x15e>
 80005d8:	ea93 0f0c 	teq	r3, ip
 80005dc:	d104      	bne.n	80005e8 <__aeabi_fdiv+0x118>
 80005de:	024b      	lsls	r3, r1, #9
 80005e0:	f43f af4c 	beq.w	800047c <__aeabi_fmul+0x114>
 80005e4:	4608      	mov	r0, r1
 80005e6:	e76e      	b.n	80004c6 <__aeabi_fmul+0x15e>
 80005e8:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 80005ec:	bf18      	it	ne
 80005ee:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 80005f2:	d1ca      	bne.n	800058a <__aeabi_fdiv+0xba>
 80005f4:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 80005f8:	f47f af5c 	bne.w	80004b4 <__aeabi_fmul+0x14c>
 80005fc:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000600:	f47f af3c 	bne.w	800047c <__aeabi_fmul+0x114>
 8000604:	e75f      	b.n	80004c6 <__aeabi_fmul+0x15e>
 8000606:	bf00      	nop

08000608 <__aeabi_f2uiz>:
 8000608:	0042      	lsls	r2, r0, #1
 800060a:	d20e      	bcs.n	800062a <__aeabi_f2uiz+0x22>
 800060c:	f1b2 4ffe 	cmp.w	r2, #2130706432	@ 0x7f000000
 8000610:	d30b      	bcc.n	800062a <__aeabi_f2uiz+0x22>
 8000612:	f04f 039e 	mov.w	r3, #158	@ 0x9e
 8000616:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800061a:	d409      	bmi.n	8000630 <__aeabi_f2uiz+0x28>
 800061c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000620:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000624:	fa23 f002 	lsr.w	r0, r3, r2
 8000628:	4770      	bx	lr
 800062a:	f04f 0000 	mov.w	r0, #0
 800062e:	4770      	bx	lr
 8000630:	f112 0f61 	cmn.w	r2, #97	@ 0x61
 8000634:	d101      	bne.n	800063a <__aeabi_f2uiz+0x32>
 8000636:	0242      	lsls	r2, r0, #9
 8000638:	d102      	bne.n	8000640 <__aeabi_f2uiz+0x38>
 800063a:	f04f 30ff 	mov.w	r0, #4294967295
 800063e:	4770      	bx	lr
 8000640:	f04f 0000 	mov.w	r0, #0
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop

08000648 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000648:	b590      	push	{r4, r7, lr}
 800064a:	b085      	sub	sp, #20
 800064c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800064e:	f000 fadf 	bl	8000c10 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000652:	f000 f905 	bl	8000860 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000656:	f000 f99f 	bl	8000998 <MX_GPIO_Init>
  MX_ADC1_Init();
 800065a:	f000 f95f 	bl	800091c <MX_ADC1_Init>
  MX_USB_DEVICE_Init();
 800065e:	f007 fac3 	bl	8007be8 <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 2 */
  HAL_ADC_Start(&hadc1);
 8000662:	486f      	ldr	r0, [pc, #444]	@ (8000820 <main+0x1d8>)
 8000664:	f000 fc32 	bl	8000ecc <HAL_ADC_Start>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  HAL_ADC_PollForConversion(&hadc1,1000);
 8000668:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800066c:	486c      	ldr	r0, [pc, #432]	@ (8000820 <main+0x1d8>)
 800066e:	f000 fcdb 	bl	8001028 <HAL_ADC_PollForConversion>
	  readValue = HAL_ADC_GetValue(&hadc1) ;
 8000672:	486b      	ldr	r0, [pc, #428]	@ (8000820 <main+0x1d8>)
 8000674:	f000 fdde 	bl	8001234 <HAL_ADC_GetValue>
 8000678:	4603      	mov	r3, r0
 800067a:	b29a      	uxth	r2, r3
 800067c:	4b69      	ldr	r3, [pc, #420]	@ (8000824 <main+0x1dc>)
 800067e:	801a      	strh	r2, [r3, #0]
	  click = HAL_GPIO_ReadPin(Click_GPIO_Port,Click_Pin);
 8000680:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000684:	4868      	ldr	r0, [pc, #416]	@ (8000828 <main+0x1e0>)
 8000686:	f001 fa07 	bl	8001a98 <HAL_GPIO_ReadPin>
 800068a:	4603      	mov	r3, r0
 800068c:	461a      	mov	r2, r3
 800068e:	4b67      	ldr	r3, [pc, #412]	@ (800082c <main+0x1e4>)
 8000690:	701a      	strb	r2, [r3, #0]

	  // Update min and max based on new reading
	  if (readValue < adcMin) adcMin = readValue;
 8000692:	4b64      	ldr	r3, [pc, #400]	@ (8000824 <main+0x1dc>)
 8000694:	881b      	ldrh	r3, [r3, #0]
 8000696:	461a      	mov	r2, r3
 8000698:	4b65      	ldr	r3, [pc, #404]	@ (8000830 <main+0x1e8>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	429a      	cmp	r2, r3
 800069e:	d204      	bcs.n	80006aa <main+0x62>
 80006a0:	4b60      	ldr	r3, [pc, #384]	@ (8000824 <main+0x1dc>)
 80006a2:	881b      	ldrh	r3, [r3, #0]
 80006a4:	461a      	mov	r2, r3
 80006a6:	4b62      	ldr	r3, [pc, #392]	@ (8000830 <main+0x1e8>)
 80006a8:	601a      	str	r2, [r3, #0]
	  if (readValue > adcMax) adcMax = readValue;
 80006aa:	4b5e      	ldr	r3, [pc, #376]	@ (8000824 <main+0x1dc>)
 80006ac:	881b      	ldrh	r3, [r3, #0]
 80006ae:	461a      	mov	r2, r3
 80006b0:	4b60      	ldr	r3, [pc, #384]	@ (8000834 <main+0x1ec>)
 80006b2:	681b      	ldr	r3, [r3, #0]
 80006b4:	429a      	cmp	r2, r3
 80006b6:	d904      	bls.n	80006c2 <main+0x7a>
 80006b8:	4b5a      	ldr	r3, [pc, #360]	@ (8000824 <main+0x1dc>)
 80006ba:	881b      	ldrh	r3, [r3, #0]
 80006bc:	461a      	mov	r2, r3
 80006be:	4b5d      	ldr	r3, [pc, #372]	@ (8000834 <main+0x1ec>)
 80006c0:	601a      	str	r2, [r3, #0]

	  static float filteredADC = 0;

	  // Initialize the filter on first run
	  static uint8_t initialized = 0;
	  if (!initialized) {
 80006c2:	4b5d      	ldr	r3, [pc, #372]	@ (8000838 <main+0x1f0>)
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	d10a      	bne.n	80006e0 <main+0x98>
	      filteredADC = readValue;
 80006ca:	4b56      	ldr	r3, [pc, #344]	@ (8000824 <main+0x1dc>)
 80006cc:	881b      	ldrh	r3, [r3, #0]
 80006ce:	4618      	mov	r0, r3
 80006d0:	f7ff fdf2 	bl	80002b8 <__aeabi_ui2f>
 80006d4:	4603      	mov	r3, r0
 80006d6:	4a59      	ldr	r2, [pc, #356]	@ (800083c <main+0x1f4>)
 80006d8:	6013      	str	r3, [r2, #0]
	      initialized = 1;
 80006da:	4b57      	ldr	r3, [pc, #348]	@ (8000838 <main+0x1f0>)
 80006dc:	2201      	movs	r2, #1
 80006de:	701a      	strb	r2, [r3, #0]
	  }

	  // Exponential moving average filter
	  filteredADC = (ALPHA * readValue) + ((1 - ALPHA) * filteredADC);
 80006e0:	4b50      	ldr	r3, [pc, #320]	@ (8000824 <main+0x1dc>)
 80006e2:	881b      	ldrh	r3, [r3, #0]
 80006e4:	4618      	mov	r0, r3
 80006e6:	f7ff fdeb 	bl	80002c0 <__aeabi_i2f>
 80006ea:	4603      	mov	r3, r0
 80006ec:	4954      	ldr	r1, [pc, #336]	@ (8000840 <main+0x1f8>)
 80006ee:	4618      	mov	r0, r3
 80006f0:	f7ff fe3a 	bl	8000368 <__aeabi_fmul>
 80006f4:	4603      	mov	r3, r0
 80006f6:	461c      	mov	r4, r3
 80006f8:	4b50      	ldr	r3, [pc, #320]	@ (800083c <main+0x1f4>)
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	4951      	ldr	r1, [pc, #324]	@ (8000844 <main+0x1fc>)
 80006fe:	4618      	mov	r0, r3
 8000700:	f7ff fe32 	bl	8000368 <__aeabi_fmul>
 8000704:	4603      	mov	r3, r0
 8000706:	4619      	mov	r1, r3
 8000708:	4620      	mov	r0, r4
 800070a:	f7ff fd25 	bl	8000158 <__addsf3>
 800070e:	4603      	mov	r3, r0
 8000710:	461a      	mov	r2, r3
 8000712:	4b4a      	ldr	r3, [pc, #296]	@ (800083c <main+0x1f4>)
 8000714:	601a      	str	r2, [r3, #0]

	  uint8_t mappedValue = (uint8_t)(((filteredADC - adcMin) * 255.0f) / (adcMax - adcMin));
 8000716:	4b49      	ldr	r3, [pc, #292]	@ (800083c <main+0x1f4>)
 8000718:	681c      	ldr	r4, [r3, #0]
 800071a:	4b45      	ldr	r3, [pc, #276]	@ (8000830 <main+0x1e8>)
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	4618      	mov	r0, r3
 8000720:	f7ff fdca 	bl	80002b8 <__aeabi_ui2f>
 8000724:	4603      	mov	r3, r0
 8000726:	4619      	mov	r1, r3
 8000728:	4620      	mov	r0, r4
 800072a:	f7ff fd13 	bl	8000154 <__aeabi_fsub>
 800072e:	4603      	mov	r3, r0
 8000730:	4945      	ldr	r1, [pc, #276]	@ (8000848 <main+0x200>)
 8000732:	4618      	mov	r0, r3
 8000734:	f7ff fe18 	bl	8000368 <__aeabi_fmul>
 8000738:	4603      	mov	r3, r0
 800073a:	461c      	mov	r4, r3
 800073c:	4b3d      	ldr	r3, [pc, #244]	@ (8000834 <main+0x1ec>)
 800073e:	681a      	ldr	r2, [r3, #0]
 8000740:	4b3b      	ldr	r3, [pc, #236]	@ (8000830 <main+0x1e8>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	1ad3      	subs	r3, r2, r3
 8000746:	4618      	mov	r0, r3
 8000748:	f7ff fdb6 	bl	80002b8 <__aeabi_ui2f>
 800074c:	4603      	mov	r3, r0
 800074e:	4619      	mov	r1, r3
 8000750:	4620      	mov	r0, r4
 8000752:	f7ff febd 	bl	80004d0 <__aeabi_fdiv>
 8000756:	4603      	mov	r3, r0
 8000758:	4618      	mov	r0, r3
 800075a:	f7ff ff55 	bl	8000608 <__aeabi_f2uiz>
 800075e:	4603      	mov	r3, r0
 8000760:	70fb      	strb	r3, [r7, #3]

	  reportContainer.buton = click;
 8000762:	4b32      	ldr	r3, [pc, #200]	@ (800082c <main+0x1e4>)
 8000764:	781a      	ldrb	r2, [r3, #0]
 8000766:	4b39      	ldr	r3, [pc, #228]	@ (800084c <main+0x204>)
 8000768:	701a      	strb	r2, [r3, #0]
	  reportContainer.x = mappedValue;
 800076a:	f997 2003 	ldrsb.w	r2, [r7, #3]
 800076e:	4b37      	ldr	r3, [pc, #220]	@ (800084c <main+0x204>)
 8000770:	705a      	strb	r2, [r3, #1]

	  USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &reportContainer,2);
 8000772:	2202      	movs	r2, #2
 8000774:	4935      	ldr	r1, [pc, #212]	@ (800084c <main+0x204>)
 8000776:	4836      	ldr	r0, [pc, #216]	@ (8000850 <main+0x208>)
 8000778:	f006 f94a 	bl	8006a10 <USBD_HID_SendReport>

	  for(int i=0;i<2;i++)
 800077c:	2300      	movs	r3, #0
 800077e:	60fb      	str	r3, [r7, #12]
 8000780:	e046      	b.n	8000810 <main+0x1c8>
		  for(int j=0;j<2;j++)
 8000782:	2300      	movs	r3, #0
 8000784:	60bb      	str	r3, [r7, #8]
 8000786:	e03d      	b.n	8000804 <main+0x1bc>
			  for(int k=0;k<2;k++)
 8000788:	2300      	movs	r3, #0
 800078a:	607b      	str	r3, [r7, #4]
 800078c:	e034      	b.n	80007f8 <main+0x1b0>
			  {
				  prezent = 0;
 800078e:	4b31      	ldr	r3, [pc, #196]	@ (8000854 <main+0x20c>)
 8000790:	2200      	movs	r2, #0
 8000792:	601a      	str	r2, [r3, #0]
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, i);
 8000794:	68fb      	ldr	r3, [r7, #12]
 8000796:	b2db      	uxtb	r3, r3
 8000798:	461a      	mov	r2, r3
 800079a:	2120      	movs	r1, #32
 800079c:	4822      	ldr	r0, [pc, #136]	@ (8000828 <main+0x1e0>)
 800079e:	f001 f992 	bl	8001ac6 <HAL_GPIO_WritePin>
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, j);
 80007a2:	68bb      	ldr	r3, [r7, #8]
 80007a4:	b2db      	uxtb	r3, r3
 80007a6:	461a      	mov	r2, r3
 80007a8:	2140      	movs	r1, #64	@ 0x40
 80007aa:	481f      	ldr	r0, [pc, #124]	@ (8000828 <main+0x1e0>)
 80007ac:	f001 f98b 	bl	8001ac6 <HAL_GPIO_WritePin>
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, k);
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	b2db      	uxtb	r3, r3
 80007b4:	461a      	mov	r2, r3
 80007b6:	2180      	movs	r1, #128	@ 0x80
 80007b8:	481b      	ldr	r0, [pc, #108]	@ (8000828 <main+0x1e0>)
 80007ba:	f001 f984 	bl	8001ac6 <HAL_GPIO_WritePin>

				  prezent = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_10);
 80007be:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80007c2:	4825      	ldr	r0, [pc, #148]	@ (8000858 <main+0x210>)
 80007c4:	f001 f968 	bl	8001a98 <HAL_GPIO_ReadPin>
 80007c8:	4603      	mov	r3, r0
 80007ca:	461a      	mov	r2, r3
 80007cc:	4b21      	ldr	r3, [pc, #132]	@ (8000854 <main+0x20c>)
 80007ce:	601a      	str	r2, [r3, #0]

				  if(prezent)
 80007d0:	4b20      	ldr	r3, [pc, #128]	@ (8000854 <main+0x20c>)
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	2b00      	cmp	r3, #0
 80007d6:	d009      	beq.n	80007ec <main+0x1a4>
				  {
					  viteza = i | j << 1 | k << 2;
 80007d8:	68bb      	ldr	r3, [r7, #8]
 80007da:	005a      	lsls	r2, r3, #1
 80007dc:	68fb      	ldr	r3, [r7, #12]
 80007de:	431a      	orrs	r2, r3
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	009b      	lsls	r3, r3, #2
 80007e4:	4313      	orrs	r3, r2
 80007e6:	4a1d      	ldr	r2, [pc, #116]	@ (800085c <main+0x214>)
 80007e8:	6013      	str	r3, [r2, #0]
 80007ea:	e002      	b.n	80007f2 <main+0x1aa>
				  }
				  else
					  viteza = 0;
 80007ec:	4b1b      	ldr	r3, [pc, #108]	@ (800085c <main+0x214>)
 80007ee:	2200      	movs	r2, #0
 80007f0:	601a      	str	r2, [r3, #0]
			  for(int k=0;k<2;k++)
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	3301      	adds	r3, #1
 80007f6:	607b      	str	r3, [r7, #4]
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	2b01      	cmp	r3, #1
 80007fc:	ddc7      	ble.n	800078e <main+0x146>
		  for(int j=0;j<2;j++)
 80007fe:	68bb      	ldr	r3, [r7, #8]
 8000800:	3301      	adds	r3, #1
 8000802:	60bb      	str	r3, [r7, #8]
 8000804:	68bb      	ldr	r3, [r7, #8]
 8000806:	2b01      	cmp	r3, #1
 8000808:	ddbe      	ble.n	8000788 <main+0x140>
	  for(int i=0;i<2;i++)
 800080a:	68fb      	ldr	r3, [r7, #12]
 800080c:	3301      	adds	r3, #1
 800080e:	60fb      	str	r3, [r7, #12]
 8000810:	68fb      	ldr	r3, [r7, #12]
 8000812:	2b01      	cmp	r3, #1
 8000814:	ddb5      	ble.n	8000782 <main+0x13a>
			  }
	  HAL_Delay(10);
 8000816:	200a      	movs	r0, #10
 8000818:	f000 fa5c 	bl	8000cd4 <HAL_Delay>
  {
 800081c:	e724      	b.n	8000668 <main+0x20>
 800081e:	bf00      	nop
 8000820:	20000184 	.word	0x20000184
 8000824:	200001b4 	.word	0x200001b4
 8000828:	40010800 	.word	0x40010800
 800082c:	200001b6 	.word	0x200001b6
 8000830:	20000000 	.word	0x20000000
 8000834:	200001b8 	.word	0x200001b8
 8000838:	200001c8 	.word	0x200001c8
 800083c:	200001cc 	.word	0x200001cc
 8000840:	3dcccccd 	.word	0x3dcccccd
 8000844:	3f666666 	.word	0x3f666666
 8000848:	437f0000 	.word	0x437f0000
 800084c:	200001bc 	.word	0x200001bc
 8000850:	200001d8 	.word	0x200001d8
 8000854:	200001c0 	.word	0x200001c0
 8000858:	40010c00 	.word	0x40010c00
 800085c:	200001c4 	.word	0x200001c4

08000860 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000860:	b580      	push	{r7, lr}
 8000862:	b094      	sub	sp, #80	@ 0x50
 8000864:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000866:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800086a:	2228      	movs	r2, #40	@ 0x28
 800086c:	2100      	movs	r1, #0
 800086e:	4618      	mov	r0, r3
 8000870:	f007 fd72 	bl	8008358 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000874:	f107 0314 	add.w	r3, r7, #20
 8000878:	2200      	movs	r2, #0
 800087a:	601a      	str	r2, [r3, #0]
 800087c:	605a      	str	r2, [r3, #4]
 800087e:	609a      	str	r2, [r3, #8]
 8000880:	60da      	str	r2, [r3, #12]
 8000882:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000884:	1d3b      	adds	r3, r7, #4
 8000886:	2200      	movs	r2, #0
 8000888:	601a      	str	r2, [r3, #0]
 800088a:	605a      	str	r2, [r3, #4]
 800088c:	609a      	str	r2, [r3, #8]
 800088e:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000890:	2301      	movs	r3, #1
 8000892:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000894:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000898:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 800089a:	2300      	movs	r3, #0
 800089c:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800089e:	2301      	movs	r3, #1
 80008a0:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80008a2:	2302      	movs	r3, #2
 80008a4:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80008a6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80008aa:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 80008ac:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80008b0:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80008b2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80008b6:	4618      	mov	r0, r3
 80008b8:	f002 fe66 	bl	8003588 <HAL_RCC_OscConfig>
 80008bc:	4603      	mov	r3, r0
 80008be:	2b00      	cmp	r3, #0
 80008c0:	d001      	beq.n	80008c6 <SystemClock_Config+0x66>
  {
    Error_Handler();
 80008c2:	f000 f8cf 	bl	8000a64 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80008c6:	230f      	movs	r3, #15
 80008c8:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80008ca:	2302      	movs	r3, #2
 80008cc:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80008ce:	2300      	movs	r3, #0
 80008d0:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80008d2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80008d6:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80008d8:	2300      	movs	r3, #0
 80008da:	627b      	str	r3, [r7, #36]	@ 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80008dc:	f107 0314 	add.w	r3, r7, #20
 80008e0:	2101      	movs	r1, #1
 80008e2:	4618      	mov	r0, r3
 80008e4:	f003 f8d2 	bl	8003a8c <HAL_RCC_ClockConfig>
 80008e8:	4603      	mov	r3, r0
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	d001      	beq.n	80008f2 <SystemClock_Config+0x92>
  {
    Error_Handler();
 80008ee:	f000 f8b9 	bl	8000a64 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_USB;
 80008f2:	2312      	movs	r3, #18
 80008f4:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV4;
 80008f6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80008fa:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 80008fc:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000900:	613b      	str	r3, [r7, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000902:	1d3b      	adds	r3, r7, #4
 8000904:	4618      	mov	r0, r3
 8000906:	f003 fa3b 	bl	8003d80 <HAL_RCCEx_PeriphCLKConfig>
 800090a:	4603      	mov	r3, r0
 800090c:	2b00      	cmp	r3, #0
 800090e:	d001      	beq.n	8000914 <SystemClock_Config+0xb4>
  {
    Error_Handler();
 8000910:	f000 f8a8 	bl	8000a64 <Error_Handler>
  }
}
 8000914:	bf00      	nop
 8000916:	3750      	adds	r7, #80	@ 0x50
 8000918:	46bd      	mov	sp, r7
 800091a:	bd80      	pop	{r7, pc}

0800091c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800091c:	b580      	push	{r7, lr}
 800091e:	b084      	sub	sp, #16
 8000920:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000922:	1d3b      	adds	r3, r7, #4
 8000924:	2200      	movs	r2, #0
 8000926:	601a      	str	r2, [r3, #0]
 8000928:	605a      	str	r2, [r3, #4]
 800092a:	609a      	str	r2, [r3, #8]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 800092c:	4b18      	ldr	r3, [pc, #96]	@ (8000990 <MX_ADC1_Init+0x74>)
 800092e:	4a19      	ldr	r2, [pc, #100]	@ (8000994 <MX_ADC1_Init+0x78>)
 8000930:	601a      	str	r2, [r3, #0]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000932:	4b17      	ldr	r3, [pc, #92]	@ (8000990 <MX_ADC1_Init+0x74>)
 8000934:	2200      	movs	r2, #0
 8000936:	609a      	str	r2, [r3, #8]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8000938:	4b15      	ldr	r3, [pc, #84]	@ (8000990 <MX_ADC1_Init+0x74>)
 800093a:	2201      	movs	r2, #1
 800093c:	731a      	strb	r2, [r3, #12]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800093e:	4b14      	ldr	r3, [pc, #80]	@ (8000990 <MX_ADC1_Init+0x74>)
 8000940:	2200      	movs	r2, #0
 8000942:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000944:	4b12      	ldr	r3, [pc, #72]	@ (8000990 <MX_ADC1_Init+0x74>)
 8000946:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 800094a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800094c:	4b10      	ldr	r3, [pc, #64]	@ (8000990 <MX_ADC1_Init+0x74>)
 800094e:	2200      	movs	r2, #0
 8000950:	605a      	str	r2, [r3, #4]
  hadc1.Init.NbrOfConversion = 1;
 8000952:	4b0f      	ldr	r3, [pc, #60]	@ (8000990 <MX_ADC1_Init+0x74>)
 8000954:	2201      	movs	r2, #1
 8000956:	611a      	str	r2, [r3, #16]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000958:	480d      	ldr	r0, [pc, #52]	@ (8000990 <MX_ADC1_Init+0x74>)
 800095a:	f000 f9df 	bl	8000d1c <HAL_ADC_Init>
 800095e:	4603      	mov	r3, r0
 8000960:	2b00      	cmp	r3, #0
 8000962:	d001      	beq.n	8000968 <MX_ADC1_Init+0x4c>
  {
    Error_Handler();
 8000964:	f000 f87e 	bl	8000a64 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_9;
 8000968:	2309      	movs	r3, #9
 800096a:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800096c:	2301      	movs	r3, #1
 800096e:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 8000970:	2300      	movs	r3, #0
 8000972:	60fb      	str	r3, [r7, #12]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000974:	1d3b      	adds	r3, r7, #4
 8000976:	4619      	mov	r1, r3
 8000978:	4805      	ldr	r0, [pc, #20]	@ (8000990 <MX_ADC1_Init+0x74>)
 800097a:	f000 fc67 	bl	800124c <HAL_ADC_ConfigChannel>
 800097e:	4603      	mov	r3, r0
 8000980:	2b00      	cmp	r3, #0
 8000982:	d001      	beq.n	8000988 <MX_ADC1_Init+0x6c>
  {
    Error_Handler();
 8000984:	f000 f86e 	bl	8000a64 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000988:	bf00      	nop
 800098a:	3710      	adds	r7, #16
 800098c:	46bd      	mov	sp, r7
 800098e:	bd80      	pop	{r7, pc}
 8000990:	20000184 	.word	0x20000184
 8000994:	40012400 	.word	0x40012400

08000998 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000998:	b580      	push	{r7, lr}
 800099a:	b088      	sub	sp, #32
 800099c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800099e:	f107 0310 	add.w	r3, r7, #16
 80009a2:	2200      	movs	r2, #0
 80009a4:	601a      	str	r2, [r3, #0]
 80009a6:	605a      	str	r2, [r3, #4]
 80009a8:	609a      	str	r2, [r3, #8]
 80009aa:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009ac:	4b2a      	ldr	r3, [pc, #168]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009ae:	699b      	ldr	r3, [r3, #24]
 80009b0:	4a29      	ldr	r2, [pc, #164]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009b2:	f043 0320 	orr.w	r3, r3, #32
 80009b6:	6193      	str	r3, [r2, #24]
 80009b8:	4b27      	ldr	r3, [pc, #156]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009ba:	699b      	ldr	r3, [r3, #24]
 80009bc:	f003 0320 	and.w	r3, r3, #32
 80009c0:	60fb      	str	r3, [r7, #12]
 80009c2:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80009c4:	4b24      	ldr	r3, [pc, #144]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4a23      	ldr	r2, [pc, #140]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009ca:	f043 0304 	orr.w	r3, r3, #4
 80009ce:	6193      	str	r3, [r2, #24]
 80009d0:	4b21      	ldr	r3, [pc, #132]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009d2:	699b      	ldr	r3, [r3, #24]
 80009d4:	f003 0304 	and.w	r3, r3, #4
 80009d8:	60bb      	str	r3, [r7, #8]
 80009da:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009dc:	4b1e      	ldr	r3, [pc, #120]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009de:	699b      	ldr	r3, [r3, #24]
 80009e0:	4a1d      	ldr	r2, [pc, #116]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009e2:	f043 0308 	orr.w	r3, r3, #8
 80009e6:	6193      	str	r3, [r2, #24]
 80009e8:	4b1b      	ldr	r3, [pc, #108]	@ (8000a58 <MX_GPIO_Init+0xc0>)
 80009ea:	699b      	ldr	r3, [r3, #24]
 80009ec:	f003 0308 	and.w	r3, r3, #8
 80009f0:	607b      	str	r3, [r7, #4]
 80009f2:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 80009f4:	2200      	movs	r2, #0
 80009f6:	21e0      	movs	r1, #224	@ 0xe0
 80009f8:	4818      	ldr	r0, [pc, #96]	@ (8000a5c <MX_GPIO_Init+0xc4>)
 80009fa:	f001 f864 	bl	8001ac6 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA5 PA6 PA7 */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 80009fe:	23e0      	movs	r3, #224	@ 0xe0
 8000a00:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a02:	2301      	movs	r3, #1
 8000a04:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a06:	2300      	movs	r3, #0
 8000a08:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a0a:	2302      	movs	r3, #2
 8000a0c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000a0e:	f107 0310 	add.w	r3, r7, #16
 8000a12:	4619      	mov	r1, r3
 8000a14:	4811      	ldr	r0, [pc, #68]	@ (8000a5c <MX_GPIO_Init+0xc4>)
 8000a16:	f000 febb 	bl	8001790 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000a1a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000a1e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a20:	2300      	movs	r3, #0
 8000a22:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a24:	2300      	movs	r3, #0
 8000a26:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a28:	f107 0310 	add.w	r3, r7, #16
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	480c      	ldr	r0, [pc, #48]	@ (8000a60 <MX_GPIO_Init+0xc8>)
 8000a30:	f000 feae 	bl	8001790 <HAL_GPIO_Init>

  /*Configure GPIO pin : Click_Pin */
  GPIO_InitStruct.Pin = Click_Pin;
 8000a34:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000a38:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a3e:	2300      	movs	r3, #0
 8000a40:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Click_GPIO_Port, &GPIO_InitStruct);
 8000a42:	f107 0310 	add.w	r3, r7, #16
 8000a46:	4619      	mov	r1, r3
 8000a48:	4804      	ldr	r0, [pc, #16]	@ (8000a5c <MX_GPIO_Init+0xc4>)
 8000a4a:	f000 fea1 	bl	8001790 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000a4e:	bf00      	nop
 8000a50:	3720      	adds	r7, #32
 8000a52:	46bd      	mov	sp, r7
 8000a54:	bd80      	pop	{r7, pc}
 8000a56:	bf00      	nop
 8000a58:	40021000 	.word	0x40021000
 8000a5c:	40010800 	.word	0x40010800
 8000a60:	40010c00 	.word	0x40010c00

08000a64 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000a64:	b480      	push	{r7}
 8000a66:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a68:	b672      	cpsid	i
}
 8000a6a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a6c:	bf00      	nop
 8000a6e:	e7fd      	b.n	8000a6c <Error_Handler+0x8>

08000a70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000a70:	b480      	push	{r7}
 8000a72:	b085      	sub	sp, #20
 8000a74:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000a76:	4b15      	ldr	r3, [pc, #84]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a78:	699b      	ldr	r3, [r3, #24]
 8000a7a:	4a14      	ldr	r2, [pc, #80]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a7c:	f043 0301 	orr.w	r3, r3, #1
 8000a80:	6193      	str	r3, [r2, #24]
 8000a82:	4b12      	ldr	r3, [pc, #72]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a84:	699b      	ldr	r3, [r3, #24]
 8000a86:	f003 0301 	and.w	r3, r3, #1
 8000a8a:	60bb      	str	r3, [r7, #8]
 8000a8c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a8e:	4b0f      	ldr	r3, [pc, #60]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a90:	69db      	ldr	r3, [r3, #28]
 8000a92:	4a0e      	ldr	r2, [pc, #56]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a94:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000a98:	61d3      	str	r3, [r2, #28]
 8000a9a:	4b0c      	ldr	r3, [pc, #48]	@ (8000acc <HAL_MspInit+0x5c>)
 8000a9c:	69db      	ldr	r3, [r3, #28]
 8000a9e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000aa2:	607b      	str	r3, [r7, #4]
 8000aa4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000aa6:	4b0a      	ldr	r3, [pc, #40]	@ (8000ad0 <HAL_MspInit+0x60>)
 8000aa8:	685b      	ldr	r3, [r3, #4]
 8000aaa:	60fb      	str	r3, [r7, #12]
 8000aac:	68fb      	ldr	r3, [r7, #12]
 8000aae:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000ab2:	60fb      	str	r3, [r7, #12]
 8000ab4:	68fb      	ldr	r3, [r7, #12]
 8000ab6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000aba:	60fb      	str	r3, [r7, #12]
 8000abc:	4a04      	ldr	r2, [pc, #16]	@ (8000ad0 <HAL_MspInit+0x60>)
 8000abe:	68fb      	ldr	r3, [r7, #12]
 8000ac0:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000ac2:	bf00      	nop
 8000ac4:	3714      	adds	r7, #20
 8000ac6:	46bd      	mov	sp, r7
 8000ac8:	bc80      	pop	{r7}
 8000aca:	4770      	bx	lr
 8000acc:	40021000 	.word	0x40021000
 8000ad0:	40010000 	.word	0x40010000

08000ad4 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	b088      	sub	sp, #32
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000adc:	f107 0310 	add.w	r3, r7, #16
 8000ae0:	2200      	movs	r2, #0
 8000ae2:	601a      	str	r2, [r3, #0]
 8000ae4:	605a      	str	r2, [r3, #4]
 8000ae6:	609a      	str	r2, [r3, #8]
 8000ae8:	60da      	str	r2, [r3, #12]
  if(hadc->Instance==ADC1)
 8000aea:	687b      	ldr	r3, [r7, #4]
 8000aec:	681b      	ldr	r3, [r3, #0]
 8000aee:	4a14      	ldr	r2, [pc, #80]	@ (8000b40 <HAL_ADC_MspInit+0x6c>)
 8000af0:	4293      	cmp	r3, r2
 8000af2:	d121      	bne.n	8000b38 <HAL_ADC_MspInit+0x64>
  {
    /* USER CODE BEGIN ADC1_MspInit 0 */

    /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000af4:	4b13      	ldr	r3, [pc, #76]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000af6:	699b      	ldr	r3, [r3, #24]
 8000af8:	4a12      	ldr	r2, [pc, #72]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000afa:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000afe:	6193      	str	r3, [r2, #24]
 8000b00:	4b10      	ldr	r3, [pc, #64]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000b02:	699b      	ldr	r3, [r3, #24]
 8000b04:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000b08:	60fb      	str	r3, [r7, #12]
 8000b0a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b0c:	4b0d      	ldr	r3, [pc, #52]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000b0e:	699b      	ldr	r3, [r3, #24]
 8000b10:	4a0c      	ldr	r2, [pc, #48]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000b12:	f043 0308 	orr.w	r3, r3, #8
 8000b16:	6193      	str	r3, [r2, #24]
 8000b18:	4b0a      	ldr	r3, [pc, #40]	@ (8000b44 <HAL_ADC_MspInit+0x70>)
 8000b1a:	699b      	ldr	r3, [r3, #24]
 8000b1c:	f003 0308 	and.w	r3, r3, #8
 8000b20:	60bb      	str	r3, [r7, #8]
 8000b22:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PB1     ------> ADC1_IN9
    */
    GPIO_InitStruct.Pin = Potentiometru_Pin;
 8000b24:	2302      	movs	r3, #2
 8000b26:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000b28:	2303      	movs	r3, #3
 8000b2a:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(Potentiometru_GPIO_Port, &GPIO_InitStruct);
 8000b2c:	f107 0310 	add.w	r3, r7, #16
 8000b30:	4619      	mov	r1, r3
 8000b32:	4805      	ldr	r0, [pc, #20]	@ (8000b48 <HAL_ADC_MspInit+0x74>)
 8000b34:	f000 fe2c 	bl	8001790 <HAL_GPIO_Init>

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 8000b38:	bf00      	nop
 8000b3a:	3720      	adds	r7, #32
 8000b3c:	46bd      	mov	sp, r7
 8000b3e:	bd80      	pop	{r7, pc}
 8000b40:	40012400 	.word	0x40012400
 8000b44:	40021000 	.word	0x40021000
 8000b48:	40010c00 	.word	0x40010c00

08000b4c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000b4c:	b480      	push	{r7}
 8000b4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000b50:	bf00      	nop
 8000b52:	e7fd      	b.n	8000b50 <NMI_Handler+0x4>

08000b54 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000b54:	b480      	push	{r7}
 8000b56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000b58:	bf00      	nop
 8000b5a:	e7fd      	b.n	8000b58 <HardFault_Handler+0x4>

08000b5c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000b5c:	b480      	push	{r7}
 8000b5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000b60:	bf00      	nop
 8000b62:	e7fd      	b.n	8000b60 <MemManage_Handler+0x4>

08000b64 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000b64:	b480      	push	{r7}
 8000b66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000b68:	bf00      	nop
 8000b6a:	e7fd      	b.n	8000b68 <BusFault_Handler+0x4>

08000b6c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000b6c:	b480      	push	{r7}
 8000b6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000b70:	bf00      	nop
 8000b72:	e7fd      	b.n	8000b70 <UsageFault_Handler+0x4>

08000b74 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000b74:	b480      	push	{r7}
 8000b76:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000b78:	bf00      	nop
 8000b7a:	46bd      	mov	sp, r7
 8000b7c:	bc80      	pop	{r7}
 8000b7e:	4770      	bx	lr

08000b80 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000b80:	b480      	push	{r7}
 8000b82:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000b84:	bf00      	nop
 8000b86:	46bd      	mov	sp, r7
 8000b88:	bc80      	pop	{r7}
 8000b8a:	4770      	bx	lr

08000b8c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000b8c:	b480      	push	{r7}
 8000b8e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000b90:	bf00      	nop
 8000b92:	46bd      	mov	sp, r7
 8000b94:	bc80      	pop	{r7}
 8000b96:	4770      	bx	lr

08000b98 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000b98:	b580      	push	{r7, lr}
 8000b9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000b9c:	f000 f87e 	bl	8000c9c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ba0:	bf00      	nop
 8000ba2:	bd80      	pop	{r7, pc}

08000ba4 <USB_LP_CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles USB low priority or CAN RX0 interrupts.
  */
void USB_LP_CAN1_RX0_IRQHandler(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 0 */

  /* USER CODE END USB_LP_CAN1_RX0_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_FS);
 8000ba8:	4802      	ldr	r0, [pc, #8]	@ (8000bb4 <USB_LP_CAN1_RX0_IRQHandler+0x10>)
 8000baa:	f001 f8c0 	bl	8001d2e <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN USB_LP_CAN1_RX0_IRQn 1 */

  /* USER CODE END USB_LP_CAN1_RX0_IRQn 1 */
}
 8000bae:	bf00      	nop
 8000bb0:	bd80      	pop	{r7, pc}
 8000bb2:	bf00      	nop
 8000bb4:	2000069c 	.word	0x2000069c

08000bb8 <SystemInit>:
 8000bb8:	b480      	push	{r7}
 8000bba:	af00      	add	r7, sp, #0
 8000bbc:	bf00      	nop
 8000bbe:	46bd      	mov	sp, r7
 8000bc0:	bc80      	pop	{r7}
 8000bc2:	4770      	bx	lr

08000bc4 <Reset_Handler>:
 8000bc4:	f7ff fff8 	bl	8000bb8 <SystemInit>
 8000bc8:	480b      	ldr	r0, [pc, #44]	@ (8000bf8 <LoopFillZerobss+0xe>)
 8000bca:	490c      	ldr	r1, [pc, #48]	@ (8000bfc <LoopFillZerobss+0x12>)
 8000bcc:	4a0c      	ldr	r2, [pc, #48]	@ (8000c00 <LoopFillZerobss+0x16>)
 8000bce:	2300      	movs	r3, #0
 8000bd0:	e002      	b.n	8000bd8 <LoopCopyDataInit>

08000bd2 <CopyDataInit>:
 8000bd2:	58d4      	ldr	r4, [r2, r3]
 8000bd4:	50c4      	str	r4, [r0, r3]
 8000bd6:	3304      	adds	r3, #4

08000bd8 <LoopCopyDataInit>:
 8000bd8:	18c4      	adds	r4, r0, r3
 8000bda:	428c      	cmp	r4, r1
 8000bdc:	d3f9      	bcc.n	8000bd2 <CopyDataInit>
 8000bde:	4a09      	ldr	r2, [pc, #36]	@ (8000c04 <LoopFillZerobss+0x1a>)
 8000be0:	4c09      	ldr	r4, [pc, #36]	@ (8000c08 <LoopFillZerobss+0x1e>)
 8000be2:	2300      	movs	r3, #0
 8000be4:	e001      	b.n	8000bea <LoopFillZerobss>

08000be6 <FillZerobss>:
 8000be6:	6013      	str	r3, [r2, #0]
 8000be8:	3204      	adds	r2, #4

08000bea <LoopFillZerobss>:
 8000bea:	42a2      	cmp	r2, r4
 8000bec:	d3fb      	bcc.n	8000be6 <FillZerobss>
 8000bee:	f007 fbbb 	bl	8008368 <__libc_init_array>
 8000bf2:	f7ff fd29 	bl	8000648 <main>
 8000bf6:	4770      	bx	lr
 8000bf8:	20000000 	.word	0x20000000
 8000bfc:	20000168 	.word	0x20000168
 8000c00:	08008458 	.word	0x08008458
 8000c04:	20000168 	.word	0x20000168
 8000c08:	20000988 	.word	0x20000988

08000c0c <ADC1_2_IRQHandler>:
 8000c0c:	e7fe      	b.n	8000c0c <ADC1_2_IRQHandler>
	...

08000c10 <HAL_Init>:
 8000c10:	b580      	push	{r7, lr}
 8000c12:	af00      	add	r7, sp, #0
 8000c14:	4b08      	ldr	r3, [pc, #32]	@ (8000c38 <HAL_Init+0x28>)
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a07      	ldr	r2, [pc, #28]	@ (8000c38 <HAL_Init+0x28>)
 8000c1a:	f043 0310 	orr.w	r3, r3, #16
 8000c1e:	6013      	str	r3, [r2, #0]
 8000c20:	2003      	movs	r0, #3
 8000c22:	f000 fd73 	bl	800170c <HAL_NVIC_SetPriorityGrouping>
 8000c26:	200f      	movs	r0, #15
 8000c28:	f000 f808 	bl	8000c3c <HAL_InitTick>
 8000c2c:	f7ff ff20 	bl	8000a70 <HAL_MspInit>
 8000c30:	2300      	movs	r3, #0
 8000c32:	4618      	mov	r0, r3
 8000c34:	bd80      	pop	{r7, pc}
 8000c36:	bf00      	nop
 8000c38:	40022000 	.word	0x40022000

08000c3c <HAL_InitTick>:
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	b082      	sub	sp, #8
 8000c40:	af00      	add	r7, sp, #0
 8000c42:	6078      	str	r0, [r7, #4]
 8000c44:	4b12      	ldr	r3, [pc, #72]	@ (8000c90 <HAL_InitTick+0x54>)
 8000c46:	681a      	ldr	r2, [r3, #0]
 8000c48:	4b12      	ldr	r3, [pc, #72]	@ (8000c94 <HAL_InitTick+0x58>)
 8000c4a:	781b      	ldrb	r3, [r3, #0]
 8000c4c:	4619      	mov	r1, r3
 8000c4e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000c52:	fbb3 f3f1 	udiv	r3, r3, r1
 8000c56:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c5a:	4618      	mov	r0, r3
 8000c5c:	f000 fd8b 	bl	8001776 <HAL_SYSTICK_Config>
 8000c60:	4603      	mov	r3, r0
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	d001      	beq.n	8000c6a <HAL_InitTick+0x2e>
 8000c66:	2301      	movs	r3, #1
 8000c68:	e00e      	b.n	8000c88 <HAL_InitTick+0x4c>
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	2b0f      	cmp	r3, #15
 8000c6e:	d80a      	bhi.n	8000c86 <HAL_InitTick+0x4a>
 8000c70:	2200      	movs	r2, #0
 8000c72:	6879      	ldr	r1, [r7, #4]
 8000c74:	f04f 30ff 	mov.w	r0, #4294967295
 8000c78:	f000 fd53 	bl	8001722 <HAL_NVIC_SetPriority>
 8000c7c:	4a06      	ldr	r2, [pc, #24]	@ (8000c98 <HAL_InitTick+0x5c>)
 8000c7e:	687b      	ldr	r3, [r7, #4]
 8000c80:	6013      	str	r3, [r2, #0]
 8000c82:	2300      	movs	r3, #0
 8000c84:	e000      	b.n	8000c88 <HAL_InitTick+0x4c>
 8000c86:	2301      	movs	r3, #1
 8000c88:	4618      	mov	r0, r3
 8000c8a:	3708      	adds	r7, #8
 8000c8c:	46bd      	mov	sp, r7
 8000c8e:	bd80      	pop	{r7, pc}
 8000c90:	20000004 	.word	0x20000004
 8000c94:	2000000c 	.word	0x2000000c
 8000c98:	20000008 	.word	0x20000008

08000c9c <HAL_IncTick>:
 8000c9c:	b480      	push	{r7}
 8000c9e:	af00      	add	r7, sp, #0
 8000ca0:	4b05      	ldr	r3, [pc, #20]	@ (8000cb8 <HAL_IncTick+0x1c>)
 8000ca2:	781b      	ldrb	r3, [r3, #0]
 8000ca4:	461a      	mov	r2, r3
 8000ca6:	4b05      	ldr	r3, [pc, #20]	@ (8000cbc <HAL_IncTick+0x20>)
 8000ca8:	681b      	ldr	r3, [r3, #0]
 8000caa:	4413      	add	r3, r2
 8000cac:	4a03      	ldr	r2, [pc, #12]	@ (8000cbc <HAL_IncTick+0x20>)
 8000cae:	6013      	str	r3, [r2, #0]
 8000cb0:	bf00      	nop
 8000cb2:	46bd      	mov	sp, r7
 8000cb4:	bc80      	pop	{r7}
 8000cb6:	4770      	bx	lr
 8000cb8:	2000000c 	.word	0x2000000c
 8000cbc:	200001d0 	.word	0x200001d0

08000cc0 <HAL_GetTick>:
 8000cc0:	b480      	push	{r7}
 8000cc2:	af00      	add	r7, sp, #0
 8000cc4:	4b02      	ldr	r3, [pc, #8]	@ (8000cd0 <HAL_GetTick+0x10>)
 8000cc6:	681b      	ldr	r3, [r3, #0]
 8000cc8:	4618      	mov	r0, r3
 8000cca:	46bd      	mov	sp, r7
 8000ccc:	bc80      	pop	{r7}
 8000cce:	4770      	bx	lr
 8000cd0:	200001d0 	.word	0x200001d0

08000cd4 <HAL_Delay>:
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	b084      	sub	sp, #16
 8000cd8:	af00      	add	r7, sp, #0
 8000cda:	6078      	str	r0, [r7, #4]
 8000cdc:	f7ff fff0 	bl	8000cc0 <HAL_GetTick>
 8000ce0:	60b8      	str	r0, [r7, #8]
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	60fb      	str	r3, [r7, #12]
 8000ce6:	68fb      	ldr	r3, [r7, #12]
 8000ce8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000cec:	d005      	beq.n	8000cfa <HAL_Delay+0x26>
 8000cee:	4b0a      	ldr	r3, [pc, #40]	@ (8000d18 <HAL_Delay+0x44>)
 8000cf0:	781b      	ldrb	r3, [r3, #0]
 8000cf2:	461a      	mov	r2, r3
 8000cf4:	68fb      	ldr	r3, [r7, #12]
 8000cf6:	4413      	add	r3, r2
 8000cf8:	60fb      	str	r3, [r7, #12]
 8000cfa:	bf00      	nop
 8000cfc:	f7ff ffe0 	bl	8000cc0 <HAL_GetTick>
 8000d00:	4602      	mov	r2, r0
 8000d02:	68bb      	ldr	r3, [r7, #8]
 8000d04:	1ad3      	subs	r3, r2, r3
 8000d06:	68fa      	ldr	r2, [r7, #12]
 8000d08:	429a      	cmp	r2, r3
 8000d0a:	d8f7      	bhi.n	8000cfc <HAL_Delay+0x28>
 8000d0c:	bf00      	nop
 8000d0e:	bf00      	nop
 8000d10:	3710      	adds	r7, #16
 8000d12:	46bd      	mov	sp, r7
 8000d14:	bd80      	pop	{r7, pc}
 8000d16:	bf00      	nop
 8000d18:	2000000c 	.word	0x2000000c

08000d1c <HAL_ADC_Init>:
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	b086      	sub	sp, #24
 8000d20:	af00      	add	r7, sp, #0
 8000d22:	6078      	str	r0, [r7, #4]
 8000d24:	2300      	movs	r3, #0
 8000d26:	75fb      	strb	r3, [r7, #23]
 8000d28:	2300      	movs	r3, #0
 8000d2a:	613b      	str	r3, [r7, #16]
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	60bb      	str	r3, [r7, #8]
 8000d30:	2300      	movs	r3, #0
 8000d32:	60fb      	str	r3, [r7, #12]
 8000d34:	687b      	ldr	r3, [r7, #4]
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d101      	bne.n	8000d3e <HAL_ADC_Init+0x22>
 8000d3a:	2301      	movs	r3, #1
 8000d3c:	e0be      	b.n	8000ebc <HAL_ADC_Init+0x1a0>
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	689b      	ldr	r3, [r3, #8]
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	687b      	ldr	r3, [r7, #4]
 8000d46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000d48:	2b00      	cmp	r3, #0
 8000d4a:	d109      	bne.n	8000d60 <HAL_ADC_Init+0x44>
 8000d4c:	687b      	ldr	r3, [r7, #4]
 8000d4e:	2200      	movs	r2, #0
 8000d50:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	2200      	movs	r2, #0
 8000d56:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8000d5a:	6878      	ldr	r0, [r7, #4]
 8000d5c:	f7ff feba 	bl	8000ad4 <HAL_ADC_MspInit>
 8000d60:	6878      	ldr	r0, [r7, #4]
 8000d62:	f000 fbc5 	bl	80014f0 <ADC_ConversionStop_Disable>
 8000d66:	4603      	mov	r3, r0
 8000d68:	75fb      	strb	r3, [r7, #23]
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000d6e:	f003 0310 	and.w	r3, r3, #16
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	f040 8099 	bne.w	8000eaa <HAL_ADC_Init+0x18e>
 8000d78:	7dfb      	ldrb	r3, [r7, #23]
 8000d7a:	2b00      	cmp	r3, #0
 8000d7c:	f040 8095 	bne.w	8000eaa <HAL_ADC_Init+0x18e>
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000d84:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8000d88:	f023 0302 	bic.w	r3, r3, #2
 8000d8c:	f043 0202 	orr.w	r2, r3, #2
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	629a      	str	r2, [r3, #40]	@ 0x28
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	685a      	ldr	r2, [r3, #4]
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	69db      	ldr	r3, [r3, #28]
 8000d9c:	431a      	orrs	r2, r3
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	7b1b      	ldrb	r3, [r3, #12]
 8000da2:	005b      	lsls	r3, r3, #1
 8000da4:	4313      	orrs	r3, r2
 8000da6:	68ba      	ldr	r2, [r7, #8]
 8000da8:	4313      	orrs	r3, r2
 8000daa:	60bb      	str	r3, [r7, #8]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	689b      	ldr	r3, [r3, #8]
 8000db0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8000db4:	d003      	beq.n	8000dbe <HAL_ADC_Init+0xa2>
 8000db6:	687b      	ldr	r3, [r7, #4]
 8000db8:	689b      	ldr	r3, [r3, #8]
 8000dba:	2b01      	cmp	r3, #1
 8000dbc:	d102      	bne.n	8000dc4 <HAL_ADC_Init+0xa8>
 8000dbe:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000dc2:	e000      	b.n	8000dc6 <HAL_ADC_Init+0xaa>
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	693a      	ldr	r2, [r7, #16]
 8000dc8:	4313      	orrs	r3, r2
 8000dca:	613b      	str	r3, [r7, #16]
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	7d1b      	ldrb	r3, [r3, #20]
 8000dd0:	2b01      	cmp	r3, #1
 8000dd2:	d119      	bne.n	8000e08 <HAL_ADC_Init+0xec>
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	7b1b      	ldrb	r3, [r3, #12]
 8000dd8:	2b00      	cmp	r3, #0
 8000dda:	d109      	bne.n	8000df0 <HAL_ADC_Init+0xd4>
 8000ddc:	687b      	ldr	r3, [r7, #4]
 8000dde:	699b      	ldr	r3, [r3, #24]
 8000de0:	3b01      	subs	r3, #1
 8000de2:	035a      	lsls	r2, r3, #13
 8000de4:	693b      	ldr	r3, [r7, #16]
 8000de6:	4313      	orrs	r3, r2
 8000de8:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000dec:	613b      	str	r3, [r7, #16]
 8000dee:	e00b      	b.n	8000e08 <HAL_ADC_Init+0xec>
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000df4:	f043 0220 	orr.w	r2, r3, #32
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	629a      	str	r2, [r3, #40]	@ 0x28
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000e00:	f043 0201 	orr.w	r2, r3, #1
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000e08:	687b      	ldr	r3, [r7, #4]
 8000e0a:	681b      	ldr	r3, [r3, #0]
 8000e0c:	685b      	ldr	r3, [r3, #4]
 8000e0e:	f423 4169 	bic.w	r1, r3, #59648	@ 0xe900
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	693a      	ldr	r2, [r7, #16]
 8000e18:	430a      	orrs	r2, r1
 8000e1a:	605a      	str	r2, [r3, #4]
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	681b      	ldr	r3, [r3, #0]
 8000e20:	689a      	ldr	r2, [r3, #8]
 8000e22:	4b28      	ldr	r3, [pc, #160]	@ (8000ec4 <HAL_ADC_Init+0x1a8>)
 8000e24:	4013      	ands	r3, r2
 8000e26:	687a      	ldr	r2, [r7, #4]
 8000e28:	6812      	ldr	r2, [r2, #0]
 8000e2a:	68b9      	ldr	r1, [r7, #8]
 8000e2c:	430b      	orrs	r3, r1
 8000e2e:	6093      	str	r3, [r2, #8]
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	689b      	ldr	r3, [r3, #8]
 8000e34:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8000e38:	d003      	beq.n	8000e42 <HAL_ADC_Init+0x126>
 8000e3a:	687b      	ldr	r3, [r7, #4]
 8000e3c:	689b      	ldr	r3, [r3, #8]
 8000e3e:	2b01      	cmp	r3, #1
 8000e40:	d104      	bne.n	8000e4c <HAL_ADC_Init+0x130>
 8000e42:	687b      	ldr	r3, [r7, #4]
 8000e44:	691b      	ldr	r3, [r3, #16]
 8000e46:	3b01      	subs	r3, #1
 8000e48:	051b      	lsls	r3, r3, #20
 8000e4a:	60fb      	str	r3, [r7, #12]
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000e52:	f423 0170 	bic.w	r1, r3, #15728640	@ 0xf00000
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	681b      	ldr	r3, [r3, #0]
 8000e5a:	68fa      	ldr	r2, [r7, #12]
 8000e5c:	430a      	orrs	r2, r1
 8000e5e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000e60:	687b      	ldr	r3, [r7, #4]
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	689a      	ldr	r2, [r3, #8]
 8000e66:	4b18      	ldr	r3, [pc, #96]	@ (8000ec8 <HAL_ADC_Init+0x1ac>)
 8000e68:	4013      	ands	r3, r2
 8000e6a:	68ba      	ldr	r2, [r7, #8]
 8000e6c:	429a      	cmp	r2, r3
 8000e6e:	d10b      	bne.n	8000e88 <HAL_ADC_Init+0x16c>
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	2200      	movs	r2, #0
 8000e74:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000e76:	687b      	ldr	r3, [r7, #4]
 8000e78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000e7a:	f023 0303 	bic.w	r3, r3, #3
 8000e7e:	f043 0201 	orr.w	r2, r3, #1
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	629a      	str	r2, [r3, #40]	@ 0x28
 8000e86:	e018      	b.n	8000eba <HAL_ADC_Init+0x19e>
 8000e88:	687b      	ldr	r3, [r7, #4]
 8000e8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000e8c:	f023 0312 	bic.w	r3, r3, #18
 8000e90:	f043 0210 	orr.w	r2, r3, #16
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	629a      	str	r2, [r3, #40]	@ 0x28
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000e9c:	f043 0201 	orr.w	r2, r3, #1
 8000ea0:	687b      	ldr	r3, [r7, #4]
 8000ea2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000ea4:	2301      	movs	r3, #1
 8000ea6:	75fb      	strb	r3, [r7, #23]
 8000ea8:	e007      	b.n	8000eba <HAL_ADC_Init+0x19e>
 8000eaa:	687b      	ldr	r3, [r7, #4]
 8000eac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000eae:	f043 0210 	orr.w	r2, r3, #16
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	629a      	str	r2, [r3, #40]	@ 0x28
 8000eb6:	2301      	movs	r3, #1
 8000eb8:	75fb      	strb	r3, [r7, #23]
 8000eba:	7dfb      	ldrb	r3, [r7, #23]
 8000ebc:	4618      	mov	r0, r3
 8000ebe:	3718      	adds	r7, #24
 8000ec0:	46bd      	mov	sp, r7
 8000ec2:	bd80      	pop	{r7, pc}
 8000ec4:	ffe1f7fd 	.word	0xffe1f7fd
 8000ec8:	ff1f0efe 	.word	0xff1f0efe

08000ecc <HAL_ADC_Start>:
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b084      	sub	sp, #16
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	6078      	str	r0, [r7, #4]
 8000ed4:	2300      	movs	r3, #0
 8000ed6:	73fb      	strb	r3, [r7, #15]
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8000ede:	2b01      	cmp	r3, #1
 8000ee0:	d101      	bne.n	8000ee6 <HAL_ADC_Start+0x1a>
 8000ee2:	2302      	movs	r3, #2
 8000ee4:	e098      	b.n	8001018 <HAL_ADC_Start+0x14c>
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	2201      	movs	r2, #1
 8000eea:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8000eee:	6878      	ldr	r0, [r7, #4]
 8000ef0:	f000 faa4 	bl	800143c <ADC_Enable>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	73fb      	strb	r3, [r7, #15]
 8000ef8:	7bfb      	ldrb	r3, [r7, #15]
 8000efa:	2b00      	cmp	r3, #0
 8000efc:	f040 8087 	bne.w	800100e <HAL_ADC_Start+0x142>
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f04:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8000f08:	f023 0301 	bic.w	r3, r3, #1
 8000f0c:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	629a      	str	r2, [r3, #40]	@ 0x28
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	4a41      	ldr	r2, [pc, #260]	@ (8001020 <HAL_ADC_Start+0x154>)
 8000f1a:	4293      	cmp	r3, r2
 8000f1c:	d105      	bne.n	8000f2a <HAL_ADC_Start+0x5e>
 8000f1e:	4b41      	ldr	r3, [pc, #260]	@ (8001024 <HAL_ADC_Start+0x158>)
 8000f20:	685b      	ldr	r3, [r3, #4]
 8000f22:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d115      	bne.n	8000f56 <HAL_ADC_Start+0x8a>
 8000f2a:	687b      	ldr	r3, [r7, #4]
 8000f2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f2e:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8000f32:	687b      	ldr	r3, [r7, #4]
 8000f34:	629a      	str	r2, [r3, #40]	@ 0x28
 8000f36:	687b      	ldr	r3, [r7, #4]
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	685b      	ldr	r3, [r3, #4]
 8000f3c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d026      	beq.n	8000f92 <HAL_ADC_Start+0xc6>
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f48:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000f4c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	629a      	str	r2, [r3, #40]	@ 0x28
 8000f54:	e01d      	b.n	8000f92 <HAL_ADC_Start+0xc6>
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f5a:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8000f5e:	687b      	ldr	r3, [r7, #4]
 8000f60:	629a      	str	r2, [r3, #40]	@ 0x28
 8000f62:	687b      	ldr	r3, [r7, #4]
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	4a2f      	ldr	r2, [pc, #188]	@ (8001024 <HAL_ADC_Start+0x158>)
 8000f68:	4293      	cmp	r3, r2
 8000f6a:	d004      	beq.n	8000f76 <HAL_ADC_Start+0xaa>
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	681b      	ldr	r3, [r3, #0]
 8000f70:	4a2b      	ldr	r2, [pc, #172]	@ (8001020 <HAL_ADC_Start+0x154>)
 8000f72:	4293      	cmp	r3, r2
 8000f74:	d10d      	bne.n	8000f92 <HAL_ADC_Start+0xc6>
 8000f76:	4b2b      	ldr	r3, [pc, #172]	@ (8001024 <HAL_ADC_Start+0x158>)
 8000f78:	685b      	ldr	r3, [r3, #4]
 8000f7a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	d007      	beq.n	8000f92 <HAL_ADC_Start+0xc6>
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f86:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000f8a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8000f8e:	687b      	ldr	r3, [r7, #4]
 8000f90:	629a      	str	r2, [r3, #40]	@ 0x28
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000f96:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d006      	beq.n	8000fac <HAL_ADC_Start+0xe0>
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000fa2:	f023 0206 	bic.w	r2, r3, #6
 8000fa6:	687b      	ldr	r3, [r7, #4]
 8000fa8:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000faa:	e002      	b.n	8000fb2 <HAL_ADC_Start+0xe6>
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	2200      	movs	r2, #0
 8000fb0:	62da      	str	r2, [r3, #44]	@ 0x2c
 8000fb2:	687b      	ldr	r3, [r7, #4]
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	f06f 0202 	mvn.w	r2, #2
 8000fc2:	601a      	str	r2, [r3, #0]
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	689b      	ldr	r3, [r3, #8]
 8000fca:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 8000fce:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 8000fd2:	d113      	bne.n	8000ffc <HAL_ADC_Start+0x130>
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	4a11      	ldr	r2, [pc, #68]	@ (8001020 <HAL_ADC_Start+0x154>)
 8000fda:	4293      	cmp	r3, r2
 8000fdc:	d105      	bne.n	8000fea <HAL_ADC_Start+0x11e>
 8000fde:	4b11      	ldr	r3, [pc, #68]	@ (8001024 <HAL_ADC_Start+0x158>)
 8000fe0:	685b      	ldr	r3, [r3, #4]
 8000fe2:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 8000fe6:	2b00      	cmp	r3, #0
 8000fe8:	d108      	bne.n	8000ffc <HAL_ADC_Start+0x130>
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	689a      	ldr	r2, [r3, #8]
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	f442 02a0 	orr.w	r2, r2, #5242880	@ 0x500000
 8000ff8:	609a      	str	r2, [r3, #8]
 8000ffa:	e00c      	b.n	8001016 <HAL_ADC_Start+0x14a>
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	689a      	ldr	r2, [r3, #8]
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800100a:	609a      	str	r2, [r3, #8]
 800100c:	e003      	b.n	8001016 <HAL_ADC_Start+0x14a>
 800100e:	687b      	ldr	r3, [r7, #4]
 8001010:	2200      	movs	r2, #0
 8001012:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001016:	7bfb      	ldrb	r3, [r7, #15]
 8001018:	4618      	mov	r0, r3
 800101a:	3710      	adds	r7, #16
 800101c:	46bd      	mov	sp, r7
 800101e:	bd80      	pop	{r7, pc}
 8001020:	40012800 	.word	0x40012800
 8001024:	40012400 	.word	0x40012400

08001028 <HAL_ADC_PollForConversion>:
 8001028:	b590      	push	{r4, r7, lr}
 800102a:	b087      	sub	sp, #28
 800102c:	af00      	add	r7, sp, #0
 800102e:	6078      	str	r0, [r7, #4]
 8001030:	6039      	str	r1, [r7, #0]
 8001032:	2300      	movs	r3, #0
 8001034:	617b      	str	r3, [r7, #20]
 8001036:	2300      	movs	r3, #0
 8001038:	60fb      	str	r3, [r7, #12]
 800103a:	2300      	movs	r3, #0
 800103c:	613b      	str	r3, [r7, #16]
 800103e:	f7ff fe3f 	bl	8000cc0 <HAL_GetTick>
 8001042:	6178      	str	r0, [r7, #20]
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	689b      	ldr	r3, [r3, #8]
 800104a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800104e:	2b00      	cmp	r3, #0
 8001050:	d00b      	beq.n	800106a <HAL_ADC_PollForConversion+0x42>
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001056:	f043 0220 	orr.w	r2, r3, #32
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	629a      	str	r2, [r3, #40]	@ 0x28
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	2200      	movs	r2, #0
 8001062:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001066:	2301      	movs	r3, #1
 8001068:	e0d3      	b.n	8001212 <HAL_ADC_PollForConversion+0x1ea>
 800106a:	687b      	ldr	r3, [r7, #4]
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	685b      	ldr	r3, [r3, #4]
 8001070:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001074:	2b00      	cmp	r3, #0
 8001076:	d131      	bne.n	80010dc <HAL_ADC_PollForConversion+0xb4>
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800107e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 8001082:	2b00      	cmp	r3, #0
 8001084:	d12a      	bne.n	80010dc <HAL_ADC_PollForConversion+0xb4>
 8001086:	e021      	b.n	80010cc <HAL_ADC_PollForConversion+0xa4>
 8001088:	683b      	ldr	r3, [r7, #0]
 800108a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800108e:	d01d      	beq.n	80010cc <HAL_ADC_PollForConversion+0xa4>
 8001090:	683b      	ldr	r3, [r7, #0]
 8001092:	2b00      	cmp	r3, #0
 8001094:	d007      	beq.n	80010a6 <HAL_ADC_PollForConversion+0x7e>
 8001096:	f7ff fe13 	bl	8000cc0 <HAL_GetTick>
 800109a:	4602      	mov	r2, r0
 800109c:	697b      	ldr	r3, [r7, #20]
 800109e:	1ad3      	subs	r3, r2, r3
 80010a0:	683a      	ldr	r2, [r7, #0]
 80010a2:	429a      	cmp	r2, r3
 80010a4:	d212      	bcs.n	80010cc <HAL_ADC_PollForConversion+0xa4>
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	681b      	ldr	r3, [r3, #0]
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	f003 0302 	and.w	r3, r3, #2
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d10b      	bne.n	80010cc <HAL_ADC_PollForConversion+0xa4>
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80010b8:	f043 0204 	orr.w	r2, r3, #4
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	629a      	str	r2, [r3, #40]	@ 0x28
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	2200      	movs	r2, #0
 80010c4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80010c8:	2303      	movs	r3, #3
 80010ca:	e0a2      	b.n	8001212 <HAL_ADC_PollForConversion+0x1ea>
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	f003 0302 	and.w	r3, r3, #2
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d0d6      	beq.n	8001088 <HAL_ADC_PollForConversion+0x60>
 80010da:	e070      	b.n	80011be <HAL_ADC_PollForConversion+0x196>
 80010dc:	4b4f      	ldr	r3, [pc, #316]	@ (800121c <HAL_ADC_PollForConversion+0x1f4>)
 80010de:	681c      	ldr	r4, [r3, #0]
 80010e0:	2002      	movs	r0, #2
 80010e2:	f002 ff03 	bl	8003eec <HAL_RCCEx_GetPeriphCLKFreq>
 80010e6:	4603      	mov	r3, r0
 80010e8:	fbb4 f2f3 	udiv	r2, r4, r3
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	681b      	ldr	r3, [r3, #0]
 80010f0:	6919      	ldr	r1, [r3, #16]
 80010f2:	4b4b      	ldr	r3, [pc, #300]	@ (8001220 <HAL_ADC_PollForConversion+0x1f8>)
 80010f4:	400b      	ands	r3, r1
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d118      	bne.n	800112c <HAL_ADC_PollForConversion+0x104>
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	68d9      	ldr	r1, [r3, #12]
 8001100:	4b48      	ldr	r3, [pc, #288]	@ (8001224 <HAL_ADC_PollForConversion+0x1fc>)
 8001102:	400b      	ands	r3, r1
 8001104:	2b00      	cmp	r3, #0
 8001106:	d111      	bne.n	800112c <HAL_ADC_PollForConversion+0x104>
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	6919      	ldr	r1, [r3, #16]
 800110e:	4b46      	ldr	r3, [pc, #280]	@ (8001228 <HAL_ADC_PollForConversion+0x200>)
 8001110:	400b      	ands	r3, r1
 8001112:	2b00      	cmp	r3, #0
 8001114:	d108      	bne.n	8001128 <HAL_ADC_PollForConversion+0x100>
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	68d9      	ldr	r1, [r3, #12]
 800111c:	4b43      	ldr	r3, [pc, #268]	@ (800122c <HAL_ADC_PollForConversion+0x204>)
 800111e:	400b      	ands	r3, r1
 8001120:	2b00      	cmp	r3, #0
 8001122:	d101      	bne.n	8001128 <HAL_ADC_PollForConversion+0x100>
 8001124:	2314      	movs	r3, #20
 8001126:	e020      	b.n	800116a <HAL_ADC_PollForConversion+0x142>
 8001128:	2329      	movs	r3, #41	@ 0x29
 800112a:	e01e      	b.n	800116a <HAL_ADC_PollForConversion+0x142>
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	6919      	ldr	r1, [r3, #16]
 8001132:	4b3d      	ldr	r3, [pc, #244]	@ (8001228 <HAL_ADC_PollForConversion+0x200>)
 8001134:	400b      	ands	r3, r1
 8001136:	2b00      	cmp	r3, #0
 8001138:	d106      	bne.n	8001148 <HAL_ADC_PollForConversion+0x120>
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	681b      	ldr	r3, [r3, #0]
 800113e:	68d9      	ldr	r1, [r3, #12]
 8001140:	4b3a      	ldr	r3, [pc, #232]	@ (800122c <HAL_ADC_PollForConversion+0x204>)
 8001142:	400b      	ands	r3, r1
 8001144:	2b00      	cmp	r3, #0
 8001146:	d00d      	beq.n	8001164 <HAL_ADC_PollForConversion+0x13c>
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	6919      	ldr	r1, [r3, #16]
 800114e:	4b38      	ldr	r3, [pc, #224]	@ (8001230 <HAL_ADC_PollForConversion+0x208>)
 8001150:	400b      	ands	r3, r1
 8001152:	2b00      	cmp	r3, #0
 8001154:	d108      	bne.n	8001168 <HAL_ADC_PollForConversion+0x140>
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	68d9      	ldr	r1, [r3, #12]
 800115c:	4b34      	ldr	r3, [pc, #208]	@ (8001230 <HAL_ADC_PollForConversion+0x208>)
 800115e:	400b      	ands	r3, r1
 8001160:	2b00      	cmp	r3, #0
 8001162:	d101      	bne.n	8001168 <HAL_ADC_PollForConversion+0x140>
 8001164:	2354      	movs	r3, #84	@ 0x54
 8001166:	e000      	b.n	800116a <HAL_ADC_PollForConversion+0x142>
 8001168:	23fc      	movs	r3, #252	@ 0xfc
 800116a:	fb02 f303 	mul.w	r3, r2, r3
 800116e:	613b      	str	r3, [r7, #16]
 8001170:	e021      	b.n	80011b6 <HAL_ADC_PollForConversion+0x18e>
 8001172:	683b      	ldr	r3, [r7, #0]
 8001174:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001178:	d01a      	beq.n	80011b0 <HAL_ADC_PollForConversion+0x188>
 800117a:	683b      	ldr	r3, [r7, #0]
 800117c:	2b00      	cmp	r3, #0
 800117e:	d007      	beq.n	8001190 <HAL_ADC_PollForConversion+0x168>
 8001180:	f7ff fd9e 	bl	8000cc0 <HAL_GetTick>
 8001184:	4602      	mov	r2, r0
 8001186:	697b      	ldr	r3, [r7, #20]
 8001188:	1ad3      	subs	r3, r2, r3
 800118a:	683a      	ldr	r2, [r7, #0]
 800118c:	429a      	cmp	r2, r3
 800118e:	d20f      	bcs.n	80011b0 <HAL_ADC_PollForConversion+0x188>
 8001190:	68fb      	ldr	r3, [r7, #12]
 8001192:	693a      	ldr	r2, [r7, #16]
 8001194:	429a      	cmp	r2, r3
 8001196:	d90b      	bls.n	80011b0 <HAL_ADC_PollForConversion+0x188>
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800119c:	f043 0204 	orr.w	r2, r3, #4
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	629a      	str	r2, [r3, #40]	@ 0x28
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	2200      	movs	r2, #0
 80011a8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80011ac:	2303      	movs	r3, #3
 80011ae:	e030      	b.n	8001212 <HAL_ADC_PollForConversion+0x1ea>
 80011b0:	68fb      	ldr	r3, [r7, #12]
 80011b2:	3301      	adds	r3, #1
 80011b4:	60fb      	str	r3, [r7, #12]
 80011b6:	68fb      	ldr	r3, [r7, #12]
 80011b8:	693a      	ldr	r2, [r7, #16]
 80011ba:	429a      	cmp	r2, r3
 80011bc:	d8d9      	bhi.n	8001172 <HAL_ADC_PollForConversion+0x14a>
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	f06f 0212 	mvn.w	r2, #18
 80011c6:	601a      	str	r2, [r3, #0]
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80011cc:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80011d0:	687b      	ldr	r3, [r7, #4]
 80011d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80011d4:	687b      	ldr	r3, [r7, #4]
 80011d6:	681b      	ldr	r3, [r3, #0]
 80011d8:	689b      	ldr	r3, [r3, #8]
 80011da:	f403 2360 	and.w	r3, r3, #917504	@ 0xe0000
 80011de:	f5b3 2f60 	cmp.w	r3, #917504	@ 0xe0000
 80011e2:	d115      	bne.n	8001210 <HAL_ADC_PollForConversion+0x1e8>
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	7b1b      	ldrb	r3, [r3, #12]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d111      	bne.n	8001210 <HAL_ADC_PollForConversion+0x1e8>
 80011ec:	687b      	ldr	r3, [r7, #4]
 80011ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80011f0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	629a      	str	r2, [r3, #40]	@ 0x28
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80011fc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001200:	2b00      	cmp	r3, #0
 8001202:	d105      	bne.n	8001210 <HAL_ADC_PollForConversion+0x1e8>
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001208:	f043 0201 	orr.w	r2, r3, #1
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	629a      	str	r2, [r3, #40]	@ 0x28
 8001210:	2300      	movs	r3, #0
 8001212:	4618      	mov	r0, r3
 8001214:	371c      	adds	r7, #28
 8001216:	46bd      	mov	sp, r7
 8001218:	bd90      	pop	{r4, r7, pc}
 800121a:	bf00      	nop
 800121c:	20000004 	.word	0x20000004
 8001220:	24924924 	.word	0x24924924
 8001224:	00924924 	.word	0x00924924
 8001228:	12492492 	.word	0x12492492
 800122c:	00492492 	.word	0x00492492
 8001230:	00249249 	.word	0x00249249

08001234 <HAL_ADC_GetValue>:
 8001234:	b480      	push	{r7}
 8001236:	b083      	sub	sp, #12
 8001238:	af00      	add	r7, sp, #0
 800123a:	6078      	str	r0, [r7, #4]
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	681b      	ldr	r3, [r3, #0]
 8001240:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001242:	4618      	mov	r0, r3
 8001244:	370c      	adds	r7, #12
 8001246:	46bd      	mov	sp, r7
 8001248:	bc80      	pop	{r7}
 800124a:	4770      	bx	lr

0800124c <HAL_ADC_ConfigChannel>:
 800124c:	b480      	push	{r7}
 800124e:	b085      	sub	sp, #20
 8001250:	af00      	add	r7, sp, #0
 8001252:	6078      	str	r0, [r7, #4]
 8001254:	6039      	str	r1, [r7, #0]
 8001256:	2300      	movs	r3, #0
 8001258:	73fb      	strb	r3, [r7, #15]
 800125a:	2300      	movs	r3, #0
 800125c:	60bb      	str	r3, [r7, #8]
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8001264:	2b01      	cmp	r3, #1
 8001266:	d101      	bne.n	800126c <HAL_ADC_ConfigChannel+0x20>
 8001268:	2302      	movs	r3, #2
 800126a:	e0dc      	b.n	8001426 <HAL_ADC_ConfigChannel+0x1da>
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	2201      	movs	r2, #1
 8001270:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001274:	683b      	ldr	r3, [r7, #0]
 8001276:	685b      	ldr	r3, [r3, #4]
 8001278:	2b06      	cmp	r3, #6
 800127a:	d81c      	bhi.n	80012b6 <HAL_ADC_ConfigChannel+0x6a>
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8001282:	683b      	ldr	r3, [r7, #0]
 8001284:	685a      	ldr	r2, [r3, #4]
 8001286:	4613      	mov	r3, r2
 8001288:	009b      	lsls	r3, r3, #2
 800128a:	4413      	add	r3, r2
 800128c:	3b05      	subs	r3, #5
 800128e:	221f      	movs	r2, #31
 8001290:	fa02 f303 	lsl.w	r3, r2, r3
 8001294:	43db      	mvns	r3, r3
 8001296:	4019      	ands	r1, r3
 8001298:	683b      	ldr	r3, [r7, #0]
 800129a:	6818      	ldr	r0, [r3, #0]
 800129c:	683b      	ldr	r3, [r7, #0]
 800129e:	685a      	ldr	r2, [r3, #4]
 80012a0:	4613      	mov	r3, r2
 80012a2:	009b      	lsls	r3, r3, #2
 80012a4:	4413      	add	r3, r2
 80012a6:	3b05      	subs	r3, #5
 80012a8:	fa00 f203 	lsl.w	r2, r0, r3
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	430a      	orrs	r2, r1
 80012b2:	635a      	str	r2, [r3, #52]	@ 0x34
 80012b4:	e03c      	b.n	8001330 <HAL_ADC_ConfigChannel+0xe4>
 80012b6:	683b      	ldr	r3, [r7, #0]
 80012b8:	685b      	ldr	r3, [r3, #4]
 80012ba:	2b0c      	cmp	r3, #12
 80012bc:	d81c      	bhi.n	80012f8 <HAL_ADC_ConfigChannel+0xac>
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80012c4:	683b      	ldr	r3, [r7, #0]
 80012c6:	685a      	ldr	r2, [r3, #4]
 80012c8:	4613      	mov	r3, r2
 80012ca:	009b      	lsls	r3, r3, #2
 80012cc:	4413      	add	r3, r2
 80012ce:	3b23      	subs	r3, #35	@ 0x23
 80012d0:	221f      	movs	r2, #31
 80012d2:	fa02 f303 	lsl.w	r3, r2, r3
 80012d6:	43db      	mvns	r3, r3
 80012d8:	4019      	ands	r1, r3
 80012da:	683b      	ldr	r3, [r7, #0]
 80012dc:	6818      	ldr	r0, [r3, #0]
 80012de:	683b      	ldr	r3, [r7, #0]
 80012e0:	685a      	ldr	r2, [r3, #4]
 80012e2:	4613      	mov	r3, r2
 80012e4:	009b      	lsls	r3, r3, #2
 80012e6:	4413      	add	r3, r2
 80012e8:	3b23      	subs	r3, #35	@ 0x23
 80012ea:	fa00 f203 	lsl.w	r2, r0, r3
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	681b      	ldr	r3, [r3, #0]
 80012f2:	430a      	orrs	r2, r1
 80012f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80012f6:	e01b      	b.n	8001330 <HAL_ADC_ConfigChannel+0xe4>
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80012fe:	683b      	ldr	r3, [r7, #0]
 8001300:	685a      	ldr	r2, [r3, #4]
 8001302:	4613      	mov	r3, r2
 8001304:	009b      	lsls	r3, r3, #2
 8001306:	4413      	add	r3, r2
 8001308:	3b41      	subs	r3, #65	@ 0x41
 800130a:	221f      	movs	r2, #31
 800130c:	fa02 f303 	lsl.w	r3, r2, r3
 8001310:	43db      	mvns	r3, r3
 8001312:	4019      	ands	r1, r3
 8001314:	683b      	ldr	r3, [r7, #0]
 8001316:	6818      	ldr	r0, [r3, #0]
 8001318:	683b      	ldr	r3, [r7, #0]
 800131a:	685a      	ldr	r2, [r3, #4]
 800131c:	4613      	mov	r3, r2
 800131e:	009b      	lsls	r3, r3, #2
 8001320:	4413      	add	r3, r2
 8001322:	3b41      	subs	r3, #65	@ 0x41
 8001324:	fa00 f203 	lsl.w	r2, r0, r3
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	430a      	orrs	r2, r1
 800132e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001330:	683b      	ldr	r3, [r7, #0]
 8001332:	681b      	ldr	r3, [r3, #0]
 8001334:	2b09      	cmp	r3, #9
 8001336:	d91c      	bls.n	8001372 <HAL_ADC_ConfigChannel+0x126>
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	681b      	ldr	r3, [r3, #0]
 800133c:	68d9      	ldr	r1, [r3, #12]
 800133e:	683b      	ldr	r3, [r7, #0]
 8001340:	681a      	ldr	r2, [r3, #0]
 8001342:	4613      	mov	r3, r2
 8001344:	005b      	lsls	r3, r3, #1
 8001346:	4413      	add	r3, r2
 8001348:	3b1e      	subs	r3, #30
 800134a:	2207      	movs	r2, #7
 800134c:	fa02 f303 	lsl.w	r3, r2, r3
 8001350:	43db      	mvns	r3, r3
 8001352:	4019      	ands	r1, r3
 8001354:	683b      	ldr	r3, [r7, #0]
 8001356:	6898      	ldr	r0, [r3, #8]
 8001358:	683b      	ldr	r3, [r7, #0]
 800135a:	681a      	ldr	r2, [r3, #0]
 800135c:	4613      	mov	r3, r2
 800135e:	005b      	lsls	r3, r3, #1
 8001360:	4413      	add	r3, r2
 8001362:	3b1e      	subs	r3, #30
 8001364:	fa00 f203 	lsl.w	r2, r0, r3
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	681b      	ldr	r3, [r3, #0]
 800136c:	430a      	orrs	r2, r1
 800136e:	60da      	str	r2, [r3, #12]
 8001370:	e019      	b.n	80013a6 <HAL_ADC_ConfigChannel+0x15a>
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	6919      	ldr	r1, [r3, #16]
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	681a      	ldr	r2, [r3, #0]
 800137c:	4613      	mov	r3, r2
 800137e:	005b      	lsls	r3, r3, #1
 8001380:	4413      	add	r3, r2
 8001382:	2207      	movs	r2, #7
 8001384:	fa02 f303 	lsl.w	r3, r2, r3
 8001388:	43db      	mvns	r3, r3
 800138a:	4019      	ands	r1, r3
 800138c:	683b      	ldr	r3, [r7, #0]
 800138e:	6898      	ldr	r0, [r3, #8]
 8001390:	683b      	ldr	r3, [r7, #0]
 8001392:	681a      	ldr	r2, [r3, #0]
 8001394:	4613      	mov	r3, r2
 8001396:	005b      	lsls	r3, r3, #1
 8001398:	4413      	add	r3, r2
 800139a:	fa00 f203 	lsl.w	r2, r0, r3
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	430a      	orrs	r2, r1
 80013a4:	611a      	str	r2, [r3, #16]
 80013a6:	683b      	ldr	r3, [r7, #0]
 80013a8:	681b      	ldr	r3, [r3, #0]
 80013aa:	2b10      	cmp	r3, #16
 80013ac:	d003      	beq.n	80013b6 <HAL_ADC_ConfigChannel+0x16a>
 80013ae:	683b      	ldr	r3, [r7, #0]
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	2b11      	cmp	r3, #17
 80013b4:	d132      	bne.n	800141c <HAL_ADC_ConfigChannel+0x1d0>
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	4a1d      	ldr	r2, [pc, #116]	@ (8001430 <HAL_ADC_ConfigChannel+0x1e4>)
 80013bc:	4293      	cmp	r3, r2
 80013be:	d125      	bne.n	800140c <HAL_ADC_ConfigChannel+0x1c0>
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	689b      	ldr	r3, [r3, #8]
 80013c6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d126      	bne.n	800141c <HAL_ADC_ConfigChannel+0x1d0>
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	681b      	ldr	r3, [r3, #0]
 80013d2:	689a      	ldr	r2, [r3, #8]
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 80013dc:	609a      	str	r2, [r3, #8]
 80013de:	683b      	ldr	r3, [r7, #0]
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	2b10      	cmp	r3, #16
 80013e4:	d11a      	bne.n	800141c <HAL_ADC_ConfigChannel+0x1d0>
 80013e6:	4b13      	ldr	r3, [pc, #76]	@ (8001434 <HAL_ADC_ConfigChannel+0x1e8>)
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	4a13      	ldr	r2, [pc, #76]	@ (8001438 <HAL_ADC_ConfigChannel+0x1ec>)
 80013ec:	fba2 2303 	umull	r2, r3, r2, r3
 80013f0:	0c9a      	lsrs	r2, r3, #18
 80013f2:	4613      	mov	r3, r2
 80013f4:	009b      	lsls	r3, r3, #2
 80013f6:	4413      	add	r3, r2
 80013f8:	005b      	lsls	r3, r3, #1
 80013fa:	60bb      	str	r3, [r7, #8]
 80013fc:	e002      	b.n	8001404 <HAL_ADC_ConfigChannel+0x1b8>
 80013fe:	68bb      	ldr	r3, [r7, #8]
 8001400:	3b01      	subs	r3, #1
 8001402:	60bb      	str	r3, [r7, #8]
 8001404:	68bb      	ldr	r3, [r7, #8]
 8001406:	2b00      	cmp	r3, #0
 8001408:	d1f9      	bne.n	80013fe <HAL_ADC_ConfigChannel+0x1b2>
 800140a:	e007      	b.n	800141c <HAL_ADC_ConfigChannel+0x1d0>
 800140c:	687b      	ldr	r3, [r7, #4]
 800140e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001410:	f043 0220 	orr.w	r2, r3, #32
 8001414:	687b      	ldr	r3, [r7, #4]
 8001416:	629a      	str	r2, [r3, #40]	@ 0x28
 8001418:	2301      	movs	r3, #1
 800141a:	73fb      	strb	r3, [r7, #15]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	2200      	movs	r2, #0
 8001420:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8001424:	7bfb      	ldrb	r3, [r7, #15]
 8001426:	4618      	mov	r0, r3
 8001428:	3714      	adds	r7, #20
 800142a:	46bd      	mov	sp, r7
 800142c:	bc80      	pop	{r7}
 800142e:	4770      	bx	lr
 8001430:	40012400 	.word	0x40012400
 8001434:	20000004 	.word	0x20000004
 8001438:	431bde83 	.word	0x431bde83

0800143c <ADC_Enable>:
 800143c:	b580      	push	{r7, lr}
 800143e:	b084      	sub	sp, #16
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
 8001444:	2300      	movs	r3, #0
 8001446:	60fb      	str	r3, [r7, #12]
 8001448:	2300      	movs	r3, #0
 800144a:	60bb      	str	r3, [r7, #8]
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	689b      	ldr	r3, [r3, #8]
 8001452:	f003 0301 	and.w	r3, r3, #1
 8001456:	2b01      	cmp	r3, #1
 8001458:	d040      	beq.n	80014dc <ADC_Enable+0xa0>
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	689a      	ldr	r2, [r3, #8]
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	f042 0201 	orr.w	r2, r2, #1
 8001468:	609a      	str	r2, [r3, #8]
 800146a:	4b1f      	ldr	r3, [pc, #124]	@ (80014e8 <ADC_Enable+0xac>)
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	4a1f      	ldr	r2, [pc, #124]	@ (80014ec <ADC_Enable+0xb0>)
 8001470:	fba2 2303 	umull	r2, r3, r2, r3
 8001474:	0c9b      	lsrs	r3, r3, #18
 8001476:	60bb      	str	r3, [r7, #8]
 8001478:	e002      	b.n	8001480 <ADC_Enable+0x44>
 800147a:	68bb      	ldr	r3, [r7, #8]
 800147c:	3b01      	subs	r3, #1
 800147e:	60bb      	str	r3, [r7, #8]
 8001480:	68bb      	ldr	r3, [r7, #8]
 8001482:	2b00      	cmp	r3, #0
 8001484:	d1f9      	bne.n	800147a <ADC_Enable+0x3e>
 8001486:	f7ff fc1b 	bl	8000cc0 <HAL_GetTick>
 800148a:	60f8      	str	r0, [r7, #12]
 800148c:	e01f      	b.n	80014ce <ADC_Enable+0x92>
 800148e:	f7ff fc17 	bl	8000cc0 <HAL_GetTick>
 8001492:	4602      	mov	r2, r0
 8001494:	68fb      	ldr	r3, [r7, #12]
 8001496:	1ad3      	subs	r3, r2, r3
 8001498:	2b02      	cmp	r3, #2
 800149a:	d918      	bls.n	80014ce <ADC_Enable+0x92>
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	689b      	ldr	r3, [r3, #8]
 80014a2:	f003 0301 	and.w	r3, r3, #1
 80014a6:	2b01      	cmp	r3, #1
 80014a8:	d011      	beq.n	80014ce <ADC_Enable+0x92>
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80014ae:	f043 0210 	orr.w	r2, r3, #16
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	629a      	str	r2, [r3, #40]	@ 0x28
 80014b6:	687b      	ldr	r3, [r7, #4]
 80014b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014ba:	f043 0201 	orr.w	r2, r3, #1
 80014be:	687b      	ldr	r3, [r7, #4]
 80014c0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	2200      	movs	r2, #0
 80014c6:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80014ca:	2301      	movs	r3, #1
 80014cc:	e007      	b.n	80014de <ADC_Enable+0xa2>
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	689b      	ldr	r3, [r3, #8]
 80014d4:	f003 0301 	and.w	r3, r3, #1
 80014d8:	2b01      	cmp	r3, #1
 80014da:	d1d8      	bne.n	800148e <ADC_Enable+0x52>
 80014dc:	2300      	movs	r3, #0
 80014de:	4618      	mov	r0, r3
 80014e0:	3710      	adds	r7, #16
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bd80      	pop	{r7, pc}
 80014e6:	bf00      	nop
 80014e8:	20000004 	.word	0x20000004
 80014ec:	431bde83 	.word	0x431bde83

080014f0 <ADC_ConversionStop_Disable>:
 80014f0:	b580      	push	{r7, lr}
 80014f2:	b084      	sub	sp, #16
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	6078      	str	r0, [r7, #4]
 80014f8:	2300      	movs	r3, #0
 80014fa:	60fb      	str	r3, [r7, #12]
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	689b      	ldr	r3, [r3, #8]
 8001502:	f003 0301 	and.w	r3, r3, #1
 8001506:	2b01      	cmp	r3, #1
 8001508:	d12e      	bne.n	8001568 <ADC_ConversionStop_Disable+0x78>
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	689a      	ldr	r2, [r3, #8]
 8001510:	687b      	ldr	r3, [r7, #4]
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	f022 0201 	bic.w	r2, r2, #1
 8001518:	609a      	str	r2, [r3, #8]
 800151a:	f7ff fbd1 	bl	8000cc0 <HAL_GetTick>
 800151e:	60f8      	str	r0, [r7, #12]
 8001520:	e01b      	b.n	800155a <ADC_ConversionStop_Disable+0x6a>
 8001522:	f7ff fbcd 	bl	8000cc0 <HAL_GetTick>
 8001526:	4602      	mov	r2, r0
 8001528:	68fb      	ldr	r3, [r7, #12]
 800152a:	1ad3      	subs	r3, r2, r3
 800152c:	2b02      	cmp	r3, #2
 800152e:	d914      	bls.n	800155a <ADC_ConversionStop_Disable+0x6a>
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	689b      	ldr	r3, [r3, #8]
 8001536:	f003 0301 	and.w	r3, r3, #1
 800153a:	2b01      	cmp	r3, #1
 800153c:	d10d      	bne.n	800155a <ADC_ConversionStop_Disable+0x6a>
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001542:	f043 0210 	orr.w	r2, r3, #16
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	629a      	str	r2, [r3, #40]	@ 0x28
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800154e:	f043 0201 	orr.w	r2, r3, #1
 8001552:	687b      	ldr	r3, [r7, #4]
 8001554:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001556:	2301      	movs	r3, #1
 8001558:	e007      	b.n	800156a <ADC_ConversionStop_Disable+0x7a>
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	689b      	ldr	r3, [r3, #8]
 8001560:	f003 0301 	and.w	r3, r3, #1
 8001564:	2b01      	cmp	r3, #1
 8001566:	d0dc      	beq.n	8001522 <ADC_ConversionStop_Disable+0x32>
 8001568:	2300      	movs	r3, #0
 800156a:	4618      	mov	r0, r3
 800156c:	3710      	adds	r7, #16
 800156e:	46bd      	mov	sp, r7
 8001570:	bd80      	pop	{r7, pc}
	...

08001574 <__NVIC_SetPriorityGrouping>:
 8001574:	b480      	push	{r7}
 8001576:	b085      	sub	sp, #20
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	f003 0307 	and.w	r3, r3, #7
 8001582:	60fb      	str	r3, [r7, #12]
 8001584:	4b0c      	ldr	r3, [pc, #48]	@ (80015b8 <__NVIC_SetPriorityGrouping+0x44>)
 8001586:	68db      	ldr	r3, [r3, #12]
 8001588:	60bb      	str	r3, [r7, #8]
 800158a:	68ba      	ldr	r2, [r7, #8]
 800158c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001590:	4013      	ands	r3, r2
 8001592:	60bb      	str	r3, [r7, #8]
 8001594:	68fb      	ldr	r3, [r7, #12]
 8001596:	021a      	lsls	r2, r3, #8
 8001598:	68bb      	ldr	r3, [r7, #8]
 800159a:	4313      	orrs	r3, r2
 800159c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80015a0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80015a4:	60bb      	str	r3, [r7, #8]
 80015a6:	4a04      	ldr	r2, [pc, #16]	@ (80015b8 <__NVIC_SetPriorityGrouping+0x44>)
 80015a8:	68bb      	ldr	r3, [r7, #8]
 80015aa:	60d3      	str	r3, [r2, #12]
 80015ac:	bf00      	nop
 80015ae:	3714      	adds	r7, #20
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bc80      	pop	{r7}
 80015b4:	4770      	bx	lr
 80015b6:	bf00      	nop
 80015b8:	e000ed00 	.word	0xe000ed00

080015bc <__NVIC_GetPriorityGrouping>:
 80015bc:	b480      	push	{r7}
 80015be:	af00      	add	r7, sp, #0
 80015c0:	4b04      	ldr	r3, [pc, #16]	@ (80015d4 <__NVIC_GetPriorityGrouping+0x18>)
 80015c2:	68db      	ldr	r3, [r3, #12]
 80015c4:	0a1b      	lsrs	r3, r3, #8
 80015c6:	f003 0307 	and.w	r3, r3, #7
 80015ca:	4618      	mov	r0, r3
 80015cc:	46bd      	mov	sp, r7
 80015ce:	bc80      	pop	{r7}
 80015d0:	4770      	bx	lr
 80015d2:	bf00      	nop
 80015d4:	e000ed00 	.word	0xe000ed00

080015d8 <__NVIC_EnableIRQ>:
 80015d8:	b480      	push	{r7}
 80015da:	b083      	sub	sp, #12
 80015dc:	af00      	add	r7, sp, #0
 80015de:	4603      	mov	r3, r0
 80015e0:	71fb      	strb	r3, [r7, #7]
 80015e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	db0b      	blt.n	8001602 <__NVIC_EnableIRQ+0x2a>
 80015ea:	79fb      	ldrb	r3, [r7, #7]
 80015ec:	f003 021f 	and.w	r2, r3, #31
 80015f0:	4906      	ldr	r1, [pc, #24]	@ (800160c <__NVIC_EnableIRQ+0x34>)
 80015f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015f6:	095b      	lsrs	r3, r3, #5
 80015f8:	2001      	movs	r0, #1
 80015fa:	fa00 f202 	lsl.w	r2, r0, r2
 80015fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001602:	bf00      	nop
 8001604:	370c      	adds	r7, #12
 8001606:	46bd      	mov	sp, r7
 8001608:	bc80      	pop	{r7}
 800160a:	4770      	bx	lr
 800160c:	e000e100 	.word	0xe000e100

08001610 <__NVIC_SetPriority>:
 8001610:	b480      	push	{r7}
 8001612:	b083      	sub	sp, #12
 8001614:	af00      	add	r7, sp, #0
 8001616:	4603      	mov	r3, r0
 8001618:	6039      	str	r1, [r7, #0]
 800161a:	71fb      	strb	r3, [r7, #7]
 800161c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001620:	2b00      	cmp	r3, #0
 8001622:	db0a      	blt.n	800163a <__NVIC_SetPriority+0x2a>
 8001624:	683b      	ldr	r3, [r7, #0]
 8001626:	b2da      	uxtb	r2, r3
 8001628:	490c      	ldr	r1, [pc, #48]	@ (800165c <__NVIC_SetPriority+0x4c>)
 800162a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800162e:	0112      	lsls	r2, r2, #4
 8001630:	b2d2      	uxtb	r2, r2
 8001632:	440b      	add	r3, r1
 8001634:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001638:	e00a      	b.n	8001650 <__NVIC_SetPriority+0x40>
 800163a:	683b      	ldr	r3, [r7, #0]
 800163c:	b2da      	uxtb	r2, r3
 800163e:	4908      	ldr	r1, [pc, #32]	@ (8001660 <__NVIC_SetPriority+0x50>)
 8001640:	79fb      	ldrb	r3, [r7, #7]
 8001642:	f003 030f 	and.w	r3, r3, #15
 8001646:	3b04      	subs	r3, #4
 8001648:	0112      	lsls	r2, r2, #4
 800164a:	b2d2      	uxtb	r2, r2
 800164c:	440b      	add	r3, r1
 800164e:	761a      	strb	r2, [r3, #24]
 8001650:	bf00      	nop
 8001652:	370c      	adds	r7, #12
 8001654:	46bd      	mov	sp, r7
 8001656:	bc80      	pop	{r7}
 8001658:	4770      	bx	lr
 800165a:	bf00      	nop
 800165c:	e000e100 	.word	0xe000e100
 8001660:	e000ed00 	.word	0xe000ed00

08001664 <NVIC_EncodePriority>:
 8001664:	b480      	push	{r7}
 8001666:	b089      	sub	sp, #36	@ 0x24
 8001668:	af00      	add	r7, sp, #0
 800166a:	60f8      	str	r0, [r7, #12]
 800166c:	60b9      	str	r1, [r7, #8]
 800166e:	607a      	str	r2, [r7, #4]
 8001670:	68fb      	ldr	r3, [r7, #12]
 8001672:	f003 0307 	and.w	r3, r3, #7
 8001676:	61fb      	str	r3, [r7, #28]
 8001678:	69fb      	ldr	r3, [r7, #28]
 800167a:	f1c3 0307 	rsb	r3, r3, #7
 800167e:	2b04      	cmp	r3, #4
 8001680:	bf28      	it	cs
 8001682:	2304      	movcs	r3, #4
 8001684:	61bb      	str	r3, [r7, #24]
 8001686:	69fb      	ldr	r3, [r7, #28]
 8001688:	3304      	adds	r3, #4
 800168a:	2b06      	cmp	r3, #6
 800168c:	d902      	bls.n	8001694 <NVIC_EncodePriority+0x30>
 800168e:	69fb      	ldr	r3, [r7, #28]
 8001690:	3b03      	subs	r3, #3
 8001692:	e000      	b.n	8001696 <NVIC_EncodePriority+0x32>
 8001694:	2300      	movs	r3, #0
 8001696:	617b      	str	r3, [r7, #20]
 8001698:	f04f 32ff 	mov.w	r2, #4294967295
 800169c:	69bb      	ldr	r3, [r7, #24]
 800169e:	fa02 f303 	lsl.w	r3, r2, r3
 80016a2:	43da      	mvns	r2, r3
 80016a4:	68bb      	ldr	r3, [r7, #8]
 80016a6:	401a      	ands	r2, r3
 80016a8:	697b      	ldr	r3, [r7, #20]
 80016aa:	409a      	lsls	r2, r3
 80016ac:	f04f 31ff 	mov.w	r1, #4294967295
 80016b0:	697b      	ldr	r3, [r7, #20]
 80016b2:	fa01 f303 	lsl.w	r3, r1, r3
 80016b6:	43d9      	mvns	r1, r3
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	400b      	ands	r3, r1
 80016bc:	4313      	orrs	r3, r2
 80016be:	4618      	mov	r0, r3
 80016c0:	3724      	adds	r7, #36	@ 0x24
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bc80      	pop	{r7}
 80016c6:	4770      	bx	lr

080016c8 <SysTick_Config>:
 80016c8:	b580      	push	{r7, lr}
 80016ca:	b082      	sub	sp, #8
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	6078      	str	r0, [r7, #4]
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	3b01      	subs	r3, #1
 80016d4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80016d8:	d301      	bcc.n	80016de <SysTick_Config+0x16>
 80016da:	2301      	movs	r3, #1
 80016dc:	e00f      	b.n	80016fe <SysTick_Config+0x36>
 80016de:	4a0a      	ldr	r2, [pc, #40]	@ (8001708 <SysTick_Config+0x40>)
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	3b01      	subs	r3, #1
 80016e4:	6053      	str	r3, [r2, #4]
 80016e6:	210f      	movs	r1, #15
 80016e8:	f04f 30ff 	mov.w	r0, #4294967295
 80016ec:	f7ff ff90 	bl	8001610 <__NVIC_SetPriority>
 80016f0:	4b05      	ldr	r3, [pc, #20]	@ (8001708 <SysTick_Config+0x40>)
 80016f2:	2200      	movs	r2, #0
 80016f4:	609a      	str	r2, [r3, #8]
 80016f6:	4b04      	ldr	r3, [pc, #16]	@ (8001708 <SysTick_Config+0x40>)
 80016f8:	2207      	movs	r2, #7
 80016fa:	601a      	str	r2, [r3, #0]
 80016fc:	2300      	movs	r3, #0
 80016fe:	4618      	mov	r0, r3
 8001700:	3708      	adds	r7, #8
 8001702:	46bd      	mov	sp, r7
 8001704:	bd80      	pop	{r7, pc}
 8001706:	bf00      	nop
 8001708:	e000e010 	.word	0xe000e010

0800170c <HAL_NVIC_SetPriorityGrouping>:
 800170c:	b580      	push	{r7, lr}
 800170e:	b082      	sub	sp, #8
 8001710:	af00      	add	r7, sp, #0
 8001712:	6078      	str	r0, [r7, #4]
 8001714:	6878      	ldr	r0, [r7, #4]
 8001716:	f7ff ff2d 	bl	8001574 <__NVIC_SetPriorityGrouping>
 800171a:	bf00      	nop
 800171c:	3708      	adds	r7, #8
 800171e:	46bd      	mov	sp, r7
 8001720:	bd80      	pop	{r7, pc}

08001722 <HAL_NVIC_SetPriority>:
 8001722:	b580      	push	{r7, lr}
 8001724:	b086      	sub	sp, #24
 8001726:	af00      	add	r7, sp, #0
 8001728:	4603      	mov	r3, r0
 800172a:	60b9      	str	r1, [r7, #8]
 800172c:	607a      	str	r2, [r7, #4]
 800172e:	73fb      	strb	r3, [r7, #15]
 8001730:	2300      	movs	r3, #0
 8001732:	617b      	str	r3, [r7, #20]
 8001734:	f7ff ff42 	bl	80015bc <__NVIC_GetPriorityGrouping>
 8001738:	6178      	str	r0, [r7, #20]
 800173a:	687a      	ldr	r2, [r7, #4]
 800173c:	68b9      	ldr	r1, [r7, #8]
 800173e:	6978      	ldr	r0, [r7, #20]
 8001740:	f7ff ff90 	bl	8001664 <NVIC_EncodePriority>
 8001744:	4602      	mov	r2, r0
 8001746:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800174a:	4611      	mov	r1, r2
 800174c:	4618      	mov	r0, r3
 800174e:	f7ff ff5f 	bl	8001610 <__NVIC_SetPriority>
 8001752:	bf00      	nop
 8001754:	3718      	adds	r7, #24
 8001756:	46bd      	mov	sp, r7
 8001758:	bd80      	pop	{r7, pc}

0800175a <HAL_NVIC_EnableIRQ>:
 800175a:	b580      	push	{r7, lr}
 800175c:	b082      	sub	sp, #8
 800175e:	af00      	add	r7, sp, #0
 8001760:	4603      	mov	r3, r0
 8001762:	71fb      	strb	r3, [r7, #7]
 8001764:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001768:	4618      	mov	r0, r3
 800176a:	f7ff ff35 	bl	80015d8 <__NVIC_EnableIRQ>
 800176e:	bf00      	nop
 8001770:	3708      	adds	r7, #8
 8001772:	46bd      	mov	sp, r7
 8001774:	bd80      	pop	{r7, pc}

08001776 <HAL_SYSTICK_Config>:
 8001776:	b580      	push	{r7, lr}
 8001778:	b082      	sub	sp, #8
 800177a:	af00      	add	r7, sp, #0
 800177c:	6078      	str	r0, [r7, #4]
 800177e:	6878      	ldr	r0, [r7, #4]
 8001780:	f7ff ffa2 	bl	80016c8 <SysTick_Config>
 8001784:	4603      	mov	r3, r0
 8001786:	4618      	mov	r0, r3
 8001788:	3708      	adds	r7, #8
 800178a:	46bd      	mov	sp, r7
 800178c:	bd80      	pop	{r7, pc}
	...

08001790 <HAL_GPIO_Init>:
 8001790:	b480      	push	{r7}
 8001792:	b08b      	sub	sp, #44	@ 0x2c
 8001794:	af00      	add	r7, sp, #0
 8001796:	6078      	str	r0, [r7, #4]
 8001798:	6039      	str	r1, [r7, #0]
 800179a:	2300      	movs	r3, #0
 800179c:	627b      	str	r3, [r7, #36]	@ 0x24
 800179e:	2300      	movs	r3, #0
 80017a0:	623b      	str	r3, [r7, #32]
 80017a2:	e169      	b.n	8001a78 <HAL_GPIO_Init+0x2e8>
 80017a4:	2201      	movs	r2, #1
 80017a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017a8:	fa02 f303 	lsl.w	r3, r2, r3
 80017ac:	61fb      	str	r3, [r7, #28]
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	69fa      	ldr	r2, [r7, #28]
 80017b4:	4013      	ands	r3, r2
 80017b6:	61bb      	str	r3, [r7, #24]
 80017b8:	69ba      	ldr	r2, [r7, #24]
 80017ba:	69fb      	ldr	r3, [r7, #28]
 80017bc:	429a      	cmp	r2, r3
 80017be:	f040 8158 	bne.w	8001a72 <HAL_GPIO_Init+0x2e2>
 80017c2:	683b      	ldr	r3, [r7, #0]
 80017c4:	685b      	ldr	r3, [r3, #4]
 80017c6:	4a9a      	ldr	r2, [pc, #616]	@ (8001a30 <HAL_GPIO_Init+0x2a0>)
 80017c8:	4293      	cmp	r3, r2
 80017ca:	d05e      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 80017cc:	4a98      	ldr	r2, [pc, #608]	@ (8001a30 <HAL_GPIO_Init+0x2a0>)
 80017ce:	4293      	cmp	r3, r2
 80017d0:	d875      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 80017d2:	4a98      	ldr	r2, [pc, #608]	@ (8001a34 <HAL_GPIO_Init+0x2a4>)
 80017d4:	4293      	cmp	r3, r2
 80017d6:	d058      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 80017d8:	4a96      	ldr	r2, [pc, #600]	@ (8001a34 <HAL_GPIO_Init+0x2a4>)
 80017da:	4293      	cmp	r3, r2
 80017dc:	d86f      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 80017de:	4a96      	ldr	r2, [pc, #600]	@ (8001a38 <HAL_GPIO_Init+0x2a8>)
 80017e0:	4293      	cmp	r3, r2
 80017e2:	d052      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 80017e4:	4a94      	ldr	r2, [pc, #592]	@ (8001a38 <HAL_GPIO_Init+0x2a8>)
 80017e6:	4293      	cmp	r3, r2
 80017e8:	d869      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 80017ea:	4a94      	ldr	r2, [pc, #592]	@ (8001a3c <HAL_GPIO_Init+0x2ac>)
 80017ec:	4293      	cmp	r3, r2
 80017ee:	d04c      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 80017f0:	4a92      	ldr	r2, [pc, #584]	@ (8001a3c <HAL_GPIO_Init+0x2ac>)
 80017f2:	4293      	cmp	r3, r2
 80017f4:	d863      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 80017f6:	4a92      	ldr	r2, [pc, #584]	@ (8001a40 <HAL_GPIO_Init+0x2b0>)
 80017f8:	4293      	cmp	r3, r2
 80017fa:	d046      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 80017fc:	4a90      	ldr	r2, [pc, #576]	@ (8001a40 <HAL_GPIO_Init+0x2b0>)
 80017fe:	4293      	cmp	r3, r2
 8001800:	d85d      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 8001802:	2b12      	cmp	r3, #18
 8001804:	d82a      	bhi.n	800185c <HAL_GPIO_Init+0xcc>
 8001806:	2b12      	cmp	r3, #18
 8001808:	d859      	bhi.n	80018be <HAL_GPIO_Init+0x12e>
 800180a:	a201      	add	r2, pc, #4	@ (adr r2, 8001810 <HAL_GPIO_Init+0x80>)
 800180c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001810:	0800188b 	.word	0x0800188b
 8001814:	08001865 	.word	0x08001865
 8001818:	08001877 	.word	0x08001877
 800181c:	080018b9 	.word	0x080018b9
 8001820:	080018bf 	.word	0x080018bf
 8001824:	080018bf 	.word	0x080018bf
 8001828:	080018bf 	.word	0x080018bf
 800182c:	080018bf 	.word	0x080018bf
 8001830:	080018bf 	.word	0x080018bf
 8001834:	080018bf 	.word	0x080018bf
 8001838:	080018bf 	.word	0x080018bf
 800183c:	080018bf 	.word	0x080018bf
 8001840:	080018bf 	.word	0x080018bf
 8001844:	080018bf 	.word	0x080018bf
 8001848:	080018bf 	.word	0x080018bf
 800184c:	080018bf 	.word	0x080018bf
 8001850:	080018bf 	.word	0x080018bf
 8001854:	0800186d 	.word	0x0800186d
 8001858:	08001881 	.word	0x08001881
 800185c:	4a79      	ldr	r2, [pc, #484]	@ (8001a44 <HAL_GPIO_Init+0x2b4>)
 800185e:	4293      	cmp	r3, r2
 8001860:	d013      	beq.n	800188a <HAL_GPIO_Init+0xfa>
 8001862:	e02c      	b.n	80018be <HAL_GPIO_Init+0x12e>
 8001864:	683b      	ldr	r3, [r7, #0]
 8001866:	68db      	ldr	r3, [r3, #12]
 8001868:	623b      	str	r3, [r7, #32]
 800186a:	e029      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 800186c:	683b      	ldr	r3, [r7, #0]
 800186e:	68db      	ldr	r3, [r3, #12]
 8001870:	3304      	adds	r3, #4
 8001872:	623b      	str	r3, [r7, #32]
 8001874:	e024      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 8001876:	683b      	ldr	r3, [r7, #0]
 8001878:	68db      	ldr	r3, [r3, #12]
 800187a:	3308      	adds	r3, #8
 800187c:	623b      	str	r3, [r7, #32]
 800187e:	e01f      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 8001880:	683b      	ldr	r3, [r7, #0]
 8001882:	68db      	ldr	r3, [r3, #12]
 8001884:	330c      	adds	r3, #12
 8001886:	623b      	str	r3, [r7, #32]
 8001888:	e01a      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 800188a:	683b      	ldr	r3, [r7, #0]
 800188c:	689b      	ldr	r3, [r3, #8]
 800188e:	2b00      	cmp	r3, #0
 8001890:	d102      	bne.n	8001898 <HAL_GPIO_Init+0x108>
 8001892:	2304      	movs	r3, #4
 8001894:	623b      	str	r3, [r7, #32]
 8001896:	e013      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 8001898:	683b      	ldr	r3, [r7, #0]
 800189a:	689b      	ldr	r3, [r3, #8]
 800189c:	2b01      	cmp	r3, #1
 800189e:	d105      	bne.n	80018ac <HAL_GPIO_Init+0x11c>
 80018a0:	2308      	movs	r3, #8
 80018a2:	623b      	str	r3, [r7, #32]
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	69fa      	ldr	r2, [r7, #28]
 80018a8:	611a      	str	r2, [r3, #16]
 80018aa:	e009      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 80018ac:	2308      	movs	r3, #8
 80018ae:	623b      	str	r3, [r7, #32]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	69fa      	ldr	r2, [r7, #28]
 80018b4:	615a      	str	r2, [r3, #20]
 80018b6:	e003      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 80018b8:	2300      	movs	r3, #0
 80018ba:	623b      	str	r3, [r7, #32]
 80018bc:	e000      	b.n	80018c0 <HAL_GPIO_Init+0x130>
 80018be:	bf00      	nop
 80018c0:	69bb      	ldr	r3, [r7, #24]
 80018c2:	2bff      	cmp	r3, #255	@ 0xff
 80018c4:	d801      	bhi.n	80018ca <HAL_GPIO_Init+0x13a>
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	e001      	b.n	80018ce <HAL_GPIO_Init+0x13e>
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	3304      	adds	r3, #4
 80018ce:	617b      	str	r3, [r7, #20]
 80018d0:	69bb      	ldr	r3, [r7, #24]
 80018d2:	2bff      	cmp	r3, #255	@ 0xff
 80018d4:	d802      	bhi.n	80018dc <HAL_GPIO_Init+0x14c>
 80018d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018d8:	009b      	lsls	r3, r3, #2
 80018da:	e002      	b.n	80018e2 <HAL_GPIO_Init+0x152>
 80018dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018de:	3b08      	subs	r3, #8
 80018e0:	009b      	lsls	r3, r3, #2
 80018e2:	613b      	str	r3, [r7, #16]
 80018e4:	697b      	ldr	r3, [r7, #20]
 80018e6:	681a      	ldr	r2, [r3, #0]
 80018e8:	210f      	movs	r1, #15
 80018ea:	693b      	ldr	r3, [r7, #16]
 80018ec:	fa01 f303 	lsl.w	r3, r1, r3
 80018f0:	43db      	mvns	r3, r3
 80018f2:	401a      	ands	r2, r3
 80018f4:	6a39      	ldr	r1, [r7, #32]
 80018f6:	693b      	ldr	r3, [r7, #16]
 80018f8:	fa01 f303 	lsl.w	r3, r1, r3
 80018fc:	431a      	orrs	r2, r3
 80018fe:	697b      	ldr	r3, [r7, #20]
 8001900:	601a      	str	r2, [r3, #0]
 8001902:	683b      	ldr	r3, [r7, #0]
 8001904:	685b      	ldr	r3, [r3, #4]
 8001906:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800190a:	2b00      	cmp	r3, #0
 800190c:	f000 80b1 	beq.w	8001a72 <HAL_GPIO_Init+0x2e2>
 8001910:	4b4d      	ldr	r3, [pc, #308]	@ (8001a48 <HAL_GPIO_Init+0x2b8>)
 8001912:	699b      	ldr	r3, [r3, #24]
 8001914:	4a4c      	ldr	r2, [pc, #304]	@ (8001a48 <HAL_GPIO_Init+0x2b8>)
 8001916:	f043 0301 	orr.w	r3, r3, #1
 800191a:	6193      	str	r3, [r2, #24]
 800191c:	4b4a      	ldr	r3, [pc, #296]	@ (8001a48 <HAL_GPIO_Init+0x2b8>)
 800191e:	699b      	ldr	r3, [r3, #24]
 8001920:	f003 0301 	and.w	r3, r3, #1
 8001924:	60bb      	str	r3, [r7, #8]
 8001926:	68bb      	ldr	r3, [r7, #8]
 8001928:	4a48      	ldr	r2, [pc, #288]	@ (8001a4c <HAL_GPIO_Init+0x2bc>)
 800192a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800192c:	089b      	lsrs	r3, r3, #2
 800192e:	3302      	adds	r3, #2
 8001930:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001934:	60fb      	str	r3, [r7, #12]
 8001936:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001938:	f003 0303 	and.w	r3, r3, #3
 800193c:	009b      	lsls	r3, r3, #2
 800193e:	220f      	movs	r2, #15
 8001940:	fa02 f303 	lsl.w	r3, r2, r3
 8001944:	43db      	mvns	r3, r3
 8001946:	68fa      	ldr	r2, [r7, #12]
 8001948:	4013      	ands	r3, r2
 800194a:	60fb      	str	r3, [r7, #12]
 800194c:	687b      	ldr	r3, [r7, #4]
 800194e:	4a40      	ldr	r2, [pc, #256]	@ (8001a50 <HAL_GPIO_Init+0x2c0>)
 8001950:	4293      	cmp	r3, r2
 8001952:	d013      	beq.n	800197c <HAL_GPIO_Init+0x1ec>
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	4a3f      	ldr	r2, [pc, #252]	@ (8001a54 <HAL_GPIO_Init+0x2c4>)
 8001958:	4293      	cmp	r3, r2
 800195a:	d00d      	beq.n	8001978 <HAL_GPIO_Init+0x1e8>
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	4a3e      	ldr	r2, [pc, #248]	@ (8001a58 <HAL_GPIO_Init+0x2c8>)
 8001960:	4293      	cmp	r3, r2
 8001962:	d007      	beq.n	8001974 <HAL_GPIO_Init+0x1e4>
 8001964:	687b      	ldr	r3, [r7, #4]
 8001966:	4a3d      	ldr	r2, [pc, #244]	@ (8001a5c <HAL_GPIO_Init+0x2cc>)
 8001968:	4293      	cmp	r3, r2
 800196a:	d101      	bne.n	8001970 <HAL_GPIO_Init+0x1e0>
 800196c:	2303      	movs	r3, #3
 800196e:	e006      	b.n	800197e <HAL_GPIO_Init+0x1ee>
 8001970:	2304      	movs	r3, #4
 8001972:	e004      	b.n	800197e <HAL_GPIO_Init+0x1ee>
 8001974:	2302      	movs	r3, #2
 8001976:	e002      	b.n	800197e <HAL_GPIO_Init+0x1ee>
 8001978:	2301      	movs	r3, #1
 800197a:	e000      	b.n	800197e <HAL_GPIO_Init+0x1ee>
 800197c:	2300      	movs	r3, #0
 800197e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001980:	f002 0203 	and.w	r2, r2, #3
 8001984:	0092      	lsls	r2, r2, #2
 8001986:	4093      	lsls	r3, r2
 8001988:	68fa      	ldr	r2, [r7, #12]
 800198a:	4313      	orrs	r3, r2
 800198c:	60fb      	str	r3, [r7, #12]
 800198e:	492f      	ldr	r1, [pc, #188]	@ (8001a4c <HAL_GPIO_Init+0x2bc>)
 8001990:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001992:	089b      	lsrs	r3, r3, #2
 8001994:	3302      	adds	r3, #2
 8001996:	68fa      	ldr	r2, [r7, #12]
 8001998:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800199c:	683b      	ldr	r3, [r7, #0]
 800199e:	685b      	ldr	r3, [r3, #4]
 80019a0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80019a4:	2b00      	cmp	r3, #0
 80019a6:	d006      	beq.n	80019b6 <HAL_GPIO_Init+0x226>
 80019a8:	4b2d      	ldr	r3, [pc, #180]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019aa:	689a      	ldr	r2, [r3, #8]
 80019ac:	492c      	ldr	r1, [pc, #176]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019ae:	69bb      	ldr	r3, [r7, #24]
 80019b0:	4313      	orrs	r3, r2
 80019b2:	608b      	str	r3, [r1, #8]
 80019b4:	e006      	b.n	80019c4 <HAL_GPIO_Init+0x234>
 80019b6:	4b2a      	ldr	r3, [pc, #168]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019b8:	689a      	ldr	r2, [r3, #8]
 80019ba:	69bb      	ldr	r3, [r7, #24]
 80019bc:	43db      	mvns	r3, r3
 80019be:	4928      	ldr	r1, [pc, #160]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019c0:	4013      	ands	r3, r2
 80019c2:	608b      	str	r3, [r1, #8]
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	685b      	ldr	r3, [r3, #4]
 80019c8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d006      	beq.n	80019de <HAL_GPIO_Init+0x24e>
 80019d0:	4b23      	ldr	r3, [pc, #140]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019d2:	68da      	ldr	r2, [r3, #12]
 80019d4:	4922      	ldr	r1, [pc, #136]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019d6:	69bb      	ldr	r3, [r7, #24]
 80019d8:	4313      	orrs	r3, r2
 80019da:	60cb      	str	r3, [r1, #12]
 80019dc:	e006      	b.n	80019ec <HAL_GPIO_Init+0x25c>
 80019de:	4b20      	ldr	r3, [pc, #128]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019e0:	68da      	ldr	r2, [r3, #12]
 80019e2:	69bb      	ldr	r3, [r7, #24]
 80019e4:	43db      	mvns	r3, r3
 80019e6:	491e      	ldr	r1, [pc, #120]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019e8:	4013      	ands	r3, r2
 80019ea:	60cb      	str	r3, [r1, #12]
 80019ec:	683b      	ldr	r3, [r7, #0]
 80019ee:	685b      	ldr	r3, [r3, #4]
 80019f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019f4:	2b00      	cmp	r3, #0
 80019f6:	d006      	beq.n	8001a06 <HAL_GPIO_Init+0x276>
 80019f8:	4b19      	ldr	r3, [pc, #100]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019fa:	685a      	ldr	r2, [r3, #4]
 80019fc:	4918      	ldr	r1, [pc, #96]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 80019fe:	69bb      	ldr	r3, [r7, #24]
 8001a00:	4313      	orrs	r3, r2
 8001a02:	604b      	str	r3, [r1, #4]
 8001a04:	e006      	b.n	8001a14 <HAL_GPIO_Init+0x284>
 8001a06:	4b16      	ldr	r3, [pc, #88]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 8001a08:	685a      	ldr	r2, [r3, #4]
 8001a0a:	69bb      	ldr	r3, [r7, #24]
 8001a0c:	43db      	mvns	r3, r3
 8001a0e:	4914      	ldr	r1, [pc, #80]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 8001a10:	4013      	ands	r3, r2
 8001a12:	604b      	str	r3, [r1, #4]
 8001a14:	683b      	ldr	r3, [r7, #0]
 8001a16:	685b      	ldr	r3, [r3, #4]
 8001a18:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	d021      	beq.n	8001a64 <HAL_GPIO_Init+0x2d4>
 8001a20:	4b0f      	ldr	r3, [pc, #60]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 8001a22:	681a      	ldr	r2, [r3, #0]
 8001a24:	490e      	ldr	r1, [pc, #56]	@ (8001a60 <HAL_GPIO_Init+0x2d0>)
 8001a26:	69bb      	ldr	r3, [r7, #24]
 8001a28:	4313      	orrs	r3, r2
 8001a2a:	600b      	str	r3, [r1, #0]
 8001a2c:	e021      	b.n	8001a72 <HAL_GPIO_Init+0x2e2>
 8001a2e:	bf00      	nop
 8001a30:	10320000 	.word	0x10320000
 8001a34:	10310000 	.word	0x10310000
 8001a38:	10220000 	.word	0x10220000
 8001a3c:	10210000 	.word	0x10210000
 8001a40:	10120000 	.word	0x10120000
 8001a44:	10110000 	.word	0x10110000
 8001a48:	40021000 	.word	0x40021000
 8001a4c:	40010000 	.word	0x40010000
 8001a50:	40010800 	.word	0x40010800
 8001a54:	40010c00 	.word	0x40010c00
 8001a58:	40011000 	.word	0x40011000
 8001a5c:	40011400 	.word	0x40011400
 8001a60:	40010400 	.word	0x40010400
 8001a64:	4b0b      	ldr	r3, [pc, #44]	@ (8001a94 <HAL_GPIO_Init+0x304>)
 8001a66:	681a      	ldr	r2, [r3, #0]
 8001a68:	69bb      	ldr	r3, [r7, #24]
 8001a6a:	43db      	mvns	r3, r3
 8001a6c:	4909      	ldr	r1, [pc, #36]	@ (8001a94 <HAL_GPIO_Init+0x304>)
 8001a6e:	4013      	ands	r3, r2
 8001a70:	600b      	str	r3, [r1, #0]
 8001a72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a74:	3301      	adds	r3, #1
 8001a76:	627b      	str	r3, [r7, #36]	@ 0x24
 8001a78:	683b      	ldr	r3, [r7, #0]
 8001a7a:	681a      	ldr	r2, [r3, #0]
 8001a7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a7e:	fa22 f303 	lsr.w	r3, r2, r3
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	f47f ae8e 	bne.w	80017a4 <HAL_GPIO_Init+0x14>
 8001a88:	bf00      	nop
 8001a8a:	bf00      	nop
 8001a8c:	372c      	adds	r7, #44	@ 0x2c
 8001a8e:	46bd      	mov	sp, r7
 8001a90:	bc80      	pop	{r7}
 8001a92:	4770      	bx	lr
 8001a94:	40010400 	.word	0x40010400

08001a98 <HAL_GPIO_ReadPin>:
 8001a98:	b480      	push	{r7}
 8001a9a:	b085      	sub	sp, #20
 8001a9c:	af00      	add	r7, sp, #0
 8001a9e:	6078      	str	r0, [r7, #4]
 8001aa0:	460b      	mov	r3, r1
 8001aa2:	807b      	strh	r3, [r7, #2]
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	689a      	ldr	r2, [r3, #8]
 8001aa8:	887b      	ldrh	r3, [r7, #2]
 8001aaa:	4013      	ands	r3, r2
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d002      	beq.n	8001ab6 <HAL_GPIO_ReadPin+0x1e>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	73fb      	strb	r3, [r7, #15]
 8001ab4:	e001      	b.n	8001aba <HAL_GPIO_ReadPin+0x22>
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	73fb      	strb	r3, [r7, #15]
 8001aba:	7bfb      	ldrb	r3, [r7, #15]
 8001abc:	4618      	mov	r0, r3
 8001abe:	3714      	adds	r7, #20
 8001ac0:	46bd      	mov	sp, r7
 8001ac2:	bc80      	pop	{r7}
 8001ac4:	4770      	bx	lr

08001ac6 <HAL_GPIO_WritePin>:
 8001ac6:	b480      	push	{r7}
 8001ac8:	b083      	sub	sp, #12
 8001aca:	af00      	add	r7, sp, #0
 8001acc:	6078      	str	r0, [r7, #4]
 8001ace:	460b      	mov	r3, r1
 8001ad0:	807b      	strh	r3, [r7, #2]
 8001ad2:	4613      	mov	r3, r2
 8001ad4:	707b      	strb	r3, [r7, #1]
 8001ad6:	787b      	ldrb	r3, [r7, #1]
 8001ad8:	2b00      	cmp	r3, #0
 8001ada:	d003      	beq.n	8001ae4 <HAL_GPIO_WritePin+0x1e>
 8001adc:	887a      	ldrh	r2, [r7, #2]
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	611a      	str	r2, [r3, #16]
 8001ae2:	e003      	b.n	8001aec <HAL_GPIO_WritePin+0x26>
 8001ae4:	887b      	ldrh	r3, [r7, #2]
 8001ae6:	041a      	lsls	r2, r3, #16
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	611a      	str	r2, [r3, #16]
 8001aec:	bf00      	nop
 8001aee:	370c      	adds	r7, #12
 8001af0:	46bd      	mov	sp, r7
 8001af2:	bc80      	pop	{r7}
 8001af4:	4770      	bx	lr

08001af6 <HAL_PCD_Init>:
 8001af6:	b580      	push	{r7, lr}
 8001af8:	b084      	sub	sp, #16
 8001afa:	af00      	add	r7, sp, #0
 8001afc:	6078      	str	r0, [r7, #4]
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	2b00      	cmp	r3, #0
 8001b02:	d101      	bne.n	8001b08 <HAL_PCD_Init+0x12>
 8001b04:	2301      	movs	r3, #1
 8001b06:	e0e8      	b.n	8001cda <HAL_PCD_Init+0x1e4>
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	f893 3291 	ldrb.w	r3, [r3, #657]	@ 0x291
 8001b0e:	b2db      	uxtb	r3, r3
 8001b10:	2b00      	cmp	r3, #0
 8001b12:	d106      	bne.n	8001b22 <HAL_PCD_Init+0x2c>
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	2200      	movs	r2, #0
 8001b18:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8001b1c:	6878      	ldr	r0, [r7, #4]
 8001b1e:	f006 f997 	bl	8007e50 <HAL_PCD_MspInit>
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	2203      	movs	r2, #3
 8001b26:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	715a      	strb	r2, [r3, #5]
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	4618      	mov	r0, r3
 8001b36:	f002 fab2 	bl	800409e <USB_DisableGlobalInt>
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	6818      	ldr	r0, [r3, #0]
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	3304      	adds	r3, #4
 8001b42:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001b44:	f002 fa88 	bl	8004058 <USB_CoreInit>
 8001b48:	4603      	mov	r3, r0
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d005      	beq.n	8001b5a <HAL_PCD_Init+0x64>
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	2202      	movs	r2, #2
 8001b52:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8001b56:	2301      	movs	r3, #1
 8001b58:	e0bf      	b.n	8001cda <HAL_PCD_Init+0x1e4>
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	2100      	movs	r1, #0
 8001b60:	4618      	mov	r0, r3
 8001b62:	f002 fab6 	bl	80040d2 <USB_SetCurrentMode>
 8001b66:	4603      	mov	r3, r0
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d005      	beq.n	8001b78 <HAL_PCD_Init+0x82>
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	2202      	movs	r2, #2
 8001b70:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8001b74:	2301      	movs	r3, #1
 8001b76:	e0b0      	b.n	8001cda <HAL_PCD_Init+0x1e4>
 8001b78:	2300      	movs	r3, #0
 8001b7a:	73fb      	strb	r3, [r7, #15]
 8001b7c:	e03e      	b.n	8001bfc <HAL_PCD_Init+0x106>
 8001b7e:	7bfa      	ldrb	r2, [r7, #15]
 8001b80:	6879      	ldr	r1, [r7, #4]
 8001b82:	4613      	mov	r3, r2
 8001b84:	009b      	lsls	r3, r3, #2
 8001b86:	4413      	add	r3, r2
 8001b88:	00db      	lsls	r3, r3, #3
 8001b8a:	440b      	add	r3, r1
 8001b8c:	3311      	adds	r3, #17
 8001b8e:	2201      	movs	r2, #1
 8001b90:	701a      	strb	r2, [r3, #0]
 8001b92:	7bfa      	ldrb	r2, [r7, #15]
 8001b94:	6879      	ldr	r1, [r7, #4]
 8001b96:	4613      	mov	r3, r2
 8001b98:	009b      	lsls	r3, r3, #2
 8001b9a:	4413      	add	r3, r2
 8001b9c:	00db      	lsls	r3, r3, #3
 8001b9e:	440b      	add	r3, r1
 8001ba0:	3310      	adds	r3, #16
 8001ba2:	7bfa      	ldrb	r2, [r7, #15]
 8001ba4:	701a      	strb	r2, [r3, #0]
 8001ba6:	7bfa      	ldrb	r2, [r7, #15]
 8001ba8:	6879      	ldr	r1, [r7, #4]
 8001baa:	4613      	mov	r3, r2
 8001bac:	009b      	lsls	r3, r3, #2
 8001bae:	4413      	add	r3, r2
 8001bb0:	00db      	lsls	r3, r3, #3
 8001bb2:	440b      	add	r3, r1
 8001bb4:	3313      	adds	r3, #19
 8001bb6:	2200      	movs	r2, #0
 8001bb8:	701a      	strb	r2, [r3, #0]
 8001bba:	7bfa      	ldrb	r2, [r7, #15]
 8001bbc:	6879      	ldr	r1, [r7, #4]
 8001bbe:	4613      	mov	r3, r2
 8001bc0:	009b      	lsls	r3, r3, #2
 8001bc2:	4413      	add	r3, r2
 8001bc4:	00db      	lsls	r3, r3, #3
 8001bc6:	440b      	add	r3, r1
 8001bc8:	3320      	adds	r3, #32
 8001bca:	2200      	movs	r2, #0
 8001bcc:	601a      	str	r2, [r3, #0]
 8001bce:	7bfa      	ldrb	r2, [r7, #15]
 8001bd0:	6879      	ldr	r1, [r7, #4]
 8001bd2:	4613      	mov	r3, r2
 8001bd4:	009b      	lsls	r3, r3, #2
 8001bd6:	4413      	add	r3, r2
 8001bd8:	00db      	lsls	r3, r3, #3
 8001bda:	440b      	add	r3, r1
 8001bdc:	3324      	adds	r3, #36	@ 0x24
 8001bde:	2200      	movs	r2, #0
 8001be0:	601a      	str	r2, [r3, #0]
 8001be2:	7bfb      	ldrb	r3, [r7, #15]
 8001be4:	6879      	ldr	r1, [r7, #4]
 8001be6:	1c5a      	adds	r2, r3, #1
 8001be8:	4613      	mov	r3, r2
 8001bea:	009b      	lsls	r3, r3, #2
 8001bec:	4413      	add	r3, r2
 8001bee:	00db      	lsls	r3, r3, #3
 8001bf0:	440b      	add	r3, r1
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	601a      	str	r2, [r3, #0]
 8001bf6:	7bfb      	ldrb	r3, [r7, #15]
 8001bf8:	3301      	adds	r3, #1
 8001bfa:	73fb      	strb	r3, [r7, #15]
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	791b      	ldrb	r3, [r3, #4]
 8001c00:	7bfa      	ldrb	r2, [r7, #15]
 8001c02:	429a      	cmp	r2, r3
 8001c04:	d3bb      	bcc.n	8001b7e <HAL_PCD_Init+0x88>
 8001c06:	2300      	movs	r3, #0
 8001c08:	73fb      	strb	r3, [r7, #15]
 8001c0a:	e044      	b.n	8001c96 <HAL_PCD_Init+0x1a0>
 8001c0c:	7bfa      	ldrb	r2, [r7, #15]
 8001c0e:	6879      	ldr	r1, [r7, #4]
 8001c10:	4613      	mov	r3, r2
 8001c12:	009b      	lsls	r3, r3, #2
 8001c14:	4413      	add	r3, r2
 8001c16:	00db      	lsls	r3, r3, #3
 8001c18:	440b      	add	r3, r1
 8001c1a:	f203 1351 	addw	r3, r3, #337	@ 0x151
 8001c1e:	2200      	movs	r2, #0
 8001c20:	701a      	strb	r2, [r3, #0]
 8001c22:	7bfa      	ldrb	r2, [r7, #15]
 8001c24:	6879      	ldr	r1, [r7, #4]
 8001c26:	4613      	mov	r3, r2
 8001c28:	009b      	lsls	r3, r3, #2
 8001c2a:	4413      	add	r3, r2
 8001c2c:	00db      	lsls	r3, r3, #3
 8001c2e:	440b      	add	r3, r1
 8001c30:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8001c34:	7bfa      	ldrb	r2, [r7, #15]
 8001c36:	701a      	strb	r2, [r3, #0]
 8001c38:	7bfa      	ldrb	r2, [r7, #15]
 8001c3a:	6879      	ldr	r1, [r7, #4]
 8001c3c:	4613      	mov	r3, r2
 8001c3e:	009b      	lsls	r3, r3, #2
 8001c40:	4413      	add	r3, r2
 8001c42:	00db      	lsls	r3, r3, #3
 8001c44:	440b      	add	r3, r1
 8001c46:	f203 1353 	addw	r3, r3, #339	@ 0x153
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	701a      	strb	r2, [r3, #0]
 8001c4e:	7bfa      	ldrb	r2, [r7, #15]
 8001c50:	6879      	ldr	r1, [r7, #4]
 8001c52:	4613      	mov	r3, r2
 8001c54:	009b      	lsls	r3, r3, #2
 8001c56:	4413      	add	r3, r2
 8001c58:	00db      	lsls	r3, r3, #3
 8001c5a:	440b      	add	r3, r1
 8001c5c:	f503 73b0 	add.w	r3, r3, #352	@ 0x160
 8001c60:	2200      	movs	r2, #0
 8001c62:	601a      	str	r2, [r3, #0]
 8001c64:	7bfa      	ldrb	r2, [r7, #15]
 8001c66:	6879      	ldr	r1, [r7, #4]
 8001c68:	4613      	mov	r3, r2
 8001c6a:	009b      	lsls	r3, r3, #2
 8001c6c:	4413      	add	r3, r2
 8001c6e:	00db      	lsls	r3, r3, #3
 8001c70:	440b      	add	r3, r1
 8001c72:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8001c76:	2200      	movs	r2, #0
 8001c78:	601a      	str	r2, [r3, #0]
 8001c7a:	7bfa      	ldrb	r2, [r7, #15]
 8001c7c:	6879      	ldr	r1, [r7, #4]
 8001c7e:	4613      	mov	r3, r2
 8001c80:	009b      	lsls	r3, r3, #2
 8001c82:	4413      	add	r3, r2
 8001c84:	00db      	lsls	r3, r3, #3
 8001c86:	440b      	add	r3, r1
 8001c88:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 8001c8c:	2200      	movs	r2, #0
 8001c8e:	601a      	str	r2, [r3, #0]
 8001c90:	7bfb      	ldrb	r3, [r7, #15]
 8001c92:	3301      	adds	r3, #1
 8001c94:	73fb      	strb	r3, [r7, #15]
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	791b      	ldrb	r3, [r3, #4]
 8001c9a:	7bfa      	ldrb	r2, [r7, #15]
 8001c9c:	429a      	cmp	r2, r3
 8001c9e:	d3b5      	bcc.n	8001c0c <HAL_PCD_Init+0x116>
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	6818      	ldr	r0, [r3, #0]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	3304      	adds	r3, #4
 8001ca8:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001caa:	f002 fa1e 	bl	80040ea <USB_DevInit>
 8001cae:	4603      	mov	r3, r0
 8001cb0:	2b00      	cmp	r3, #0
 8001cb2:	d005      	beq.n	8001cc0 <HAL_PCD_Init+0x1ca>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8001cbc:	2301      	movs	r3, #1
 8001cbe:	e00c      	b.n	8001cda <HAL_PCD_Init+0x1e4>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	735a      	strb	r2, [r3, #13]
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	2201      	movs	r2, #1
 8001cca:	f883 2291 	strb.w	r2, [r3, #657]	@ 0x291
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	4618      	mov	r0, r3
 8001cd4:	f004 fc9d 	bl	8006612 <USB_DevDisconnect>
 8001cd8:	2300      	movs	r3, #0
 8001cda:	4618      	mov	r0, r3
 8001cdc:	3710      	adds	r7, #16
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bd80      	pop	{r7, pc}

08001ce2 <HAL_PCD_Start>:
 8001ce2:	b580      	push	{r7, lr}
 8001ce4:	b082      	sub	sp, #8
 8001ce6:	af00      	add	r7, sp, #0
 8001ce8:	6078      	str	r0, [r7, #4]
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8001cf0:	2b01      	cmp	r3, #1
 8001cf2:	d101      	bne.n	8001cf8 <HAL_PCD_Start+0x16>
 8001cf4:	2302      	movs	r3, #2
 8001cf6:	e016      	b.n	8001d26 <HAL_PCD_Start+0x44>
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	2201      	movs	r2, #1
 8001cfc:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	4618      	mov	r0, r3
 8001d06:	f002 f9b4 	bl	8004072 <USB_EnableGlobalInt>
 8001d0a:	2101      	movs	r1, #1
 8001d0c:	6878      	ldr	r0, [r7, #4]
 8001d0e:	f006 faec 	bl	80082ea <HAL_PCDEx_SetConnectionState>
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4618      	mov	r0, r3
 8001d18:	f004 fc71 	bl	80065fe <USB_DevConnect>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2200      	movs	r2, #0
 8001d20:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8001d24:	2300      	movs	r3, #0
 8001d26:	4618      	mov	r0, r3
 8001d28:	3708      	adds	r7, #8
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	bd80      	pop	{r7, pc}

08001d2e <HAL_PCD_IRQHandler>:
 8001d2e:	b580      	push	{r7, lr}
 8001d30:	b088      	sub	sp, #32
 8001d32:	af00      	add	r7, sp, #0
 8001d34:	6078      	str	r0, [r7, #4]
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	4618      	mov	r0, r3
 8001d3c:	f004 fc73 	bl	8006626 <USB_ReadInterrupts>
 8001d40:	61b8      	str	r0, [r7, #24]
 8001d42:	69bb      	ldr	r3, [r7, #24]
 8001d44:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	d003      	beq.n	8001d54 <HAL_PCD_IRQHandler+0x26>
 8001d4c:	6878      	ldr	r0, [r7, #4]
 8001d4e:	f000 fb03 	bl	8002358 <PCD_EP_ISR_Handler>
 8001d52:	e119      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001d54:	69bb      	ldr	r3, [r7, #24]
 8001d56:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d013      	beq.n	8001d86 <HAL_PCD_IRQHandler+0x58>
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001d66:	b29a      	uxth	r2, r3
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001d70:	b292      	uxth	r2, r2
 8001d72:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001d76:	6878      	ldr	r0, [r7, #4]
 8001d78:	f006 f8e5 	bl	8007f46 <HAL_PCD_ResetCallback>
 8001d7c:	2100      	movs	r1, #0
 8001d7e:	6878      	ldr	r0, [r7, #4]
 8001d80:	f000 f905 	bl	8001f8e <HAL_PCD_SetAddress>
 8001d84:	e100      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001d86:	69bb      	ldr	r3, [r7, #24]
 8001d88:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d00c      	beq.n	8001daa <HAL_PCD_IRQHandler+0x7c>
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001d98:	b29a      	uxth	r2, r3
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	681b      	ldr	r3, [r3, #0]
 8001d9e:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8001da2:	b292      	uxth	r2, r2
 8001da4:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001da8:	e0ee      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001daa:	69bb      	ldr	r3, [r7, #24]
 8001dac:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d00c      	beq.n	8001dce <HAL_PCD_IRQHandler+0xa0>
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001dbc:	b29a      	uxth	r2, r3
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001dc6:	b292      	uxth	r2, r2
 8001dc8:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001dcc:	e0dc      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001dce:	69bb      	ldr	r3, [r7, #24]
 8001dd0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d027      	beq.n	8001e28 <HAL_PCD_IRQHandler+0xfa>
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001de0:	b29a      	uxth	r2, r3
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	f022 0204 	bic.w	r2, r2, #4
 8001dea:	b292      	uxth	r2, r2
 8001dec:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001df8:	b29a      	uxth	r2, r3
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	f022 0208 	bic.w	r2, r2, #8
 8001e02:	b292      	uxth	r2, r2
 8001e04:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001e08:	6878      	ldr	r0, [r7, #4]
 8001e0a:	f006 f8d5 	bl	8007fb8 <HAL_PCD_ResumeCallback>
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	681b      	ldr	r3, [r3, #0]
 8001e12:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001e16:	b29a      	uxth	r2, r3
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8001e20:	b292      	uxth	r2, r2
 8001e22:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001e26:	e0af      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001e28:	69bb      	ldr	r3, [r7, #24]
 8001e2a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	f000 8083 	beq.w	8001f3a <HAL_PCD_IRQHandler+0x20c>
 8001e34:	2300      	movs	r3, #0
 8001e36:	77fb      	strb	r3, [r7, #31]
 8001e38:	e010      	b.n	8001e5c <HAL_PCD_IRQHandler+0x12e>
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	681b      	ldr	r3, [r3, #0]
 8001e3e:	461a      	mov	r2, r3
 8001e40:	7ffb      	ldrb	r3, [r7, #31]
 8001e42:	009b      	lsls	r3, r3, #2
 8001e44:	441a      	add	r2, r3
 8001e46:	7ffb      	ldrb	r3, [r7, #31]
 8001e48:	8812      	ldrh	r2, [r2, #0]
 8001e4a:	b292      	uxth	r2, r2
 8001e4c:	005b      	lsls	r3, r3, #1
 8001e4e:	3320      	adds	r3, #32
 8001e50:	443b      	add	r3, r7
 8001e52:	f823 2c18 	strh.w	r2, [r3, #-24]
 8001e56:	7ffb      	ldrb	r3, [r7, #31]
 8001e58:	3301      	adds	r3, #1
 8001e5a:	77fb      	strb	r3, [r7, #31]
 8001e5c:	7ffb      	ldrb	r3, [r7, #31]
 8001e5e:	2b07      	cmp	r3, #7
 8001e60:	d9eb      	bls.n	8001e3a <HAL_PCD_IRQHandler+0x10c>
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001e6a:	b29a      	uxth	r2, r3
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	f042 0201 	orr.w	r2, r2, #1
 8001e74:	b292      	uxth	r2, r2
 8001e76:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001e82:	b29a      	uxth	r2, r3
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	f022 0201 	bic.w	r2, r2, #1
 8001e8c:	b292      	uxth	r2, r2
 8001e8e:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001e92:	bf00      	nop
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	681b      	ldr	r3, [r3, #0]
 8001e98:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001e9c:	b29b      	uxth	r3, r3
 8001e9e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d0f6      	beq.n	8001e94 <HAL_PCD_IRQHandler+0x166>
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001eae:	b29a      	uxth	r2, r3
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001eb8:	b292      	uxth	r2, r2
 8001eba:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	77fb      	strb	r3, [r7, #31]
 8001ec2:	e00f      	b.n	8001ee4 <HAL_PCD_IRQHandler+0x1b6>
 8001ec4:	7ffb      	ldrb	r3, [r7, #31]
 8001ec6:	687a      	ldr	r2, [r7, #4]
 8001ec8:	6812      	ldr	r2, [r2, #0]
 8001eca:	4611      	mov	r1, r2
 8001ecc:	7ffa      	ldrb	r2, [r7, #31]
 8001ece:	0092      	lsls	r2, r2, #2
 8001ed0:	440a      	add	r2, r1
 8001ed2:	005b      	lsls	r3, r3, #1
 8001ed4:	3320      	adds	r3, #32
 8001ed6:	443b      	add	r3, r7
 8001ed8:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 8001edc:	8013      	strh	r3, [r2, #0]
 8001ede:	7ffb      	ldrb	r3, [r7, #31]
 8001ee0:	3301      	adds	r3, #1
 8001ee2:	77fb      	strb	r3, [r7, #31]
 8001ee4:	7ffb      	ldrb	r3, [r7, #31]
 8001ee6:	2b07      	cmp	r3, #7
 8001ee8:	d9ec      	bls.n	8001ec4 <HAL_PCD_IRQHandler+0x196>
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	681b      	ldr	r3, [r3, #0]
 8001eee:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001ef2:	b29a      	uxth	r2, r3
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	f042 0208 	orr.w	r2, r2, #8
 8001efc:	b292      	uxth	r2, r2
 8001efe:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001f02:	687b      	ldr	r3, [r7, #4]
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001f0a:	b29a      	uxth	r2, r3
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001f14:	b292      	uxth	r2, r2
 8001f16:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 8001f22:	b29a      	uxth	r2, r3
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	f042 0204 	orr.w	r2, r2, #4
 8001f2c:	b292      	uxth	r2, r2
 8001f2e:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8001f32:	6878      	ldr	r0, [r7, #4]
 8001f34:	f006 f826 	bl	8007f84 <HAL_PCD_SuspendCallback>
 8001f38:	e026      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001f3a:	69bb      	ldr	r3, [r7, #24]
 8001f3c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001f40:	2b00      	cmp	r3, #0
 8001f42:	d00f      	beq.n	8001f64 <HAL_PCD_IRQHandler+0x236>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001f4c:	b29a      	uxth	r2, r3
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8001f56:	b292      	uxth	r2, r2
 8001f58:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001f5c:	6878      	ldr	r0, [r7, #4]
 8001f5e:	f005 ffe4 	bl	8007f2a <HAL_PCD_SOFCallback>
 8001f62:	e011      	b.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001f64:	69bb      	ldr	r3, [r7, #24]
 8001f66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d00c      	beq.n	8001f88 <HAL_PCD_IRQHandler+0x25a>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8001f76:	b29a      	uxth	r2, r3
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8001f80:	b292      	uxth	r2, r2
 8001f82:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8001f86:	bf00      	nop
 8001f88:	3720      	adds	r7, #32
 8001f8a:	46bd      	mov	sp, r7
 8001f8c:	bd80      	pop	{r7, pc}

08001f8e <HAL_PCD_SetAddress>:
 8001f8e:	b580      	push	{r7, lr}
 8001f90:	b082      	sub	sp, #8
 8001f92:	af00      	add	r7, sp, #0
 8001f94:	6078      	str	r0, [r7, #4]
 8001f96:	460b      	mov	r3, r1
 8001f98:	70fb      	strb	r3, [r7, #3]
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8001fa0:	2b01      	cmp	r3, #1
 8001fa2:	d101      	bne.n	8001fa8 <HAL_PCD_SetAddress+0x1a>
 8001fa4:	2302      	movs	r3, #2
 8001fa6:	e012      	b.n	8001fce <HAL_PCD_SetAddress+0x40>
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	2201      	movs	r2, #1
 8001fac:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	78fa      	ldrb	r2, [r7, #3]
 8001fb4:	735a      	strb	r2, [r3, #13]
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	78fa      	ldrb	r2, [r7, #3]
 8001fbc:	4611      	mov	r1, r2
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	f004 fb0a 	bl	80065d8 <USB_SetDevAddress>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	2200      	movs	r2, #0
 8001fc8:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8001fcc:	2300      	movs	r3, #0
 8001fce:	4618      	mov	r0, r3
 8001fd0:	3708      	adds	r7, #8
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bd80      	pop	{r7, pc}

08001fd6 <HAL_PCD_EP_Open>:
 8001fd6:	b580      	push	{r7, lr}
 8001fd8:	b084      	sub	sp, #16
 8001fda:	af00      	add	r7, sp, #0
 8001fdc:	6078      	str	r0, [r7, #4]
 8001fde:	4608      	mov	r0, r1
 8001fe0:	4611      	mov	r1, r2
 8001fe2:	461a      	mov	r2, r3
 8001fe4:	4603      	mov	r3, r0
 8001fe6:	70fb      	strb	r3, [r7, #3]
 8001fe8:	460b      	mov	r3, r1
 8001fea:	803b      	strh	r3, [r7, #0]
 8001fec:	4613      	mov	r3, r2
 8001fee:	70bb      	strb	r3, [r7, #2]
 8001ff0:	2300      	movs	r3, #0
 8001ff2:	72fb      	strb	r3, [r7, #11]
 8001ff4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	da0e      	bge.n	800201a <HAL_PCD_EP_Open+0x44>
 8001ffc:	78fb      	ldrb	r3, [r7, #3]
 8001ffe:	f003 0207 	and.w	r2, r3, #7
 8002002:	4613      	mov	r3, r2
 8002004:	009b      	lsls	r3, r3, #2
 8002006:	4413      	add	r3, r2
 8002008:	00db      	lsls	r3, r3, #3
 800200a:	3310      	adds	r3, #16
 800200c:	687a      	ldr	r2, [r7, #4]
 800200e:	4413      	add	r3, r2
 8002010:	60fb      	str	r3, [r7, #12]
 8002012:	68fb      	ldr	r3, [r7, #12]
 8002014:	2201      	movs	r2, #1
 8002016:	705a      	strb	r2, [r3, #1]
 8002018:	e00e      	b.n	8002038 <HAL_PCD_EP_Open+0x62>
 800201a:	78fb      	ldrb	r3, [r7, #3]
 800201c:	f003 0207 	and.w	r2, r3, #7
 8002020:	4613      	mov	r3, r2
 8002022:	009b      	lsls	r3, r3, #2
 8002024:	4413      	add	r3, r2
 8002026:	00db      	lsls	r3, r3, #3
 8002028:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800202c:	687a      	ldr	r2, [r7, #4]
 800202e:	4413      	add	r3, r2
 8002030:	60fb      	str	r3, [r7, #12]
 8002032:	68fb      	ldr	r3, [r7, #12]
 8002034:	2200      	movs	r2, #0
 8002036:	705a      	strb	r2, [r3, #1]
 8002038:	78fb      	ldrb	r3, [r7, #3]
 800203a:	f003 0307 	and.w	r3, r3, #7
 800203e:	b2da      	uxtb	r2, r3
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	701a      	strb	r2, [r3, #0]
 8002044:	883a      	ldrh	r2, [r7, #0]
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	611a      	str	r2, [r3, #16]
 800204a:	68fb      	ldr	r3, [r7, #12]
 800204c:	78ba      	ldrb	r2, [r7, #2]
 800204e:	70da      	strb	r2, [r3, #3]
 8002050:	78bb      	ldrb	r3, [r7, #2]
 8002052:	2b02      	cmp	r3, #2
 8002054:	d102      	bne.n	800205c <HAL_PCD_EP_Open+0x86>
 8002056:	68fb      	ldr	r3, [r7, #12]
 8002058:	2200      	movs	r2, #0
 800205a:	711a      	strb	r2, [r3, #4]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8002062:	2b01      	cmp	r3, #1
 8002064:	d101      	bne.n	800206a <HAL_PCD_EP_Open+0x94>
 8002066:	2302      	movs	r3, #2
 8002068:	e00e      	b.n	8002088 <HAL_PCD_EP_Open+0xb2>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	2201      	movs	r2, #1
 800206e:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	68f9      	ldr	r1, [r7, #12]
 8002078:	4618      	mov	r0, r3
 800207a:	f002 f853 	bl	8004124 <USB_ActivateEndpoint>
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	2200      	movs	r2, #0
 8002082:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8002086:	7afb      	ldrb	r3, [r7, #11]
 8002088:	4618      	mov	r0, r3
 800208a:	3710      	adds	r7, #16
 800208c:	46bd      	mov	sp, r7
 800208e:	bd80      	pop	{r7, pc}

08002090 <HAL_PCD_EP_Close>:
 8002090:	b580      	push	{r7, lr}
 8002092:	b084      	sub	sp, #16
 8002094:	af00      	add	r7, sp, #0
 8002096:	6078      	str	r0, [r7, #4]
 8002098:	460b      	mov	r3, r1
 800209a:	70fb      	strb	r3, [r7, #3]
 800209c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	da0e      	bge.n	80020c2 <HAL_PCD_EP_Close+0x32>
 80020a4:	78fb      	ldrb	r3, [r7, #3]
 80020a6:	f003 0207 	and.w	r2, r3, #7
 80020aa:	4613      	mov	r3, r2
 80020ac:	009b      	lsls	r3, r3, #2
 80020ae:	4413      	add	r3, r2
 80020b0:	00db      	lsls	r3, r3, #3
 80020b2:	3310      	adds	r3, #16
 80020b4:	687a      	ldr	r2, [r7, #4]
 80020b6:	4413      	add	r3, r2
 80020b8:	60fb      	str	r3, [r7, #12]
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	2201      	movs	r2, #1
 80020be:	705a      	strb	r2, [r3, #1]
 80020c0:	e00e      	b.n	80020e0 <HAL_PCD_EP_Close+0x50>
 80020c2:	78fb      	ldrb	r3, [r7, #3]
 80020c4:	f003 0207 	and.w	r2, r3, #7
 80020c8:	4613      	mov	r3, r2
 80020ca:	009b      	lsls	r3, r3, #2
 80020cc:	4413      	add	r3, r2
 80020ce:	00db      	lsls	r3, r3, #3
 80020d0:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80020d4:	687a      	ldr	r2, [r7, #4]
 80020d6:	4413      	add	r3, r2
 80020d8:	60fb      	str	r3, [r7, #12]
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	2200      	movs	r2, #0
 80020de:	705a      	strb	r2, [r3, #1]
 80020e0:	78fb      	ldrb	r3, [r7, #3]
 80020e2:	f003 0307 	and.w	r3, r3, #7
 80020e6:	b2da      	uxtb	r2, r3
 80020e8:	68fb      	ldr	r3, [r7, #12]
 80020ea:	701a      	strb	r2, [r3, #0]
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 80020f2:	2b01      	cmp	r3, #1
 80020f4:	d101      	bne.n	80020fa <HAL_PCD_EP_Close+0x6a>
 80020f6:	2302      	movs	r3, #2
 80020f8:	e00e      	b.n	8002118 <HAL_PCD_EP_Close+0x88>
 80020fa:	687b      	ldr	r3, [r7, #4]
 80020fc:	2201      	movs	r2, #1
 80020fe:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	68f9      	ldr	r1, [r7, #12]
 8002108:	4618      	mov	r0, r3
 800210a:	f002 fbcb 	bl	80048a4 <USB_DeactivateEndpoint>
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	2200      	movs	r2, #0
 8002112:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8002116:	2300      	movs	r3, #0
 8002118:	4618      	mov	r0, r3
 800211a:	3710      	adds	r7, #16
 800211c:	46bd      	mov	sp, r7
 800211e:	bd80      	pop	{r7, pc}

08002120 <HAL_PCD_EP_Receive>:
 8002120:	b580      	push	{r7, lr}
 8002122:	b086      	sub	sp, #24
 8002124:	af00      	add	r7, sp, #0
 8002126:	60f8      	str	r0, [r7, #12]
 8002128:	607a      	str	r2, [r7, #4]
 800212a:	603b      	str	r3, [r7, #0]
 800212c:	460b      	mov	r3, r1
 800212e:	72fb      	strb	r3, [r7, #11]
 8002130:	7afb      	ldrb	r3, [r7, #11]
 8002132:	f003 0207 	and.w	r2, r3, #7
 8002136:	4613      	mov	r3, r2
 8002138:	009b      	lsls	r3, r3, #2
 800213a:	4413      	add	r3, r2
 800213c:	00db      	lsls	r3, r3, #3
 800213e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8002142:	68fa      	ldr	r2, [r7, #12]
 8002144:	4413      	add	r3, r2
 8002146:	617b      	str	r3, [r7, #20]
 8002148:	697b      	ldr	r3, [r7, #20]
 800214a:	687a      	ldr	r2, [r7, #4]
 800214c:	615a      	str	r2, [r3, #20]
 800214e:	697b      	ldr	r3, [r7, #20]
 8002150:	683a      	ldr	r2, [r7, #0]
 8002152:	619a      	str	r2, [r3, #24]
 8002154:	697b      	ldr	r3, [r7, #20]
 8002156:	2200      	movs	r2, #0
 8002158:	61da      	str	r2, [r3, #28]
 800215a:	697b      	ldr	r3, [r7, #20]
 800215c:	2200      	movs	r2, #0
 800215e:	705a      	strb	r2, [r3, #1]
 8002160:	7afb      	ldrb	r3, [r7, #11]
 8002162:	f003 0307 	and.w	r3, r3, #7
 8002166:	b2da      	uxtb	r2, r3
 8002168:	697b      	ldr	r3, [r7, #20]
 800216a:	701a      	strb	r2, [r3, #0]
 800216c:	68fb      	ldr	r3, [r7, #12]
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	6979      	ldr	r1, [r7, #20]
 8002172:	4618      	mov	r0, r3
 8002174:	f002 fd82 	bl	8004c7c <USB_EPStartXfer>
 8002178:	2300      	movs	r3, #0
 800217a:	4618      	mov	r0, r3
 800217c:	3718      	adds	r7, #24
 800217e:	46bd      	mov	sp, r7
 8002180:	bd80      	pop	{r7, pc}

08002182 <HAL_PCD_EP_Transmit>:
 8002182:	b580      	push	{r7, lr}
 8002184:	b086      	sub	sp, #24
 8002186:	af00      	add	r7, sp, #0
 8002188:	60f8      	str	r0, [r7, #12]
 800218a:	607a      	str	r2, [r7, #4]
 800218c:	603b      	str	r3, [r7, #0]
 800218e:	460b      	mov	r3, r1
 8002190:	72fb      	strb	r3, [r7, #11]
 8002192:	7afb      	ldrb	r3, [r7, #11]
 8002194:	f003 0207 	and.w	r2, r3, #7
 8002198:	4613      	mov	r3, r2
 800219a:	009b      	lsls	r3, r3, #2
 800219c:	4413      	add	r3, r2
 800219e:	00db      	lsls	r3, r3, #3
 80021a0:	3310      	adds	r3, #16
 80021a2:	68fa      	ldr	r2, [r7, #12]
 80021a4:	4413      	add	r3, r2
 80021a6:	617b      	str	r3, [r7, #20]
 80021a8:	697b      	ldr	r3, [r7, #20]
 80021aa:	687a      	ldr	r2, [r7, #4]
 80021ac:	615a      	str	r2, [r3, #20]
 80021ae:	697b      	ldr	r3, [r7, #20]
 80021b0:	683a      	ldr	r2, [r7, #0]
 80021b2:	619a      	str	r2, [r3, #24]
 80021b4:	697b      	ldr	r3, [r7, #20]
 80021b6:	2201      	movs	r2, #1
 80021b8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80021bc:	697b      	ldr	r3, [r7, #20]
 80021be:	683a      	ldr	r2, [r7, #0]
 80021c0:	621a      	str	r2, [r3, #32]
 80021c2:	697b      	ldr	r3, [r7, #20]
 80021c4:	2200      	movs	r2, #0
 80021c6:	61da      	str	r2, [r3, #28]
 80021c8:	697b      	ldr	r3, [r7, #20]
 80021ca:	2201      	movs	r2, #1
 80021cc:	705a      	strb	r2, [r3, #1]
 80021ce:	7afb      	ldrb	r3, [r7, #11]
 80021d0:	f003 0307 	and.w	r3, r3, #7
 80021d4:	b2da      	uxtb	r2, r3
 80021d6:	697b      	ldr	r3, [r7, #20]
 80021d8:	701a      	strb	r2, [r3, #0]
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	6979      	ldr	r1, [r7, #20]
 80021e0:	4618      	mov	r0, r3
 80021e2:	f002 fd4b 	bl	8004c7c <USB_EPStartXfer>
 80021e6:	2300      	movs	r3, #0
 80021e8:	4618      	mov	r0, r3
 80021ea:	3718      	adds	r7, #24
 80021ec:	46bd      	mov	sp, r7
 80021ee:	bd80      	pop	{r7, pc}

080021f0 <HAL_PCD_EP_SetStall>:
 80021f0:	b580      	push	{r7, lr}
 80021f2:	b084      	sub	sp, #16
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	6078      	str	r0, [r7, #4]
 80021f8:	460b      	mov	r3, r1
 80021fa:	70fb      	strb	r3, [r7, #3]
 80021fc:	78fb      	ldrb	r3, [r7, #3]
 80021fe:	f003 0307 	and.w	r3, r3, #7
 8002202:	687a      	ldr	r2, [r7, #4]
 8002204:	7912      	ldrb	r2, [r2, #4]
 8002206:	4293      	cmp	r3, r2
 8002208:	d901      	bls.n	800220e <HAL_PCD_EP_SetStall+0x1e>
 800220a:	2301      	movs	r3, #1
 800220c:	e04c      	b.n	80022a8 <HAL_PCD_EP_SetStall+0xb8>
 800220e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002212:	2b00      	cmp	r3, #0
 8002214:	da0e      	bge.n	8002234 <HAL_PCD_EP_SetStall+0x44>
 8002216:	78fb      	ldrb	r3, [r7, #3]
 8002218:	f003 0207 	and.w	r2, r3, #7
 800221c:	4613      	mov	r3, r2
 800221e:	009b      	lsls	r3, r3, #2
 8002220:	4413      	add	r3, r2
 8002222:	00db      	lsls	r3, r3, #3
 8002224:	3310      	adds	r3, #16
 8002226:	687a      	ldr	r2, [r7, #4]
 8002228:	4413      	add	r3, r2
 800222a:	60fb      	str	r3, [r7, #12]
 800222c:	68fb      	ldr	r3, [r7, #12]
 800222e:	2201      	movs	r2, #1
 8002230:	705a      	strb	r2, [r3, #1]
 8002232:	e00c      	b.n	800224e <HAL_PCD_EP_SetStall+0x5e>
 8002234:	78fa      	ldrb	r2, [r7, #3]
 8002236:	4613      	mov	r3, r2
 8002238:	009b      	lsls	r3, r3, #2
 800223a:	4413      	add	r3, r2
 800223c:	00db      	lsls	r3, r3, #3
 800223e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8002242:	687a      	ldr	r2, [r7, #4]
 8002244:	4413      	add	r3, r2
 8002246:	60fb      	str	r3, [r7, #12]
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	2200      	movs	r2, #0
 800224c:	705a      	strb	r2, [r3, #1]
 800224e:	68fb      	ldr	r3, [r7, #12]
 8002250:	2201      	movs	r2, #1
 8002252:	709a      	strb	r2, [r3, #2]
 8002254:	78fb      	ldrb	r3, [r7, #3]
 8002256:	f003 0307 	and.w	r3, r3, #7
 800225a:	b2da      	uxtb	r2, r3
 800225c:	68fb      	ldr	r3, [r7, #12]
 800225e:	701a      	strb	r2, [r3, #0]
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 8002266:	2b01      	cmp	r3, #1
 8002268:	d101      	bne.n	800226e <HAL_PCD_EP_SetStall+0x7e>
 800226a:	2302      	movs	r3, #2
 800226c:	e01c      	b.n	80022a8 <HAL_PCD_EP_SetStall+0xb8>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	2201      	movs	r2, #1
 8002272:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	68f9      	ldr	r1, [r7, #12]
 800227c:	4618      	mov	r0, r3
 800227e:	f004 f8ae 	bl	80063de <USB_EPSetStall>
 8002282:	78fb      	ldrb	r3, [r7, #3]
 8002284:	f003 0307 	and.w	r3, r3, #7
 8002288:	2b00      	cmp	r3, #0
 800228a:	d108      	bne.n	800229e <HAL_PCD_EP_SetStall+0xae>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681a      	ldr	r2, [r3, #0]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	f503 7326 	add.w	r3, r3, #664	@ 0x298
 8002296:	4619      	mov	r1, r3
 8002298:	4610      	mov	r0, r2
 800229a:	f004 f9d3 	bl	8006644 <USB_EP0_OutStart>
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	2200      	movs	r2, #0
 80022a2:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 80022a6:	2300      	movs	r3, #0
 80022a8:	4618      	mov	r0, r3
 80022aa:	3710      	adds	r7, #16
 80022ac:	46bd      	mov	sp, r7
 80022ae:	bd80      	pop	{r7, pc}

080022b0 <HAL_PCD_EP_ClrStall>:
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b084      	sub	sp, #16
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
 80022b8:	460b      	mov	r3, r1
 80022ba:	70fb      	strb	r3, [r7, #3]
 80022bc:	78fb      	ldrb	r3, [r7, #3]
 80022be:	f003 030f 	and.w	r3, r3, #15
 80022c2:	687a      	ldr	r2, [r7, #4]
 80022c4:	7912      	ldrb	r2, [r2, #4]
 80022c6:	4293      	cmp	r3, r2
 80022c8:	d901      	bls.n	80022ce <HAL_PCD_EP_ClrStall+0x1e>
 80022ca:	2301      	movs	r3, #1
 80022cc:	e040      	b.n	8002350 <HAL_PCD_EP_ClrStall+0xa0>
 80022ce:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	da0e      	bge.n	80022f4 <HAL_PCD_EP_ClrStall+0x44>
 80022d6:	78fb      	ldrb	r3, [r7, #3]
 80022d8:	f003 0207 	and.w	r2, r3, #7
 80022dc:	4613      	mov	r3, r2
 80022de:	009b      	lsls	r3, r3, #2
 80022e0:	4413      	add	r3, r2
 80022e2:	00db      	lsls	r3, r3, #3
 80022e4:	3310      	adds	r3, #16
 80022e6:	687a      	ldr	r2, [r7, #4]
 80022e8:	4413      	add	r3, r2
 80022ea:	60fb      	str	r3, [r7, #12]
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	2201      	movs	r2, #1
 80022f0:	705a      	strb	r2, [r3, #1]
 80022f2:	e00e      	b.n	8002312 <HAL_PCD_EP_ClrStall+0x62>
 80022f4:	78fb      	ldrb	r3, [r7, #3]
 80022f6:	f003 0207 	and.w	r2, r3, #7
 80022fa:	4613      	mov	r3, r2
 80022fc:	009b      	lsls	r3, r3, #2
 80022fe:	4413      	add	r3, r2
 8002300:	00db      	lsls	r3, r3, #3
 8002302:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8002306:	687a      	ldr	r2, [r7, #4]
 8002308:	4413      	add	r3, r2
 800230a:	60fb      	str	r3, [r7, #12]
 800230c:	68fb      	ldr	r3, [r7, #12]
 800230e:	2200      	movs	r2, #0
 8002310:	705a      	strb	r2, [r3, #1]
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	2200      	movs	r2, #0
 8002316:	709a      	strb	r2, [r3, #2]
 8002318:	78fb      	ldrb	r3, [r7, #3]
 800231a:	f003 0307 	and.w	r3, r3, #7
 800231e:	b2da      	uxtb	r2, r3
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	701a      	strb	r2, [r3, #0]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	f893 3290 	ldrb.w	r3, [r3, #656]	@ 0x290
 800232a:	2b01      	cmp	r3, #1
 800232c:	d101      	bne.n	8002332 <HAL_PCD_EP_ClrStall+0x82>
 800232e:	2302      	movs	r3, #2
 8002330:	e00e      	b.n	8002350 <HAL_PCD_EP_ClrStall+0xa0>
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	2201      	movs	r2, #1
 8002336:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	68f9      	ldr	r1, [r7, #12]
 8002340:	4618      	mov	r0, r3
 8002342:	f004 f89c 	bl	800647e <USB_EPClearStall>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	2200      	movs	r2, #0
 800234a:	f883 2290 	strb.w	r2, [r3, #656]	@ 0x290
 800234e:	2300      	movs	r3, #0
 8002350:	4618      	mov	r0, r3
 8002352:	3710      	adds	r7, #16
 8002354:	46bd      	mov	sp, r7
 8002356:	bd80      	pop	{r7, pc}

08002358 <PCD_EP_ISR_Handler>:
 8002358:	b580      	push	{r7, lr}
 800235a:	b096      	sub	sp, #88	@ 0x58
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	e3bb      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 800236a:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 800236e:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 8002372:	b2db      	uxtb	r3, r3
 8002374:	f003 030f 	and.w	r3, r3, #15
 8002378:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 800237c:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8002380:	2b00      	cmp	r3, #0
 8002382:	f040 8175 	bne.w	8002670 <PCD_EP_ISR_Handler+0x318>
 8002386:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 800238a:	f003 0310 	and.w	r3, r3, #16
 800238e:	2b00      	cmp	r3, #0
 8002390:	d14e      	bne.n	8002430 <PCD_EP_ISR_Handler+0xd8>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	881b      	ldrh	r3, [r3, #0]
 8002398:	b29b      	uxth	r3, r3
 800239a:	f423 43e1 	bic.w	r3, r3, #28800	@ 0x7080
 800239e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80023a2:	81fb      	strh	r3, [r7, #14]
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681a      	ldr	r2, [r3, #0]
 80023a8:	89fb      	ldrh	r3, [r7, #14]
 80023aa:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80023ae:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80023b2:	b29b      	uxth	r3, r3
 80023b4:	8013      	strh	r3, [r2, #0]
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	3310      	adds	r3, #16
 80023ba:	657b      	str	r3, [r7, #84]	@ 0x54
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80023c4:	b29b      	uxth	r3, r3
 80023c6:	461a      	mov	r2, r3
 80023c8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80023ca:	781b      	ldrb	r3, [r3, #0]
 80023cc:	00db      	lsls	r3, r3, #3
 80023ce:	4413      	add	r3, r2
 80023d0:	3302      	adds	r3, #2
 80023d2:	005b      	lsls	r3, r3, #1
 80023d4:	687a      	ldr	r2, [r7, #4]
 80023d6:	6812      	ldr	r2, [r2, #0]
 80023d8:	4413      	add	r3, r2
 80023da:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80023de:	881b      	ldrh	r3, [r3, #0]
 80023e0:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80023e4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80023e6:	61da      	str	r2, [r3, #28]
 80023e8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80023ea:	695a      	ldr	r2, [r3, #20]
 80023ec:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80023ee:	69db      	ldr	r3, [r3, #28]
 80023f0:	441a      	add	r2, r3
 80023f2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80023f4:	615a      	str	r2, [r3, #20]
 80023f6:	2100      	movs	r1, #0
 80023f8:	6878      	ldr	r0, [r7, #4]
 80023fa:	f005 fd7c 	bl	8007ef6 <HAL_PCD_DataInStageCallback>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	7b5b      	ldrb	r3, [r3, #13]
 8002402:	b2db      	uxtb	r3, r3
 8002404:	2b00      	cmp	r3, #0
 8002406:	f000 8368 	beq.w	8002ada <PCD_EP_ISR_Handler+0x782>
 800240a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800240c:	699b      	ldr	r3, [r3, #24]
 800240e:	2b00      	cmp	r3, #0
 8002410:	f040 8363 	bne.w	8002ada <PCD_EP_ISR_Handler+0x782>
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	7b5b      	ldrb	r3, [r3, #13]
 8002418:	b2db      	uxtb	r3, r3
 800241a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800241e:	b2da      	uxtb	r2, r3
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f8a3 204c 	strh.w	r2, [r3, #76]	@ 0x4c
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	2200      	movs	r2, #0
 800242c:	735a      	strb	r2, [r3, #13]
 800242e:	e354      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8002436:	657b      	str	r3, [r7, #84]	@ 0x54
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	881b      	ldrh	r3, [r3, #0]
 800243e:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 8002442:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002446:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800244a:	2b00      	cmp	r3, #0
 800244c:	d034      	beq.n	80024b8 <PCD_EP_ISR_Handler+0x160>
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002456:	b29b      	uxth	r3, r3
 8002458:	461a      	mov	r2, r3
 800245a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800245c:	781b      	ldrb	r3, [r3, #0]
 800245e:	00db      	lsls	r3, r3, #3
 8002460:	4413      	add	r3, r2
 8002462:	3306      	adds	r3, #6
 8002464:	005b      	lsls	r3, r3, #1
 8002466:	687a      	ldr	r2, [r7, #4]
 8002468:	6812      	ldr	r2, [r2, #0]
 800246a:	4413      	add	r3, r2
 800246c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002470:	881b      	ldrh	r3, [r3, #0]
 8002472:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8002476:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002478:	61da      	str	r2, [r3, #28]
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	6818      	ldr	r0, [r3, #0]
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	f503 7126 	add.w	r1, r3, #664	@ 0x298
 8002484:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002486:	88da      	ldrh	r2, [r3, #6]
 8002488:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800248a:	69db      	ldr	r3, [r3, #28]
 800248c:	b29b      	uxth	r3, r3
 800248e:	f004 f92a 	bl	80066e6 <USB_ReadPMA>
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	881b      	ldrh	r3, [r3, #0]
 8002498:	b29a      	uxth	r2, r3
 800249a:	f640 738f 	movw	r3, #3983	@ 0xf8f
 800249e:	4013      	ands	r3, r2
 80024a0:	823b      	strh	r3, [r7, #16]
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	681b      	ldr	r3, [r3, #0]
 80024a6:	8a3a      	ldrh	r2, [r7, #16]
 80024a8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80024ac:	b292      	uxth	r2, r2
 80024ae:	801a      	strh	r2, [r3, #0]
 80024b0:	6878      	ldr	r0, [r7, #4]
 80024b2:	f005 fcf3 	bl	8007e9c <HAL_PCD_SetupStageCallback>
 80024b6:	e310      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 80024b8:	f9b7 304a 	ldrsh.w	r3, [r7, #74]	@ 0x4a
 80024bc:	2b00      	cmp	r3, #0
 80024be:	f280 830c 	bge.w	8002ada <PCD_EP_ISR_Handler+0x782>
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	881b      	ldrh	r3, [r3, #0]
 80024c8:	b29a      	uxth	r2, r3
 80024ca:	f640 738f 	movw	r3, #3983	@ 0xf8f
 80024ce:	4013      	ands	r3, r2
 80024d0:	83fb      	strh	r3, [r7, #30]
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	8bfa      	ldrh	r2, [r7, #30]
 80024d8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80024dc:	b292      	uxth	r2, r2
 80024de:	801a      	strh	r2, [r3, #0]
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80024e8:	b29b      	uxth	r3, r3
 80024ea:	461a      	mov	r2, r3
 80024ec:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80024ee:	781b      	ldrb	r3, [r3, #0]
 80024f0:	00db      	lsls	r3, r3, #3
 80024f2:	4413      	add	r3, r2
 80024f4:	3306      	adds	r3, #6
 80024f6:	005b      	lsls	r3, r3, #1
 80024f8:	687a      	ldr	r2, [r7, #4]
 80024fa:	6812      	ldr	r2, [r2, #0]
 80024fc:	4413      	add	r3, r2
 80024fe:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002502:	881b      	ldrh	r3, [r3, #0]
 8002504:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8002508:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800250a:	61da      	str	r2, [r3, #28]
 800250c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800250e:	69db      	ldr	r3, [r3, #28]
 8002510:	2b00      	cmp	r3, #0
 8002512:	d019      	beq.n	8002548 <PCD_EP_ISR_Handler+0x1f0>
 8002514:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002516:	695b      	ldr	r3, [r3, #20]
 8002518:	2b00      	cmp	r3, #0
 800251a:	d015      	beq.n	8002548 <PCD_EP_ISR_Handler+0x1f0>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	6818      	ldr	r0, [r3, #0]
 8002520:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002522:	6959      	ldr	r1, [r3, #20]
 8002524:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002526:	88da      	ldrh	r2, [r3, #6]
 8002528:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800252a:	69db      	ldr	r3, [r3, #28]
 800252c:	b29b      	uxth	r3, r3
 800252e:	f004 f8da 	bl	80066e6 <USB_ReadPMA>
 8002532:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002534:	695a      	ldr	r2, [r3, #20]
 8002536:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002538:	69db      	ldr	r3, [r3, #28]
 800253a:	441a      	add	r2, r3
 800253c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800253e:	615a      	str	r2, [r3, #20]
 8002540:	2100      	movs	r1, #0
 8002542:	6878      	ldr	r0, [r7, #4]
 8002544:	f005 fcbc 	bl	8007ec0 <HAL_PCD_DataOutStageCallback>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	881b      	ldrh	r3, [r3, #0]
 800254e:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 8002552:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002556:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800255a:	2b00      	cmp	r3, #0
 800255c:	f040 82bd 	bne.w	8002ada <PCD_EP_ISR_Handler+0x782>
 8002560:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002564:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 8002568:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800256c:	f000 82b5 	beq.w	8002ada <PCD_EP_ISR_Handler+0x782>
 8002570:	687b      	ldr	r3, [r7, #4]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	61bb      	str	r3, [r7, #24]
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800257e:	b29b      	uxth	r3, r3
 8002580:	461a      	mov	r2, r3
 8002582:	69bb      	ldr	r3, [r7, #24]
 8002584:	4413      	add	r3, r2
 8002586:	61bb      	str	r3, [r7, #24]
 8002588:	69bb      	ldr	r3, [r7, #24]
 800258a:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800258e:	617b      	str	r3, [r7, #20]
 8002590:	697b      	ldr	r3, [r7, #20]
 8002592:	881b      	ldrh	r3, [r3, #0]
 8002594:	b29b      	uxth	r3, r3
 8002596:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800259a:	b29a      	uxth	r2, r3
 800259c:	697b      	ldr	r3, [r7, #20]
 800259e:	801a      	strh	r2, [r3, #0]
 80025a0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80025a2:	691b      	ldr	r3, [r3, #16]
 80025a4:	2b3e      	cmp	r3, #62	@ 0x3e
 80025a6:	d91d      	bls.n	80025e4 <PCD_EP_ISR_Handler+0x28c>
 80025a8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80025aa:	691b      	ldr	r3, [r3, #16]
 80025ac:	095b      	lsrs	r3, r3, #5
 80025ae:	647b      	str	r3, [r7, #68]	@ 0x44
 80025b0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80025b2:	691b      	ldr	r3, [r3, #16]
 80025b4:	f003 031f 	and.w	r3, r3, #31
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d102      	bne.n	80025c2 <PCD_EP_ISR_Handler+0x26a>
 80025bc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80025be:	3b01      	subs	r3, #1
 80025c0:	647b      	str	r3, [r7, #68]	@ 0x44
 80025c2:	697b      	ldr	r3, [r7, #20]
 80025c4:	881b      	ldrh	r3, [r3, #0]
 80025c6:	b29a      	uxth	r2, r3
 80025c8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80025ca:	b29b      	uxth	r3, r3
 80025cc:	029b      	lsls	r3, r3, #10
 80025ce:	b29b      	uxth	r3, r3
 80025d0:	4313      	orrs	r3, r2
 80025d2:	b29b      	uxth	r3, r3
 80025d4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80025d8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80025dc:	b29a      	uxth	r2, r3
 80025de:	697b      	ldr	r3, [r7, #20]
 80025e0:	801a      	strh	r2, [r3, #0]
 80025e2:	e026      	b.n	8002632 <PCD_EP_ISR_Handler+0x2da>
 80025e4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80025e6:	691b      	ldr	r3, [r3, #16]
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d10a      	bne.n	8002602 <PCD_EP_ISR_Handler+0x2aa>
 80025ec:	697b      	ldr	r3, [r7, #20]
 80025ee:	881b      	ldrh	r3, [r3, #0]
 80025f0:	b29b      	uxth	r3, r3
 80025f2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80025f6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80025fa:	b29a      	uxth	r2, r3
 80025fc:	697b      	ldr	r3, [r7, #20]
 80025fe:	801a      	strh	r2, [r3, #0]
 8002600:	e017      	b.n	8002632 <PCD_EP_ISR_Handler+0x2da>
 8002602:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002604:	691b      	ldr	r3, [r3, #16]
 8002606:	085b      	lsrs	r3, r3, #1
 8002608:	647b      	str	r3, [r7, #68]	@ 0x44
 800260a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800260c:	691b      	ldr	r3, [r3, #16]
 800260e:	f003 0301 	and.w	r3, r3, #1
 8002612:	2b00      	cmp	r3, #0
 8002614:	d002      	beq.n	800261c <PCD_EP_ISR_Handler+0x2c4>
 8002616:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002618:	3301      	adds	r3, #1
 800261a:	647b      	str	r3, [r7, #68]	@ 0x44
 800261c:	697b      	ldr	r3, [r7, #20]
 800261e:	881b      	ldrh	r3, [r3, #0]
 8002620:	b29a      	uxth	r2, r3
 8002622:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002624:	b29b      	uxth	r3, r3
 8002626:	029b      	lsls	r3, r3, #10
 8002628:	b29b      	uxth	r3, r3
 800262a:	4313      	orrs	r3, r2
 800262c:	b29a      	uxth	r2, r3
 800262e:	697b      	ldr	r3, [r7, #20]
 8002630:	801a      	strh	r2, [r3, #0]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	881b      	ldrh	r3, [r3, #0]
 8002638:	b29b      	uxth	r3, r3
 800263a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800263e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002642:	827b      	strh	r3, [r7, #18]
 8002644:	8a7b      	ldrh	r3, [r7, #18]
 8002646:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 800264a:	827b      	strh	r3, [r7, #18]
 800264c:	8a7b      	ldrh	r3, [r7, #18]
 800264e:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8002652:	827b      	strh	r3, [r7, #18]
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	681a      	ldr	r2, [r3, #0]
 8002658:	8a7b      	ldrh	r3, [r7, #18]
 800265a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800265e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002662:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002666:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800266a:	b29b      	uxth	r3, r3
 800266c:	8013      	strh	r3, [r2, #0]
 800266e:	e234      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	461a      	mov	r2, r3
 8002676:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 800267a:	009b      	lsls	r3, r3, #2
 800267c:	4413      	add	r3, r2
 800267e:	881b      	ldrh	r3, [r3, #0]
 8002680:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 8002684:	f9b7 304a 	ldrsh.w	r3, [r7, #74]	@ 0x4a
 8002688:	2b00      	cmp	r3, #0
 800268a:	f280 80fc 	bge.w	8002886 <PCD_EP_ISR_Handler+0x52e>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	461a      	mov	r2, r3
 8002694:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8002698:	009b      	lsls	r3, r3, #2
 800269a:	4413      	add	r3, r2
 800269c:	881b      	ldrh	r3, [r3, #0]
 800269e:	b29a      	uxth	r2, r3
 80026a0:	f640 738f 	movw	r3, #3983	@ 0xf8f
 80026a4:	4013      	ands	r3, r2
 80026a6:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	461a      	mov	r2, r3
 80026b0:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 80026b4:	009b      	lsls	r3, r3, #2
 80026b6:	4413      	add	r3, r2
 80026b8:	f8b7 2048 	ldrh.w	r2, [r7, #72]	@ 0x48
 80026bc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80026c0:	b292      	uxth	r2, r2
 80026c2:	801a      	strh	r2, [r3, #0]
 80026c4:	f897 204d 	ldrb.w	r2, [r7, #77]	@ 0x4d
 80026c8:	4613      	mov	r3, r2
 80026ca:	009b      	lsls	r3, r3, #2
 80026cc:	4413      	add	r3, r2
 80026ce:	00db      	lsls	r3, r3, #3
 80026d0:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80026d4:	687a      	ldr	r2, [r7, #4]
 80026d6:	4413      	add	r3, r2
 80026d8:	657b      	str	r3, [r7, #84]	@ 0x54
 80026da:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80026dc:	7b1b      	ldrb	r3, [r3, #12]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d125      	bne.n	800272e <PCD_EP_ISR_Handler+0x3d6>
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80026ea:	b29b      	uxth	r3, r3
 80026ec:	461a      	mov	r2, r3
 80026ee:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80026f0:	781b      	ldrb	r3, [r3, #0]
 80026f2:	00db      	lsls	r3, r3, #3
 80026f4:	4413      	add	r3, r2
 80026f6:	3306      	adds	r3, #6
 80026f8:	005b      	lsls	r3, r3, #1
 80026fa:	687a      	ldr	r2, [r7, #4]
 80026fc:	6812      	ldr	r2, [r2, #0]
 80026fe:	4413      	add	r3, r2
 8002700:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002704:	881b      	ldrh	r3, [r3, #0]
 8002706:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800270a:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 800270e:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002712:	2b00      	cmp	r3, #0
 8002714:	f000 8092 	beq.w	800283c <PCD_EP_ISR_Handler+0x4e4>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	6818      	ldr	r0, [r3, #0]
 800271c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800271e:	6959      	ldr	r1, [r3, #20]
 8002720:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002722:	88da      	ldrh	r2, [r3, #6]
 8002724:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002728:	f003 ffdd 	bl	80066e6 <USB_ReadPMA>
 800272c:	e086      	b.n	800283c <PCD_EP_ISR_Handler+0x4e4>
 800272e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002730:	78db      	ldrb	r3, [r3, #3]
 8002732:	2b02      	cmp	r3, #2
 8002734:	d10a      	bne.n	800274c <PCD_EP_ISR_Handler+0x3f4>
 8002736:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 800273a:	461a      	mov	r2, r3
 800273c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f000 f9d9 	bl	8002af6 <HAL_PCD_EP_DB_Receive>
 8002744:	4603      	mov	r3, r0
 8002746:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 800274a:	e077      	b.n	800283c <PCD_EP_ISR_Handler+0x4e4>
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	461a      	mov	r2, r3
 8002752:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002754:	781b      	ldrb	r3, [r3, #0]
 8002756:	009b      	lsls	r3, r3, #2
 8002758:	4413      	add	r3, r2
 800275a:	881b      	ldrh	r3, [r3, #0]
 800275c:	b29b      	uxth	r3, r3
 800275e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002762:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002766:	f8a7 3052 	strh.w	r3, [r7, #82]	@ 0x52
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	461a      	mov	r2, r3
 8002770:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002772:	781b      	ldrb	r3, [r3, #0]
 8002774:	009b      	lsls	r3, r3, #2
 8002776:	441a      	add	r2, r3
 8002778:	f8b7 3052 	ldrh.w	r3, [r7, #82]	@ 0x52
 800277c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002780:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002784:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002788:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800278c:	b29b      	uxth	r3, r3
 800278e:	8013      	strh	r3, [r2, #0]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	461a      	mov	r2, r3
 8002796:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002798:	781b      	ldrb	r3, [r3, #0]
 800279a:	009b      	lsls	r3, r3, #2
 800279c:	4413      	add	r3, r2
 800279e:	881b      	ldrh	r3, [r3, #0]
 80027a0:	b29b      	uxth	r3, r3
 80027a2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d024      	beq.n	80027f4 <PCD_EP_ISR_Handler+0x49c>
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80027b2:	b29b      	uxth	r3, r3
 80027b4:	461a      	mov	r2, r3
 80027b6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80027b8:	781b      	ldrb	r3, [r3, #0]
 80027ba:	00db      	lsls	r3, r3, #3
 80027bc:	4413      	add	r3, r2
 80027be:	3302      	adds	r3, #2
 80027c0:	005b      	lsls	r3, r3, #1
 80027c2:	687a      	ldr	r2, [r7, #4]
 80027c4:	6812      	ldr	r2, [r2, #0]
 80027c6:	4413      	add	r3, r2
 80027c8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80027cc:	881b      	ldrh	r3, [r3, #0]
 80027ce:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80027d2:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 80027d6:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d02e      	beq.n	800283c <PCD_EP_ISR_Handler+0x4e4>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	6818      	ldr	r0, [r3, #0]
 80027e2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80027e4:	6959      	ldr	r1, [r3, #20]
 80027e6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80027e8:	891a      	ldrh	r2, [r3, #8]
 80027ea:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 80027ee:	f003 ff7a 	bl	80066e6 <USB_ReadPMA>
 80027f2:	e023      	b.n	800283c <PCD_EP_ISR_Handler+0x4e4>
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80027fc:	b29b      	uxth	r3, r3
 80027fe:	461a      	mov	r2, r3
 8002800:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002802:	781b      	ldrb	r3, [r3, #0]
 8002804:	00db      	lsls	r3, r3, #3
 8002806:	4413      	add	r3, r2
 8002808:	3306      	adds	r3, #6
 800280a:	005b      	lsls	r3, r3, #1
 800280c:	687a      	ldr	r2, [r7, #4]
 800280e:	6812      	ldr	r2, [r2, #0]
 8002810:	4413      	add	r3, r2
 8002812:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002816:	881b      	ldrh	r3, [r3, #0]
 8002818:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800281c:	f8a7 3050 	strh.w	r3, [r7, #80]	@ 0x50
 8002820:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002824:	2b00      	cmp	r3, #0
 8002826:	d009      	beq.n	800283c <PCD_EP_ISR_Handler+0x4e4>
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	6818      	ldr	r0, [r3, #0]
 800282c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800282e:	6959      	ldr	r1, [r3, #20]
 8002830:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002832:	895a      	ldrh	r2, [r3, #10]
 8002834:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002838:	f003 ff55 	bl	80066e6 <USB_ReadPMA>
 800283c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800283e:	69da      	ldr	r2, [r3, #28]
 8002840:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002844:	441a      	add	r2, r3
 8002846:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002848:	61da      	str	r2, [r3, #28]
 800284a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800284c:	695a      	ldr	r2, [r3, #20]
 800284e:	f8b7 3050 	ldrh.w	r3, [r7, #80]	@ 0x50
 8002852:	441a      	add	r2, r3
 8002854:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002856:	615a      	str	r2, [r3, #20]
 8002858:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800285a:	699b      	ldr	r3, [r3, #24]
 800285c:	2b00      	cmp	r3, #0
 800285e:	d005      	beq.n	800286c <PCD_EP_ISR_Handler+0x514>
 8002860:	f8b7 2050 	ldrh.w	r2, [r7, #80]	@ 0x50
 8002864:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002866:	691b      	ldr	r3, [r3, #16]
 8002868:	429a      	cmp	r2, r3
 800286a:	d206      	bcs.n	800287a <PCD_EP_ISR_Handler+0x522>
 800286c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800286e:	781b      	ldrb	r3, [r3, #0]
 8002870:	4619      	mov	r1, r3
 8002872:	6878      	ldr	r0, [r7, #4]
 8002874:	f005 fb24 	bl	8007ec0 <HAL_PCD_DataOutStageCallback>
 8002878:	e005      	b.n	8002886 <PCD_EP_ISR_Handler+0x52e>
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8002880:	4618      	mov	r0, r3
 8002882:	f002 f9fb 	bl	8004c7c <USB_EPStartXfer>
 8002886:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 800288a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800288e:	2b00      	cmp	r3, #0
 8002890:	f000 8123 	beq.w	8002ada <PCD_EP_ISR_Handler+0x782>
 8002894:	f897 204d 	ldrb.w	r2, [r7, #77]	@ 0x4d
 8002898:	4613      	mov	r3, r2
 800289a:	009b      	lsls	r3, r3, #2
 800289c:	4413      	add	r3, r2
 800289e:	00db      	lsls	r3, r3, #3
 80028a0:	3310      	adds	r3, #16
 80028a2:	687a      	ldr	r2, [r7, #4]
 80028a4:	4413      	add	r3, r2
 80028a6:	657b      	str	r3, [r7, #84]	@ 0x54
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	461a      	mov	r2, r3
 80028ae:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 80028b2:	009b      	lsls	r3, r3, #2
 80028b4:	4413      	add	r3, r2
 80028b6:	881b      	ldrh	r3, [r3, #0]
 80028b8:	b29b      	uxth	r3, r3
 80028ba:	f423 43e1 	bic.w	r3, r3, #28800	@ 0x7080
 80028be:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80028c2:	f8a7 3042 	strh.w	r3, [r7, #66]	@ 0x42
 80028c6:	687b      	ldr	r3, [r7, #4]
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	461a      	mov	r2, r3
 80028cc:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 80028d0:	009b      	lsls	r3, r3, #2
 80028d2:	441a      	add	r2, r3
 80028d4:	f8b7 3042 	ldrh.w	r3, [r7, #66]	@ 0x42
 80028d8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80028dc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80028e0:	b29b      	uxth	r3, r3
 80028e2:	8013      	strh	r3, [r2, #0]
 80028e4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80028e6:	78db      	ldrb	r3, [r3, #3]
 80028e8:	2b01      	cmp	r3, #1
 80028ea:	f040 80a2 	bne.w	8002a32 <PCD_EP_ISR_Handler+0x6da>
 80028ee:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80028f0:	2200      	movs	r2, #0
 80028f2:	619a      	str	r2, [r3, #24]
 80028f4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80028f6:	7b1b      	ldrb	r3, [r3, #12]
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	f000 8093 	beq.w	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 80028fe:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002902:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002906:	2b00      	cmp	r3, #0
 8002908:	d046      	beq.n	8002998 <PCD_EP_ISR_Handler+0x640>
 800290a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800290c:	785b      	ldrb	r3, [r3, #1]
 800290e:	2b00      	cmp	r3, #0
 8002910:	d126      	bne.n	8002960 <PCD_EP_ISR_Handler+0x608>
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	627b      	str	r3, [r7, #36]	@ 0x24
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002920:	b29b      	uxth	r3, r3
 8002922:	461a      	mov	r2, r3
 8002924:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002926:	4413      	add	r3, r2
 8002928:	627b      	str	r3, [r7, #36]	@ 0x24
 800292a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800292c:	781b      	ldrb	r3, [r3, #0]
 800292e:	011a      	lsls	r2, r3, #4
 8002930:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002932:	4413      	add	r3, r2
 8002934:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8002938:	623b      	str	r3, [r7, #32]
 800293a:	6a3b      	ldr	r3, [r7, #32]
 800293c:	881b      	ldrh	r3, [r3, #0]
 800293e:	b29b      	uxth	r3, r3
 8002940:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002944:	b29a      	uxth	r2, r3
 8002946:	6a3b      	ldr	r3, [r7, #32]
 8002948:	801a      	strh	r2, [r3, #0]
 800294a:	6a3b      	ldr	r3, [r7, #32]
 800294c:	881b      	ldrh	r3, [r3, #0]
 800294e:	b29b      	uxth	r3, r3
 8002950:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002954:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002958:	b29a      	uxth	r2, r3
 800295a:	6a3b      	ldr	r3, [r7, #32]
 800295c:	801a      	strh	r2, [r3, #0]
 800295e:	e061      	b.n	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 8002960:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002962:	785b      	ldrb	r3, [r3, #1]
 8002964:	2b01      	cmp	r3, #1
 8002966:	d15d      	bne.n	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002976:	b29b      	uxth	r3, r3
 8002978:	461a      	mov	r2, r3
 800297a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800297c:	4413      	add	r3, r2
 800297e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002980:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002982:	781b      	ldrb	r3, [r3, #0]
 8002984:	011a      	lsls	r2, r3, #4
 8002986:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002988:	4413      	add	r3, r2
 800298a:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800298e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002990:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002992:	2200      	movs	r2, #0
 8002994:	801a      	strh	r2, [r3, #0]
 8002996:	e045      	b.n	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800299e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80029a0:	785b      	ldrb	r3, [r3, #1]
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d126      	bne.n	80029f4 <PCD_EP_ISR_Handler+0x69c>
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	681b      	ldr	r3, [r3, #0]
 80029aa:	637b      	str	r3, [r7, #52]	@ 0x34
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80029b4:	b29b      	uxth	r3, r3
 80029b6:	461a      	mov	r2, r3
 80029b8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80029ba:	4413      	add	r3, r2
 80029bc:	637b      	str	r3, [r7, #52]	@ 0x34
 80029be:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80029c0:	781b      	ldrb	r3, [r3, #0]
 80029c2:	011a      	lsls	r2, r3, #4
 80029c4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80029c6:	4413      	add	r3, r2
 80029c8:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80029cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80029ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80029d0:	881b      	ldrh	r3, [r3, #0]
 80029d2:	b29b      	uxth	r3, r3
 80029d4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80029d8:	b29a      	uxth	r2, r3
 80029da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80029dc:	801a      	strh	r2, [r3, #0]
 80029de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80029e0:	881b      	ldrh	r3, [r3, #0]
 80029e2:	b29b      	uxth	r3, r3
 80029e4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80029e8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80029ec:	b29a      	uxth	r2, r3
 80029ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80029f0:	801a      	strh	r2, [r3, #0]
 80029f2:	e017      	b.n	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 80029f4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80029f6:	785b      	ldrb	r3, [r3, #1]
 80029f8:	2b01      	cmp	r3, #1
 80029fa:	d113      	bne.n	8002a24 <PCD_EP_ISR_Handler+0x6cc>
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	681b      	ldr	r3, [r3, #0]
 8002a00:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002a04:	b29b      	uxth	r3, r3
 8002a06:	461a      	mov	r2, r3
 8002a08:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002a0a:	4413      	add	r3, r2
 8002a0c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002a0e:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a10:	781b      	ldrb	r3, [r3, #0]
 8002a12:	011a      	lsls	r2, r3, #4
 8002a14:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002a16:	4413      	add	r3, r2
 8002a18:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8002a1c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002a1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002a20:	2200      	movs	r2, #0
 8002a22:	801a      	strh	r2, [r3, #0]
 8002a24:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	4619      	mov	r1, r3
 8002a2a:	6878      	ldr	r0, [r7, #4]
 8002a2c:	f005 fa63 	bl	8007ef6 <HAL_PCD_DataInStageCallback>
 8002a30:	e053      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002a32:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002a36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d146      	bne.n	8002acc <PCD_EP_ISR_Handler+0x774>
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002a46:	b29b      	uxth	r3, r3
 8002a48:	461a      	mov	r2, r3
 8002a4a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a4c:	781b      	ldrb	r3, [r3, #0]
 8002a4e:	00db      	lsls	r3, r3, #3
 8002a50:	4413      	add	r3, r2
 8002a52:	3302      	adds	r3, #2
 8002a54:	005b      	lsls	r3, r3, #1
 8002a56:	687a      	ldr	r2, [r7, #4]
 8002a58:	6812      	ldr	r2, [r2, #0]
 8002a5a:	4413      	add	r3, r2
 8002a5c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002a60:	881b      	ldrh	r3, [r3, #0]
 8002a62:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002a66:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40
 8002a6a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a6c:	699a      	ldr	r2, [r3, #24]
 8002a6e:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002a72:	429a      	cmp	r2, r3
 8002a74:	d907      	bls.n	8002a86 <PCD_EP_ISR_Handler+0x72e>
 8002a76:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a78:	699a      	ldr	r2, [r3, #24]
 8002a7a:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002a7e:	1ad2      	subs	r2, r2, r3
 8002a80:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a82:	619a      	str	r2, [r3, #24]
 8002a84:	e002      	b.n	8002a8c <PCD_EP_ISR_Handler+0x734>
 8002a86:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a88:	2200      	movs	r2, #0
 8002a8a:	619a      	str	r2, [r3, #24]
 8002a8c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a8e:	699b      	ldr	r3, [r3, #24]
 8002a90:	2b00      	cmp	r3, #0
 8002a92:	d106      	bne.n	8002aa2 <PCD_EP_ISR_Handler+0x74a>
 8002a94:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002a96:	781b      	ldrb	r3, [r3, #0]
 8002a98:	4619      	mov	r1, r3
 8002a9a:	6878      	ldr	r0, [r7, #4]
 8002a9c:	f005 fa2b 	bl	8007ef6 <HAL_PCD_DataInStageCallback>
 8002aa0:	e01b      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002aa2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002aa4:	695a      	ldr	r2, [r3, #20]
 8002aa6:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002aaa:	441a      	add	r2, r3
 8002aac:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002aae:	615a      	str	r2, [r3, #20]
 8002ab0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002ab2:	69da      	ldr	r2, [r3, #28]
 8002ab4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002ab8:	441a      	add	r2, r3
 8002aba:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002abc:	61da      	str	r2, [r3, #28]
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	f002 f8d9 	bl	8004c7c <USB_EPStartXfer>
 8002aca:	e006      	b.n	8002ada <PCD_EP_ISR_Handler+0x782>
 8002acc:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8002ad0:	461a      	mov	r2, r3
 8002ad2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8002ad4:	6878      	ldr	r0, [r7, #4]
 8002ad6:	f000 f91b 	bl	8002d10 <HAL_PCD_EP_DB_Transmit>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8002ae2:	b29b      	uxth	r3, r3
 8002ae4:	b21b      	sxth	r3, r3
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	f6ff ac3b 	blt.w	8002362 <PCD_EP_ISR_Handler+0xa>
 8002aec:	2300      	movs	r3, #0
 8002aee:	4618      	mov	r0, r3
 8002af0:	3758      	adds	r7, #88	@ 0x58
 8002af2:	46bd      	mov	sp, r7
 8002af4:	bd80      	pop	{r7, pc}

08002af6 <HAL_PCD_EP_DB_Receive>:
 8002af6:	b580      	push	{r7, lr}
 8002af8:	b088      	sub	sp, #32
 8002afa:	af00      	add	r7, sp, #0
 8002afc:	60f8      	str	r0, [r7, #12]
 8002afe:	60b9      	str	r1, [r7, #8]
 8002b00:	4613      	mov	r3, r2
 8002b02:	80fb      	strh	r3, [r7, #6]
 8002b04:	88fb      	ldrh	r3, [r7, #6]
 8002b06:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d07e      	beq.n	8002c0c <HAL_PCD_EP_DB_Receive+0x116>
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002b16:	b29b      	uxth	r3, r3
 8002b18:	461a      	mov	r2, r3
 8002b1a:	68bb      	ldr	r3, [r7, #8]
 8002b1c:	781b      	ldrb	r3, [r3, #0]
 8002b1e:	00db      	lsls	r3, r3, #3
 8002b20:	4413      	add	r3, r2
 8002b22:	3302      	adds	r3, #2
 8002b24:	005b      	lsls	r3, r3, #1
 8002b26:	68fa      	ldr	r2, [r7, #12]
 8002b28:	6812      	ldr	r2, [r2, #0]
 8002b2a:	4413      	add	r3, r2
 8002b2c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002b30:	881b      	ldrh	r3, [r3, #0]
 8002b32:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002b36:	837b      	strh	r3, [r7, #26]
 8002b38:	68bb      	ldr	r3, [r7, #8]
 8002b3a:	699a      	ldr	r2, [r3, #24]
 8002b3c:	8b7b      	ldrh	r3, [r7, #26]
 8002b3e:	429a      	cmp	r2, r3
 8002b40:	d306      	bcc.n	8002b50 <HAL_PCD_EP_DB_Receive+0x5a>
 8002b42:	68bb      	ldr	r3, [r7, #8]
 8002b44:	699a      	ldr	r2, [r3, #24]
 8002b46:	8b7b      	ldrh	r3, [r7, #26]
 8002b48:	1ad2      	subs	r2, r2, r3
 8002b4a:	68bb      	ldr	r3, [r7, #8]
 8002b4c:	619a      	str	r2, [r3, #24]
 8002b4e:	e002      	b.n	8002b56 <HAL_PCD_EP_DB_Receive+0x60>
 8002b50:	68bb      	ldr	r3, [r7, #8]
 8002b52:	2200      	movs	r2, #0
 8002b54:	619a      	str	r2, [r3, #24]
 8002b56:	68bb      	ldr	r3, [r7, #8]
 8002b58:	699b      	ldr	r3, [r3, #24]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d123      	bne.n	8002ba6 <HAL_PCD_EP_DB_Receive+0xb0>
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	461a      	mov	r2, r3
 8002b64:	68bb      	ldr	r3, [r7, #8]
 8002b66:	781b      	ldrb	r3, [r3, #0]
 8002b68:	009b      	lsls	r3, r3, #2
 8002b6a:	4413      	add	r3, r2
 8002b6c:	881b      	ldrh	r3, [r3, #0]
 8002b6e:	b29b      	uxth	r3, r3
 8002b70:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002b74:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002b78:	833b      	strh	r3, [r7, #24]
 8002b7a:	8b3b      	ldrh	r3, [r7, #24]
 8002b7c:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8002b80:	833b      	strh	r3, [r7, #24]
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	461a      	mov	r2, r3
 8002b88:	68bb      	ldr	r3, [r7, #8]
 8002b8a:	781b      	ldrb	r3, [r3, #0]
 8002b8c:	009b      	lsls	r3, r3, #2
 8002b8e:	441a      	add	r2, r3
 8002b90:	8b3b      	ldrh	r3, [r7, #24]
 8002b92:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002b96:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002b9a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002b9e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002ba2:	b29b      	uxth	r3, r3
 8002ba4:	8013      	strh	r3, [r2, #0]
 8002ba6:	88fb      	ldrh	r3, [r7, #6]
 8002ba8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d01f      	beq.n	8002bf0 <HAL_PCD_EP_DB_Receive+0xfa>
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	461a      	mov	r2, r3
 8002bb6:	68bb      	ldr	r3, [r7, #8]
 8002bb8:	781b      	ldrb	r3, [r3, #0]
 8002bba:	009b      	lsls	r3, r3, #2
 8002bbc:	4413      	add	r3, r2
 8002bbe:	881b      	ldrh	r3, [r3, #0]
 8002bc0:	b29b      	uxth	r3, r3
 8002bc2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002bc6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002bca:	82fb      	strh	r3, [r7, #22]
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	461a      	mov	r2, r3
 8002bd2:	68bb      	ldr	r3, [r7, #8]
 8002bd4:	781b      	ldrb	r3, [r3, #0]
 8002bd6:	009b      	lsls	r3, r3, #2
 8002bd8:	441a      	add	r2, r3
 8002bda:	8afb      	ldrh	r3, [r7, #22]
 8002bdc:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002be0:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002be4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002be8:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8002bec:	b29b      	uxth	r3, r3
 8002bee:	8013      	strh	r3, [r2, #0]
 8002bf0:	8b7b      	ldrh	r3, [r7, #26]
 8002bf2:	2b00      	cmp	r3, #0
 8002bf4:	f000 8087 	beq.w	8002d06 <HAL_PCD_EP_DB_Receive+0x210>
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	6818      	ldr	r0, [r3, #0]
 8002bfc:	68bb      	ldr	r3, [r7, #8]
 8002bfe:	6959      	ldr	r1, [r3, #20]
 8002c00:	68bb      	ldr	r3, [r7, #8]
 8002c02:	891a      	ldrh	r2, [r3, #8]
 8002c04:	8b7b      	ldrh	r3, [r7, #26]
 8002c06:	f003 fd6e 	bl	80066e6 <USB_ReadPMA>
 8002c0a:	e07c      	b.n	8002d06 <HAL_PCD_EP_DB_Receive+0x210>
 8002c0c:	68fb      	ldr	r3, [r7, #12]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002c14:	b29b      	uxth	r3, r3
 8002c16:	461a      	mov	r2, r3
 8002c18:	68bb      	ldr	r3, [r7, #8]
 8002c1a:	781b      	ldrb	r3, [r3, #0]
 8002c1c:	00db      	lsls	r3, r3, #3
 8002c1e:	4413      	add	r3, r2
 8002c20:	3306      	adds	r3, #6
 8002c22:	005b      	lsls	r3, r3, #1
 8002c24:	68fa      	ldr	r2, [r7, #12]
 8002c26:	6812      	ldr	r2, [r2, #0]
 8002c28:	4413      	add	r3, r2
 8002c2a:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002c2e:	881b      	ldrh	r3, [r3, #0]
 8002c30:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002c34:	837b      	strh	r3, [r7, #26]
 8002c36:	68bb      	ldr	r3, [r7, #8]
 8002c38:	699a      	ldr	r2, [r3, #24]
 8002c3a:	8b7b      	ldrh	r3, [r7, #26]
 8002c3c:	429a      	cmp	r2, r3
 8002c3e:	d306      	bcc.n	8002c4e <HAL_PCD_EP_DB_Receive+0x158>
 8002c40:	68bb      	ldr	r3, [r7, #8]
 8002c42:	699a      	ldr	r2, [r3, #24]
 8002c44:	8b7b      	ldrh	r3, [r7, #26]
 8002c46:	1ad2      	subs	r2, r2, r3
 8002c48:	68bb      	ldr	r3, [r7, #8]
 8002c4a:	619a      	str	r2, [r3, #24]
 8002c4c:	e002      	b.n	8002c54 <HAL_PCD_EP_DB_Receive+0x15e>
 8002c4e:	68bb      	ldr	r3, [r7, #8]
 8002c50:	2200      	movs	r2, #0
 8002c52:	619a      	str	r2, [r3, #24]
 8002c54:	68bb      	ldr	r3, [r7, #8]
 8002c56:	699b      	ldr	r3, [r3, #24]
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d123      	bne.n	8002ca4 <HAL_PCD_EP_DB_Receive+0x1ae>
 8002c5c:	68fb      	ldr	r3, [r7, #12]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	461a      	mov	r2, r3
 8002c62:	68bb      	ldr	r3, [r7, #8]
 8002c64:	781b      	ldrb	r3, [r3, #0]
 8002c66:	009b      	lsls	r3, r3, #2
 8002c68:	4413      	add	r3, r2
 8002c6a:	881b      	ldrh	r3, [r3, #0]
 8002c6c:	b29b      	uxth	r3, r3
 8002c6e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002c72:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002c76:	83fb      	strh	r3, [r7, #30]
 8002c78:	8bfb      	ldrh	r3, [r7, #30]
 8002c7a:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8002c7e:	83fb      	strh	r3, [r7, #30]
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	461a      	mov	r2, r3
 8002c86:	68bb      	ldr	r3, [r7, #8]
 8002c88:	781b      	ldrb	r3, [r3, #0]
 8002c8a:	009b      	lsls	r3, r3, #2
 8002c8c:	441a      	add	r2, r3
 8002c8e:	8bfb      	ldrh	r3, [r7, #30]
 8002c90:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002c94:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002c98:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002c9c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002ca0:	b29b      	uxth	r3, r3
 8002ca2:	8013      	strh	r3, [r2, #0]
 8002ca4:	88fb      	ldrh	r3, [r7, #6]
 8002ca6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d11f      	bne.n	8002cee <HAL_PCD_EP_DB_Receive+0x1f8>
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	461a      	mov	r2, r3
 8002cb4:	68bb      	ldr	r3, [r7, #8]
 8002cb6:	781b      	ldrb	r3, [r3, #0]
 8002cb8:	009b      	lsls	r3, r3, #2
 8002cba:	4413      	add	r3, r2
 8002cbc:	881b      	ldrh	r3, [r3, #0]
 8002cbe:	b29b      	uxth	r3, r3
 8002cc0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002cc4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002cc8:	83bb      	strh	r3, [r7, #28]
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	461a      	mov	r2, r3
 8002cd0:	68bb      	ldr	r3, [r7, #8]
 8002cd2:	781b      	ldrb	r3, [r3, #0]
 8002cd4:	009b      	lsls	r3, r3, #2
 8002cd6:	441a      	add	r2, r3
 8002cd8:	8bbb      	ldrh	r3, [r7, #28]
 8002cda:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002cde:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002ce2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002ce6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8002cea:	b29b      	uxth	r3, r3
 8002cec:	8013      	strh	r3, [r2, #0]
 8002cee:	8b7b      	ldrh	r3, [r7, #26]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d008      	beq.n	8002d06 <HAL_PCD_EP_DB_Receive+0x210>
 8002cf4:	68fb      	ldr	r3, [r7, #12]
 8002cf6:	6818      	ldr	r0, [r3, #0]
 8002cf8:	68bb      	ldr	r3, [r7, #8]
 8002cfa:	6959      	ldr	r1, [r3, #20]
 8002cfc:	68bb      	ldr	r3, [r7, #8]
 8002cfe:	895a      	ldrh	r2, [r3, #10]
 8002d00:	8b7b      	ldrh	r3, [r7, #26]
 8002d02:	f003 fcf0 	bl	80066e6 <USB_ReadPMA>
 8002d06:	8b7b      	ldrh	r3, [r7, #26]
 8002d08:	4618      	mov	r0, r3
 8002d0a:	3720      	adds	r7, #32
 8002d0c:	46bd      	mov	sp, r7
 8002d0e:	bd80      	pop	{r7, pc}

08002d10 <HAL_PCD_EP_DB_Transmit>:
 8002d10:	b580      	push	{r7, lr}
 8002d12:	b0a4      	sub	sp, #144	@ 0x90
 8002d14:	af00      	add	r7, sp, #0
 8002d16:	60f8      	str	r0, [r7, #12]
 8002d18:	60b9      	str	r1, [r7, #8]
 8002d1a:	4613      	mov	r3, r2
 8002d1c:	80fb      	strh	r3, [r7, #6]
 8002d1e:	88fb      	ldrh	r3, [r7, #6]
 8002d20:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	f000 81dd 	beq.w	80030e4 <HAL_PCD_EP_DB_Transmit+0x3d4>
 8002d2a:	68fb      	ldr	r3, [r7, #12]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002d32:	b29b      	uxth	r3, r3
 8002d34:	461a      	mov	r2, r3
 8002d36:	68bb      	ldr	r3, [r7, #8]
 8002d38:	781b      	ldrb	r3, [r3, #0]
 8002d3a:	00db      	lsls	r3, r3, #3
 8002d3c:	4413      	add	r3, r2
 8002d3e:	3302      	adds	r3, #2
 8002d40:	005b      	lsls	r3, r3, #1
 8002d42:	68fa      	ldr	r2, [r7, #12]
 8002d44:	6812      	ldr	r2, [r2, #0]
 8002d46:	4413      	add	r3, r2
 8002d48:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8002d4c:	881b      	ldrh	r3, [r3, #0]
 8002d4e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002d52:	f8a7 3086 	strh.w	r3, [r7, #134]	@ 0x86
 8002d56:	68bb      	ldr	r3, [r7, #8]
 8002d58:	699a      	ldr	r2, [r3, #24]
 8002d5a:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8002d5e:	429a      	cmp	r2, r3
 8002d60:	d907      	bls.n	8002d72 <HAL_PCD_EP_DB_Transmit+0x62>
 8002d62:	68bb      	ldr	r3, [r7, #8]
 8002d64:	699a      	ldr	r2, [r3, #24]
 8002d66:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8002d6a:	1ad2      	subs	r2, r2, r3
 8002d6c:	68bb      	ldr	r3, [r7, #8]
 8002d6e:	619a      	str	r2, [r3, #24]
 8002d70:	e002      	b.n	8002d78 <HAL_PCD_EP_DB_Transmit+0x68>
 8002d72:	68bb      	ldr	r3, [r7, #8]
 8002d74:	2200      	movs	r2, #0
 8002d76:	619a      	str	r2, [r3, #24]
 8002d78:	68bb      	ldr	r3, [r7, #8]
 8002d7a:	699b      	ldr	r3, [r3, #24]
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	f040 80b9 	bne.w	8002ef4 <HAL_PCD_EP_DB_Transmit+0x1e4>
 8002d82:	68bb      	ldr	r3, [r7, #8]
 8002d84:	785b      	ldrb	r3, [r3, #1]
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	d126      	bne.n	8002dd8 <HAL_PCD_EP_DB_Transmit+0xc8>
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002d90:	68fb      	ldr	r3, [r7, #12]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002d98:	b29b      	uxth	r3, r3
 8002d9a:	461a      	mov	r2, r3
 8002d9c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002d9e:	4413      	add	r3, r2
 8002da0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002da2:	68bb      	ldr	r3, [r7, #8]
 8002da4:	781b      	ldrb	r3, [r3, #0]
 8002da6:	011a      	lsls	r2, r3, #4
 8002da8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002daa:	4413      	add	r3, r2
 8002dac:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8002db0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002db2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002db4:	881b      	ldrh	r3, [r3, #0]
 8002db6:	b29b      	uxth	r3, r3
 8002db8:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002dbc:	b29a      	uxth	r2, r3
 8002dbe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002dc0:	801a      	strh	r2, [r3, #0]
 8002dc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002dc4:	881b      	ldrh	r3, [r3, #0]
 8002dc6:	b29b      	uxth	r3, r3
 8002dc8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002dcc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002dd0:	b29a      	uxth	r2, r3
 8002dd2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002dd4:	801a      	strh	r2, [r3, #0]
 8002dd6:	e01a      	b.n	8002e0e <HAL_PCD_EP_DB_Transmit+0xfe>
 8002dd8:	68bb      	ldr	r3, [r7, #8]
 8002dda:	785b      	ldrb	r3, [r3, #1]
 8002ddc:	2b01      	cmp	r3, #1
 8002dde:	d116      	bne.n	8002e0e <HAL_PCD_EP_DB_Transmit+0xfe>
 8002de0:	68fb      	ldr	r3, [r7, #12]
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	637b      	str	r3, [r7, #52]	@ 0x34
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002dee:	b29b      	uxth	r3, r3
 8002df0:	461a      	mov	r2, r3
 8002df2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002df4:	4413      	add	r3, r2
 8002df6:	637b      	str	r3, [r7, #52]	@ 0x34
 8002df8:	68bb      	ldr	r3, [r7, #8]
 8002dfa:	781b      	ldrb	r3, [r3, #0]
 8002dfc:	011a      	lsls	r2, r3, #4
 8002dfe:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002e00:	4413      	add	r3, r2
 8002e02:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8002e06:	633b      	str	r3, [r7, #48]	@ 0x30
 8002e08:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002e0a:	2200      	movs	r2, #0
 8002e0c:	801a      	strh	r2, [r3, #0]
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e14:	68bb      	ldr	r3, [r7, #8]
 8002e16:	785b      	ldrb	r3, [r3, #1]
 8002e18:	2b00      	cmp	r3, #0
 8002e1a:	d126      	bne.n	8002e6a <HAL_PCD_EP_DB_Transmit+0x15a>
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	61fb      	str	r3, [r7, #28]
 8002e22:	68fb      	ldr	r3, [r7, #12]
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002e2a:	b29b      	uxth	r3, r3
 8002e2c:	461a      	mov	r2, r3
 8002e2e:	69fb      	ldr	r3, [r7, #28]
 8002e30:	4413      	add	r3, r2
 8002e32:	61fb      	str	r3, [r7, #28]
 8002e34:	68bb      	ldr	r3, [r7, #8]
 8002e36:	781b      	ldrb	r3, [r3, #0]
 8002e38:	011a      	lsls	r2, r3, #4
 8002e3a:	69fb      	ldr	r3, [r7, #28]
 8002e3c:	4413      	add	r3, r2
 8002e3e:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8002e42:	61bb      	str	r3, [r7, #24]
 8002e44:	69bb      	ldr	r3, [r7, #24]
 8002e46:	881b      	ldrh	r3, [r3, #0]
 8002e48:	b29b      	uxth	r3, r3
 8002e4a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002e4e:	b29a      	uxth	r2, r3
 8002e50:	69bb      	ldr	r3, [r7, #24]
 8002e52:	801a      	strh	r2, [r3, #0]
 8002e54:	69bb      	ldr	r3, [r7, #24]
 8002e56:	881b      	ldrh	r3, [r3, #0]
 8002e58:	b29b      	uxth	r3, r3
 8002e5a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002e5e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002e62:	b29a      	uxth	r2, r3
 8002e64:	69bb      	ldr	r3, [r7, #24]
 8002e66:	801a      	strh	r2, [r3, #0]
 8002e68:	e017      	b.n	8002e9a <HAL_PCD_EP_DB_Transmit+0x18a>
 8002e6a:	68bb      	ldr	r3, [r7, #8]
 8002e6c:	785b      	ldrb	r3, [r3, #1]
 8002e6e:	2b01      	cmp	r3, #1
 8002e70:	d113      	bne.n	8002e9a <HAL_PCD_EP_DB_Transmit+0x18a>
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002e7a:	b29b      	uxth	r3, r3
 8002e7c:	461a      	mov	r2, r3
 8002e7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e80:	4413      	add	r3, r2
 8002e82:	627b      	str	r3, [r7, #36]	@ 0x24
 8002e84:	68bb      	ldr	r3, [r7, #8]
 8002e86:	781b      	ldrb	r3, [r3, #0]
 8002e88:	011a      	lsls	r2, r3, #4
 8002e8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002e8c:	4413      	add	r3, r2
 8002e8e:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8002e92:	623b      	str	r3, [r7, #32]
 8002e94:	6a3b      	ldr	r3, [r7, #32]
 8002e96:	2200      	movs	r2, #0
 8002e98:	801a      	strh	r2, [r3, #0]
 8002e9a:	68bb      	ldr	r3, [r7, #8]
 8002e9c:	781b      	ldrb	r3, [r3, #0]
 8002e9e:	4619      	mov	r1, r3
 8002ea0:	68f8      	ldr	r0, [r7, #12]
 8002ea2:	f005 f828 	bl	8007ef6 <HAL_PCD_DataInStageCallback>
 8002ea6:	88fb      	ldrh	r3, [r7, #6]
 8002ea8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	f000 82fc 	beq.w	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	461a      	mov	r2, r3
 8002eb8:	68bb      	ldr	r3, [r7, #8]
 8002eba:	781b      	ldrb	r3, [r3, #0]
 8002ebc:	009b      	lsls	r3, r3, #2
 8002ebe:	4413      	add	r3, r2
 8002ec0:	881b      	ldrh	r3, [r3, #0]
 8002ec2:	b29b      	uxth	r3, r3
 8002ec4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002ec8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002ecc:	82fb      	strh	r3, [r7, #22]
 8002ece:	68fb      	ldr	r3, [r7, #12]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	461a      	mov	r2, r3
 8002ed4:	68bb      	ldr	r3, [r7, #8]
 8002ed6:	781b      	ldrb	r3, [r3, #0]
 8002ed8:	009b      	lsls	r3, r3, #2
 8002eda:	441a      	add	r2, r3
 8002edc:	8afb      	ldrh	r3, [r7, #22]
 8002ede:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002ee2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002ee6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002eea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002eee:	b29b      	uxth	r3, r3
 8002ef0:	8013      	strh	r3, [r2, #0]
 8002ef2:	e2da      	b.n	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 8002ef4:	88fb      	ldrh	r3, [r7, #6]
 8002ef6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002efa:	2b00      	cmp	r3, #0
 8002efc:	d021      	beq.n	8002f42 <HAL_PCD_EP_DB_Transmit+0x232>
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	461a      	mov	r2, r3
 8002f04:	68bb      	ldr	r3, [r7, #8]
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	009b      	lsls	r3, r3, #2
 8002f0a:	4413      	add	r3, r2
 8002f0c:	881b      	ldrh	r3, [r3, #0]
 8002f0e:	b29b      	uxth	r3, r3
 8002f10:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8002f14:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002f18:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	461a      	mov	r2, r3
 8002f22:	68bb      	ldr	r3, [r7, #8]
 8002f24:	781b      	ldrb	r3, [r3, #0]
 8002f26:	009b      	lsls	r3, r3, #2
 8002f28:	441a      	add	r2, r3
 8002f2a:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 8002f2e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8002f32:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8002f36:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8002f3a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002f3e:	b29b      	uxth	r3, r3
 8002f40:	8013      	strh	r3, [r2, #0]
 8002f42:	68bb      	ldr	r3, [r7, #8]
 8002f44:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8002f48:	2b01      	cmp	r3, #1
 8002f4a:	f040 82ae 	bne.w	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 8002f4e:	68bb      	ldr	r3, [r7, #8]
 8002f50:	695a      	ldr	r2, [r3, #20]
 8002f52:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8002f56:	441a      	add	r2, r3
 8002f58:	68bb      	ldr	r3, [r7, #8]
 8002f5a:	615a      	str	r2, [r3, #20]
 8002f5c:	68bb      	ldr	r3, [r7, #8]
 8002f5e:	69da      	ldr	r2, [r3, #28]
 8002f60:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8002f64:	441a      	add	r2, r3
 8002f66:	68bb      	ldr	r3, [r7, #8]
 8002f68:	61da      	str	r2, [r3, #28]
 8002f6a:	68bb      	ldr	r3, [r7, #8]
 8002f6c:	6a1a      	ldr	r2, [r3, #32]
 8002f6e:	68bb      	ldr	r3, [r7, #8]
 8002f70:	691b      	ldr	r3, [r3, #16]
 8002f72:	429a      	cmp	r2, r3
 8002f74:	d30b      	bcc.n	8002f8e <HAL_PCD_EP_DB_Transmit+0x27e>
 8002f76:	68bb      	ldr	r3, [r7, #8]
 8002f78:	691b      	ldr	r3, [r3, #16]
 8002f7a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002f7e:	68bb      	ldr	r3, [r7, #8]
 8002f80:	6a1a      	ldr	r2, [r3, #32]
 8002f82:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002f86:	1ad2      	subs	r2, r2, r3
 8002f88:	68bb      	ldr	r3, [r7, #8]
 8002f8a:	621a      	str	r2, [r3, #32]
 8002f8c:	e017      	b.n	8002fbe <HAL_PCD_EP_DB_Transmit+0x2ae>
 8002f8e:	68bb      	ldr	r3, [r7, #8]
 8002f90:	6a1b      	ldr	r3, [r3, #32]
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d108      	bne.n	8002fa8 <HAL_PCD_EP_DB_Transmit+0x298>
 8002f96:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8002f9a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002f9e:	68bb      	ldr	r3, [r7, #8]
 8002fa0:	2200      	movs	r2, #0
 8002fa2:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002fa6:	e00a      	b.n	8002fbe <HAL_PCD_EP_DB_Transmit+0x2ae>
 8002fa8:	68bb      	ldr	r3, [r7, #8]
 8002faa:	2200      	movs	r2, #0
 8002fac:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8002fb0:	68bb      	ldr	r3, [r7, #8]
 8002fb2:	6a1b      	ldr	r3, [r3, #32]
 8002fb4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002fb8:	68bb      	ldr	r3, [r7, #8]
 8002fba:	2200      	movs	r2, #0
 8002fbc:	621a      	str	r2, [r3, #32]
 8002fbe:	68bb      	ldr	r3, [r7, #8]
 8002fc0:	785b      	ldrb	r3, [r3, #1]
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d165      	bne.n	8003092 <HAL_PCD_EP_DB_Transmit+0x382>
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8002fd4:	b29b      	uxth	r3, r3
 8002fd6:	461a      	mov	r2, r3
 8002fd8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002fda:	4413      	add	r3, r2
 8002fdc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002fde:	68bb      	ldr	r3, [r7, #8]
 8002fe0:	781b      	ldrb	r3, [r3, #0]
 8002fe2:	011a      	lsls	r2, r3, #4
 8002fe4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002fe6:	4413      	add	r3, r2
 8002fe8:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8002fec:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002fee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002ff0:	881b      	ldrh	r3, [r3, #0]
 8002ff2:	b29b      	uxth	r3, r3
 8002ff4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002ff8:	b29a      	uxth	r2, r3
 8002ffa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002ffc:	801a      	strh	r2, [r3, #0]
 8002ffe:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003002:	2b3e      	cmp	r3, #62	@ 0x3e
 8003004:	d91d      	bls.n	8003042 <HAL_PCD_EP_DB_Transmit+0x332>
 8003006:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800300a:	095b      	lsrs	r3, r3, #5
 800300c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800300e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003012:	f003 031f 	and.w	r3, r3, #31
 8003016:	2b00      	cmp	r3, #0
 8003018:	d102      	bne.n	8003020 <HAL_PCD_EP_DB_Transmit+0x310>
 800301a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800301c:	3b01      	subs	r3, #1
 800301e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003020:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003022:	881b      	ldrh	r3, [r3, #0]
 8003024:	b29a      	uxth	r2, r3
 8003026:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003028:	b29b      	uxth	r3, r3
 800302a:	029b      	lsls	r3, r3, #10
 800302c:	b29b      	uxth	r3, r3
 800302e:	4313      	orrs	r3, r2
 8003030:	b29b      	uxth	r3, r3
 8003032:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003036:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800303a:	b29a      	uxth	r2, r3
 800303c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800303e:	801a      	strh	r2, [r3, #0]
 8003040:	e044      	b.n	80030cc <HAL_PCD_EP_DB_Transmit+0x3bc>
 8003042:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003046:	2b00      	cmp	r3, #0
 8003048:	d10a      	bne.n	8003060 <HAL_PCD_EP_DB_Transmit+0x350>
 800304a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800304c:	881b      	ldrh	r3, [r3, #0]
 800304e:	b29b      	uxth	r3, r3
 8003050:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003054:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003058:	b29a      	uxth	r2, r3
 800305a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800305c:	801a      	strh	r2, [r3, #0]
 800305e:	e035      	b.n	80030cc <HAL_PCD_EP_DB_Transmit+0x3bc>
 8003060:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003064:	085b      	lsrs	r3, r3, #1
 8003066:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003068:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800306c:	f003 0301 	and.w	r3, r3, #1
 8003070:	2b00      	cmp	r3, #0
 8003072:	d002      	beq.n	800307a <HAL_PCD_EP_DB_Transmit+0x36a>
 8003074:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003076:	3301      	adds	r3, #1
 8003078:	64bb      	str	r3, [r7, #72]	@ 0x48
 800307a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800307c:	881b      	ldrh	r3, [r3, #0]
 800307e:	b29a      	uxth	r2, r3
 8003080:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003082:	b29b      	uxth	r3, r3
 8003084:	029b      	lsls	r3, r3, #10
 8003086:	b29b      	uxth	r3, r3
 8003088:	4313      	orrs	r3, r2
 800308a:	b29a      	uxth	r2, r3
 800308c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800308e:	801a      	strh	r2, [r3, #0]
 8003090:	e01c      	b.n	80030cc <HAL_PCD_EP_DB_Transmit+0x3bc>
 8003092:	68bb      	ldr	r3, [r7, #8]
 8003094:	785b      	ldrb	r3, [r3, #1]
 8003096:	2b01      	cmp	r3, #1
 8003098:	d118      	bne.n	80030cc <HAL_PCD_EP_DB_Transmit+0x3bc>
 800309a:	68fb      	ldr	r3, [r7, #12]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	647b      	str	r3, [r7, #68]	@ 0x44
 80030a0:	68fb      	ldr	r3, [r7, #12]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80030a8:	b29b      	uxth	r3, r3
 80030aa:	461a      	mov	r2, r3
 80030ac:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80030ae:	4413      	add	r3, r2
 80030b0:	647b      	str	r3, [r7, #68]	@ 0x44
 80030b2:	68bb      	ldr	r3, [r7, #8]
 80030b4:	781b      	ldrb	r3, [r3, #0]
 80030b6:	011a      	lsls	r2, r3, #4
 80030b8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80030ba:	4413      	add	r3, r2
 80030bc:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 80030c0:	643b      	str	r3, [r7, #64]	@ 0x40
 80030c2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80030c6:	b29a      	uxth	r2, r3
 80030c8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80030ca:	801a      	strh	r2, [r3, #0]
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	6818      	ldr	r0, [r3, #0]
 80030d0:	68bb      	ldr	r3, [r7, #8]
 80030d2:	6959      	ldr	r1, [r3, #20]
 80030d4:	68bb      	ldr	r3, [r7, #8]
 80030d6:	891a      	ldrh	r2, [r3, #8]
 80030d8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80030dc:	b29b      	uxth	r3, r3
 80030de:	f003 fabc 	bl	800665a <USB_WritePMA>
 80030e2:	e1e2      	b.n	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80030ec:	b29b      	uxth	r3, r3
 80030ee:	461a      	mov	r2, r3
 80030f0:	68bb      	ldr	r3, [r7, #8]
 80030f2:	781b      	ldrb	r3, [r3, #0]
 80030f4:	00db      	lsls	r3, r3, #3
 80030f6:	4413      	add	r3, r2
 80030f8:	3306      	adds	r3, #6
 80030fa:	005b      	lsls	r3, r3, #1
 80030fc:	68fa      	ldr	r2, [r7, #12]
 80030fe:	6812      	ldr	r2, [r2, #0]
 8003100:	4413      	add	r3, r2
 8003102:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8003106:	881b      	ldrh	r3, [r3, #0]
 8003108:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800310c:	f8a7 3086 	strh.w	r3, [r7, #134]	@ 0x86
 8003110:	68bb      	ldr	r3, [r7, #8]
 8003112:	699a      	ldr	r2, [r3, #24]
 8003114:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8003118:	429a      	cmp	r2, r3
 800311a:	d307      	bcc.n	800312c <HAL_PCD_EP_DB_Transmit+0x41c>
 800311c:	68bb      	ldr	r3, [r7, #8]
 800311e:	699a      	ldr	r2, [r3, #24]
 8003120:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8003124:	1ad2      	subs	r2, r2, r3
 8003126:	68bb      	ldr	r3, [r7, #8]
 8003128:	619a      	str	r2, [r3, #24]
 800312a:	e002      	b.n	8003132 <HAL_PCD_EP_DB_Transmit+0x422>
 800312c:	68bb      	ldr	r3, [r7, #8]
 800312e:	2200      	movs	r2, #0
 8003130:	619a      	str	r2, [r3, #24]
 8003132:	68bb      	ldr	r3, [r7, #8]
 8003134:	699b      	ldr	r3, [r3, #24]
 8003136:	2b00      	cmp	r3, #0
 8003138:	f040 80c0 	bne.w	80032bc <HAL_PCD_EP_DB_Transmit+0x5ac>
 800313c:	68bb      	ldr	r3, [r7, #8]
 800313e:	785b      	ldrb	r3, [r3, #1]
 8003140:	2b00      	cmp	r3, #0
 8003142:	d126      	bne.n	8003192 <HAL_PCD_EP_DB_Transmit+0x482>
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8003152:	b29b      	uxth	r3, r3
 8003154:	461a      	mov	r2, r3
 8003156:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8003158:	4413      	add	r3, r2
 800315a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800315c:	68bb      	ldr	r3, [r7, #8]
 800315e:	781b      	ldrb	r3, [r3, #0]
 8003160:	011a      	lsls	r2, r3, #4
 8003162:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8003164:	4413      	add	r3, r2
 8003166:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800316a:	67bb      	str	r3, [r7, #120]	@ 0x78
 800316c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800316e:	881b      	ldrh	r3, [r3, #0]
 8003170:	b29b      	uxth	r3, r3
 8003172:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003176:	b29a      	uxth	r2, r3
 8003178:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800317a:	801a      	strh	r2, [r3, #0]
 800317c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800317e:	881b      	ldrh	r3, [r3, #0]
 8003180:	b29b      	uxth	r3, r3
 8003182:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003186:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800318a:	b29a      	uxth	r2, r3
 800318c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800318e:	801a      	strh	r2, [r3, #0]
 8003190:	e01a      	b.n	80031c8 <HAL_PCD_EP_DB_Transmit+0x4b8>
 8003192:	68bb      	ldr	r3, [r7, #8]
 8003194:	785b      	ldrb	r3, [r3, #1]
 8003196:	2b01      	cmp	r3, #1
 8003198:	d116      	bne.n	80031c8 <HAL_PCD_EP_DB_Transmit+0x4b8>
 800319a:	68fb      	ldr	r3, [r7, #12]
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	667b      	str	r3, [r7, #100]	@ 0x64
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	681b      	ldr	r3, [r3, #0]
 80031a4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80031a8:	b29b      	uxth	r3, r3
 80031aa:	461a      	mov	r2, r3
 80031ac:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80031ae:	4413      	add	r3, r2
 80031b0:	667b      	str	r3, [r7, #100]	@ 0x64
 80031b2:	68bb      	ldr	r3, [r7, #8]
 80031b4:	781b      	ldrb	r3, [r3, #0]
 80031b6:	011a      	lsls	r2, r3, #4
 80031b8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80031ba:	4413      	add	r3, r2
 80031bc:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 80031c0:	663b      	str	r3, [r7, #96]	@ 0x60
 80031c2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80031c4:	2200      	movs	r2, #0
 80031c6:	801a      	strh	r2, [r3, #0]
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	677b      	str	r3, [r7, #116]	@ 0x74
 80031ce:	68bb      	ldr	r3, [r7, #8]
 80031d0:	785b      	ldrb	r3, [r3, #1]
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d12b      	bne.n	800322e <HAL_PCD_EP_DB_Transmit+0x51e>
 80031d6:	68fb      	ldr	r3, [r7, #12]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80031e4:	b29b      	uxth	r3, r3
 80031e6:	461a      	mov	r2, r3
 80031e8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80031ea:	4413      	add	r3, r2
 80031ec:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80031ee:	68bb      	ldr	r3, [r7, #8]
 80031f0:	781b      	ldrb	r3, [r3, #0]
 80031f2:	011a      	lsls	r2, r3, #4
 80031f4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80031f6:	4413      	add	r3, r2
 80031f8:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80031fc:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003200:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003204:	881b      	ldrh	r3, [r3, #0]
 8003206:	b29b      	uxth	r3, r3
 8003208:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800320c:	b29a      	uxth	r2, r3
 800320e:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003212:	801a      	strh	r2, [r3, #0]
 8003214:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003218:	881b      	ldrh	r3, [r3, #0]
 800321a:	b29b      	uxth	r3, r3
 800321c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003220:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003224:	b29a      	uxth	r2, r3
 8003226:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800322a:	801a      	strh	r2, [r3, #0]
 800322c:	e017      	b.n	800325e <HAL_PCD_EP_DB_Transmit+0x54e>
 800322e:	68bb      	ldr	r3, [r7, #8]
 8003230:	785b      	ldrb	r3, [r3, #1]
 8003232:	2b01      	cmp	r3, #1
 8003234:	d113      	bne.n	800325e <HAL_PCD_EP_DB_Transmit+0x54e>
 8003236:	68fb      	ldr	r3, [r7, #12]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800323e:	b29b      	uxth	r3, r3
 8003240:	461a      	mov	r2, r3
 8003242:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003244:	4413      	add	r3, r2
 8003246:	677b      	str	r3, [r7, #116]	@ 0x74
 8003248:	68bb      	ldr	r3, [r7, #8]
 800324a:	781b      	ldrb	r3, [r3, #0]
 800324c:	011a      	lsls	r2, r3, #4
 800324e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8003250:	4413      	add	r3, r2
 8003252:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8003256:	673b      	str	r3, [r7, #112]	@ 0x70
 8003258:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800325a:	2200      	movs	r2, #0
 800325c:	801a      	strh	r2, [r3, #0]
 800325e:	68bb      	ldr	r3, [r7, #8]
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	4619      	mov	r1, r3
 8003264:	68f8      	ldr	r0, [r7, #12]
 8003266:	f004 fe46 	bl	8007ef6 <HAL_PCD_DataInStageCallback>
 800326a:	88fb      	ldrh	r3, [r7, #6]
 800326c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003270:	2b00      	cmp	r3, #0
 8003272:	f040 811a 	bne.w	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 8003276:	68fb      	ldr	r3, [r7, #12]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	461a      	mov	r2, r3
 800327c:	68bb      	ldr	r3, [r7, #8]
 800327e:	781b      	ldrb	r3, [r3, #0]
 8003280:	009b      	lsls	r3, r3, #2
 8003282:	4413      	add	r3, r2
 8003284:	881b      	ldrh	r3, [r3, #0]
 8003286:	b29b      	uxth	r3, r3
 8003288:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800328c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8003290:	f8a7 3088 	strh.w	r3, [r7, #136]	@ 0x88
 8003294:	68fb      	ldr	r3, [r7, #12]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	461a      	mov	r2, r3
 800329a:	68bb      	ldr	r3, [r7, #8]
 800329c:	781b      	ldrb	r3, [r3, #0]
 800329e:	009b      	lsls	r3, r3, #2
 80032a0:	441a      	add	r2, r3
 80032a2:	f8b7 3088 	ldrh.w	r3, [r7, #136]	@ 0x88
 80032a6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80032aa:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80032ae:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80032b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80032b6:	b29b      	uxth	r3, r3
 80032b8:	8013      	strh	r3, [r2, #0]
 80032ba:	e0f6      	b.n	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 80032bc:	88fb      	ldrh	r3, [r7, #6]
 80032be:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d121      	bne.n	800330a <HAL_PCD_EP_DB_Transmit+0x5fa>
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	461a      	mov	r2, r3
 80032cc:	68bb      	ldr	r3, [r7, #8]
 80032ce:	781b      	ldrb	r3, [r3, #0]
 80032d0:	009b      	lsls	r3, r3, #2
 80032d2:	4413      	add	r3, r2
 80032d4:	881b      	ldrh	r3, [r3, #0]
 80032d6:	b29b      	uxth	r3, r3
 80032d8:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80032dc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80032e0:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	461a      	mov	r2, r3
 80032ea:	68bb      	ldr	r3, [r7, #8]
 80032ec:	781b      	ldrb	r3, [r3, #0]
 80032ee:	009b      	lsls	r3, r3, #2
 80032f0:	441a      	add	r2, r3
 80032f2:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 80032f6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80032fa:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80032fe:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8003302:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003306:	b29b      	uxth	r3, r3
 8003308:	8013      	strh	r3, [r2, #0]
 800330a:	68bb      	ldr	r3, [r7, #8]
 800330c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8003310:	2b01      	cmp	r3, #1
 8003312:	f040 80ca 	bne.w	80034aa <HAL_PCD_EP_DB_Transmit+0x79a>
 8003316:	68bb      	ldr	r3, [r7, #8]
 8003318:	695a      	ldr	r2, [r3, #20]
 800331a:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 800331e:	441a      	add	r2, r3
 8003320:	68bb      	ldr	r3, [r7, #8]
 8003322:	615a      	str	r2, [r3, #20]
 8003324:	68bb      	ldr	r3, [r7, #8]
 8003326:	69da      	ldr	r2, [r3, #28]
 8003328:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 800332c:	441a      	add	r2, r3
 800332e:	68bb      	ldr	r3, [r7, #8]
 8003330:	61da      	str	r2, [r3, #28]
 8003332:	68bb      	ldr	r3, [r7, #8]
 8003334:	6a1a      	ldr	r2, [r3, #32]
 8003336:	68bb      	ldr	r3, [r7, #8]
 8003338:	691b      	ldr	r3, [r3, #16]
 800333a:	429a      	cmp	r2, r3
 800333c:	d30b      	bcc.n	8003356 <HAL_PCD_EP_DB_Transmit+0x646>
 800333e:	68bb      	ldr	r3, [r7, #8]
 8003340:	691b      	ldr	r3, [r3, #16]
 8003342:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003346:	68bb      	ldr	r3, [r7, #8]
 8003348:	6a1a      	ldr	r2, [r3, #32]
 800334a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800334e:	1ad2      	subs	r2, r2, r3
 8003350:	68bb      	ldr	r3, [r7, #8]
 8003352:	621a      	str	r2, [r3, #32]
 8003354:	e017      	b.n	8003386 <HAL_PCD_EP_DB_Transmit+0x676>
 8003356:	68bb      	ldr	r3, [r7, #8]
 8003358:	6a1b      	ldr	r3, [r3, #32]
 800335a:	2b00      	cmp	r3, #0
 800335c:	d108      	bne.n	8003370 <HAL_PCD_EP_DB_Transmit+0x660>
 800335e:	f8b7 3086 	ldrh.w	r3, [r7, #134]	@ 0x86
 8003362:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003366:	68bb      	ldr	r3, [r7, #8]
 8003368:	2200      	movs	r2, #0
 800336a:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 800336e:	e00a      	b.n	8003386 <HAL_PCD_EP_DB_Transmit+0x676>
 8003370:	68bb      	ldr	r3, [r7, #8]
 8003372:	6a1b      	ldr	r3, [r3, #32]
 8003374:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003378:	68bb      	ldr	r3, [r7, #8]
 800337a:	2200      	movs	r2, #0
 800337c:	621a      	str	r2, [r3, #32]
 800337e:	68bb      	ldr	r3, [r7, #8]
 8003380:	2200      	movs	r2, #0
 8003382:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	657b      	str	r3, [r7, #84]	@ 0x54
 800338c:	68bb      	ldr	r3, [r7, #8]
 800338e:	785b      	ldrb	r3, [r3, #1]
 8003390:	2b00      	cmp	r3, #0
 8003392:	d165      	bne.n	8003460 <HAL_PCD_EP_DB_Transmit+0x750>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80033a2:	b29b      	uxth	r3, r3
 80033a4:	461a      	mov	r2, r3
 80033a6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80033a8:	4413      	add	r3, r2
 80033aa:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80033ac:	68bb      	ldr	r3, [r7, #8]
 80033ae:	781b      	ldrb	r3, [r3, #0]
 80033b0:	011a      	lsls	r2, r3, #4
 80033b2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80033b4:	4413      	add	r3, r2
 80033b6:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80033ba:	65bb      	str	r3, [r7, #88]	@ 0x58
 80033bc:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80033be:	881b      	ldrh	r3, [r3, #0]
 80033c0:	b29b      	uxth	r3, r3
 80033c2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80033c6:	b29a      	uxth	r2, r3
 80033c8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80033ca:	801a      	strh	r2, [r3, #0]
 80033cc:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80033d0:	2b3e      	cmp	r3, #62	@ 0x3e
 80033d2:	d91d      	bls.n	8003410 <HAL_PCD_EP_DB_Transmit+0x700>
 80033d4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80033d8:	095b      	lsrs	r3, r3, #5
 80033da:	66bb      	str	r3, [r7, #104]	@ 0x68
 80033dc:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80033e0:	f003 031f 	and.w	r3, r3, #31
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	d102      	bne.n	80033ee <HAL_PCD_EP_DB_Transmit+0x6de>
 80033e8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80033ea:	3b01      	subs	r3, #1
 80033ec:	66bb      	str	r3, [r7, #104]	@ 0x68
 80033ee:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80033f0:	881b      	ldrh	r3, [r3, #0]
 80033f2:	b29a      	uxth	r2, r3
 80033f4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80033f6:	b29b      	uxth	r3, r3
 80033f8:	029b      	lsls	r3, r3, #10
 80033fa:	b29b      	uxth	r3, r3
 80033fc:	4313      	orrs	r3, r2
 80033fe:	b29b      	uxth	r3, r3
 8003400:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003404:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003408:	b29a      	uxth	r2, r3
 800340a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800340c:	801a      	strh	r2, [r3, #0]
 800340e:	e041      	b.n	8003494 <HAL_PCD_EP_DB_Transmit+0x784>
 8003410:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003414:	2b00      	cmp	r3, #0
 8003416:	d10a      	bne.n	800342e <HAL_PCD_EP_DB_Transmit+0x71e>
 8003418:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800341a:	881b      	ldrh	r3, [r3, #0]
 800341c:	b29b      	uxth	r3, r3
 800341e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003422:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003426:	b29a      	uxth	r2, r3
 8003428:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800342a:	801a      	strh	r2, [r3, #0]
 800342c:	e032      	b.n	8003494 <HAL_PCD_EP_DB_Transmit+0x784>
 800342e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003432:	085b      	lsrs	r3, r3, #1
 8003434:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003436:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800343a:	f003 0301 	and.w	r3, r3, #1
 800343e:	2b00      	cmp	r3, #0
 8003440:	d002      	beq.n	8003448 <HAL_PCD_EP_DB_Transmit+0x738>
 8003442:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003444:	3301      	adds	r3, #1
 8003446:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003448:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800344a:	881b      	ldrh	r3, [r3, #0]
 800344c:	b29a      	uxth	r2, r3
 800344e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003450:	b29b      	uxth	r3, r3
 8003452:	029b      	lsls	r3, r3, #10
 8003454:	b29b      	uxth	r3, r3
 8003456:	4313      	orrs	r3, r2
 8003458:	b29a      	uxth	r2, r3
 800345a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800345c:	801a      	strh	r2, [r3, #0]
 800345e:	e019      	b.n	8003494 <HAL_PCD_EP_DB_Transmit+0x784>
 8003460:	68bb      	ldr	r3, [r7, #8]
 8003462:	785b      	ldrb	r3, [r3, #1]
 8003464:	2b01      	cmp	r3, #1
 8003466:	d115      	bne.n	8003494 <HAL_PCD_EP_DB_Transmit+0x784>
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8003470:	b29b      	uxth	r3, r3
 8003472:	461a      	mov	r2, r3
 8003474:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003476:	4413      	add	r3, r2
 8003478:	657b      	str	r3, [r7, #84]	@ 0x54
 800347a:	68bb      	ldr	r3, [r7, #8]
 800347c:	781b      	ldrb	r3, [r3, #0]
 800347e:	011a      	lsls	r2, r3, #4
 8003480:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8003482:	4413      	add	r3, r2
 8003484:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8003488:	653b      	str	r3, [r7, #80]	@ 0x50
 800348a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800348e:	b29a      	uxth	r2, r3
 8003490:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003492:	801a      	strh	r2, [r3, #0]
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	6818      	ldr	r0, [r3, #0]
 8003498:	68bb      	ldr	r3, [r7, #8]
 800349a:	6959      	ldr	r1, [r3, #20]
 800349c:	68bb      	ldr	r3, [r7, #8]
 800349e:	895a      	ldrh	r2, [r3, #10]
 80034a0:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80034a4:	b29b      	uxth	r3, r3
 80034a6:	f003 f8d8 	bl	800665a <USB_WritePMA>
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	461a      	mov	r2, r3
 80034b0:	68bb      	ldr	r3, [r7, #8]
 80034b2:	781b      	ldrb	r3, [r3, #0]
 80034b4:	009b      	lsls	r3, r3, #2
 80034b6:	4413      	add	r3, r2
 80034b8:	881b      	ldrh	r3, [r3, #0]
 80034ba:	b29b      	uxth	r3, r3
 80034bc:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80034c0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80034c4:	82bb      	strh	r3, [r7, #20]
 80034c6:	8abb      	ldrh	r3, [r7, #20]
 80034c8:	f083 0310 	eor.w	r3, r3, #16
 80034cc:	82bb      	strh	r3, [r7, #20]
 80034ce:	8abb      	ldrh	r3, [r7, #20]
 80034d0:	f083 0320 	eor.w	r3, r3, #32
 80034d4:	82bb      	strh	r3, [r7, #20]
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	461a      	mov	r2, r3
 80034dc:	68bb      	ldr	r3, [r7, #8]
 80034de:	781b      	ldrb	r3, [r3, #0]
 80034e0:	009b      	lsls	r3, r3, #2
 80034e2:	441a      	add	r2, r3
 80034e4:	8abb      	ldrh	r3, [r7, #20]
 80034e6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80034ea:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80034ee:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80034f2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80034f6:	b29b      	uxth	r3, r3
 80034f8:	8013      	strh	r3, [r2, #0]
 80034fa:	2300      	movs	r3, #0
 80034fc:	4618      	mov	r0, r3
 80034fe:	3790      	adds	r7, #144	@ 0x90
 8003500:	46bd      	mov	sp, r7
 8003502:	bd80      	pop	{r7, pc}

08003504 <HAL_PCDEx_PMAConfig>:
 8003504:	b480      	push	{r7}
 8003506:	b087      	sub	sp, #28
 8003508:	af00      	add	r7, sp, #0
 800350a:	60f8      	str	r0, [r7, #12]
 800350c:	607b      	str	r3, [r7, #4]
 800350e:	460b      	mov	r3, r1
 8003510:	817b      	strh	r3, [r7, #10]
 8003512:	4613      	mov	r3, r2
 8003514:	813b      	strh	r3, [r7, #8]
 8003516:	897b      	ldrh	r3, [r7, #10]
 8003518:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800351c:	b29b      	uxth	r3, r3
 800351e:	2b00      	cmp	r3, #0
 8003520:	d00b      	beq.n	800353a <HAL_PCDEx_PMAConfig+0x36>
 8003522:	897b      	ldrh	r3, [r7, #10]
 8003524:	f003 0207 	and.w	r2, r3, #7
 8003528:	4613      	mov	r3, r2
 800352a:	009b      	lsls	r3, r3, #2
 800352c:	4413      	add	r3, r2
 800352e:	00db      	lsls	r3, r3, #3
 8003530:	3310      	adds	r3, #16
 8003532:	68fa      	ldr	r2, [r7, #12]
 8003534:	4413      	add	r3, r2
 8003536:	617b      	str	r3, [r7, #20]
 8003538:	e009      	b.n	800354e <HAL_PCDEx_PMAConfig+0x4a>
 800353a:	897a      	ldrh	r2, [r7, #10]
 800353c:	4613      	mov	r3, r2
 800353e:	009b      	lsls	r3, r3, #2
 8003540:	4413      	add	r3, r2
 8003542:	00db      	lsls	r3, r3, #3
 8003544:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8003548:	68fa      	ldr	r2, [r7, #12]
 800354a:	4413      	add	r3, r2
 800354c:	617b      	str	r3, [r7, #20]
 800354e:	893b      	ldrh	r3, [r7, #8]
 8003550:	2b00      	cmp	r3, #0
 8003552:	d107      	bne.n	8003564 <HAL_PCDEx_PMAConfig+0x60>
 8003554:	697b      	ldr	r3, [r7, #20]
 8003556:	2200      	movs	r2, #0
 8003558:	731a      	strb	r2, [r3, #12]
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	b29a      	uxth	r2, r3
 800355e:	697b      	ldr	r3, [r7, #20]
 8003560:	80da      	strh	r2, [r3, #6]
 8003562:	e00b      	b.n	800357c <HAL_PCDEx_PMAConfig+0x78>
 8003564:	697b      	ldr	r3, [r7, #20]
 8003566:	2201      	movs	r2, #1
 8003568:	731a      	strb	r2, [r3, #12]
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	b29a      	uxth	r2, r3
 800356e:	697b      	ldr	r3, [r7, #20]
 8003570:	811a      	strh	r2, [r3, #8]
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	0c1b      	lsrs	r3, r3, #16
 8003576:	b29a      	uxth	r2, r3
 8003578:	697b      	ldr	r3, [r7, #20]
 800357a:	815a      	strh	r2, [r3, #10]
 800357c:	2300      	movs	r3, #0
 800357e:	4618      	mov	r0, r3
 8003580:	371c      	adds	r7, #28
 8003582:	46bd      	mov	sp, r7
 8003584:	bc80      	pop	{r7}
 8003586:	4770      	bx	lr

08003588 <HAL_RCC_OscConfig>:
 8003588:	b580      	push	{r7, lr}
 800358a:	b086      	sub	sp, #24
 800358c:	af00      	add	r7, sp, #0
 800358e:	6078      	str	r0, [r7, #4]
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	2b00      	cmp	r3, #0
 8003594:	d101      	bne.n	800359a <HAL_RCC_OscConfig+0x12>
 8003596:	2301      	movs	r3, #1
 8003598:	e272      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f003 0301 	and.w	r3, r3, #1
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	f000 8087 	beq.w	80036b6 <HAL_RCC_OscConfig+0x12e>
 80035a8:	4b92      	ldr	r3, [pc, #584]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035aa:	685b      	ldr	r3, [r3, #4]
 80035ac:	f003 030c 	and.w	r3, r3, #12
 80035b0:	2b04      	cmp	r3, #4
 80035b2:	d00c      	beq.n	80035ce <HAL_RCC_OscConfig+0x46>
 80035b4:	4b8f      	ldr	r3, [pc, #572]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035b6:	685b      	ldr	r3, [r3, #4]
 80035b8:	f003 030c 	and.w	r3, r3, #12
 80035bc:	2b08      	cmp	r3, #8
 80035be:	d112      	bne.n	80035e6 <HAL_RCC_OscConfig+0x5e>
 80035c0:	4b8c      	ldr	r3, [pc, #560]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035c2:	685b      	ldr	r3, [r3, #4]
 80035c4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80035c8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80035cc:	d10b      	bne.n	80035e6 <HAL_RCC_OscConfig+0x5e>
 80035ce:	4b89      	ldr	r3, [pc, #548]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d06c      	beq.n	80036b4 <HAL_RCC_OscConfig+0x12c>
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	685b      	ldr	r3, [r3, #4]
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d168      	bne.n	80036b4 <HAL_RCC_OscConfig+0x12c>
 80035e2:	2301      	movs	r3, #1
 80035e4:	e24c      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	685b      	ldr	r3, [r3, #4]
 80035ea:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80035ee:	d106      	bne.n	80035fe <HAL_RCC_OscConfig+0x76>
 80035f0:	4b80      	ldr	r3, [pc, #512]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	4a7f      	ldr	r2, [pc, #508]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80035f6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80035fa:	6013      	str	r3, [r2, #0]
 80035fc:	e02e      	b.n	800365c <HAL_RCC_OscConfig+0xd4>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	685b      	ldr	r3, [r3, #4]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d10c      	bne.n	8003620 <HAL_RCC_OscConfig+0x98>
 8003606:	4b7b      	ldr	r3, [pc, #492]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	4a7a      	ldr	r2, [pc, #488]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800360c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003610:	6013      	str	r3, [r2, #0]
 8003612:	4b78      	ldr	r3, [pc, #480]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	4a77      	ldr	r2, [pc, #476]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003618:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800361c:	6013      	str	r3, [r2, #0]
 800361e:	e01d      	b.n	800365c <HAL_RCC_OscConfig+0xd4>
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	685b      	ldr	r3, [r3, #4]
 8003624:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003628:	d10c      	bne.n	8003644 <HAL_RCC_OscConfig+0xbc>
 800362a:	4b72      	ldr	r3, [pc, #456]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	4a71      	ldr	r2, [pc, #452]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003630:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003634:	6013      	str	r3, [r2, #0]
 8003636:	4b6f      	ldr	r3, [pc, #444]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	4a6e      	ldr	r2, [pc, #440]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800363c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003640:	6013      	str	r3, [r2, #0]
 8003642:	e00b      	b.n	800365c <HAL_RCC_OscConfig+0xd4>
 8003644:	4b6b      	ldr	r3, [pc, #428]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	4a6a      	ldr	r2, [pc, #424]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800364a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800364e:	6013      	str	r3, [r2, #0]
 8003650:	4b68      	ldr	r3, [pc, #416]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	4a67      	ldr	r2, [pc, #412]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003656:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800365a:	6013      	str	r3, [r2, #0]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	685b      	ldr	r3, [r3, #4]
 8003660:	2b00      	cmp	r3, #0
 8003662:	d013      	beq.n	800368c <HAL_RCC_OscConfig+0x104>
 8003664:	f7fd fb2c 	bl	8000cc0 <HAL_GetTick>
 8003668:	6138      	str	r0, [r7, #16]
 800366a:	e008      	b.n	800367e <HAL_RCC_OscConfig+0xf6>
 800366c:	f7fd fb28 	bl	8000cc0 <HAL_GetTick>
 8003670:	4602      	mov	r2, r0
 8003672:	693b      	ldr	r3, [r7, #16]
 8003674:	1ad3      	subs	r3, r2, r3
 8003676:	2b64      	cmp	r3, #100	@ 0x64
 8003678:	d901      	bls.n	800367e <HAL_RCC_OscConfig+0xf6>
 800367a:	2303      	movs	r3, #3
 800367c:	e200      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 800367e:	4b5d      	ldr	r3, [pc, #372]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003686:	2b00      	cmp	r3, #0
 8003688:	d0f0      	beq.n	800366c <HAL_RCC_OscConfig+0xe4>
 800368a:	e014      	b.n	80036b6 <HAL_RCC_OscConfig+0x12e>
 800368c:	f7fd fb18 	bl	8000cc0 <HAL_GetTick>
 8003690:	6138      	str	r0, [r7, #16]
 8003692:	e008      	b.n	80036a6 <HAL_RCC_OscConfig+0x11e>
 8003694:	f7fd fb14 	bl	8000cc0 <HAL_GetTick>
 8003698:	4602      	mov	r2, r0
 800369a:	693b      	ldr	r3, [r7, #16]
 800369c:	1ad3      	subs	r3, r2, r3
 800369e:	2b64      	cmp	r3, #100	@ 0x64
 80036a0:	d901      	bls.n	80036a6 <HAL_RCC_OscConfig+0x11e>
 80036a2:	2303      	movs	r3, #3
 80036a4:	e1ec      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80036a6:	4b53      	ldr	r3, [pc, #332]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d1f0      	bne.n	8003694 <HAL_RCC_OscConfig+0x10c>
 80036b2:	e000      	b.n	80036b6 <HAL_RCC_OscConfig+0x12e>
 80036b4:	bf00      	nop
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	f003 0302 	and.w	r3, r3, #2
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d063      	beq.n	800378a <HAL_RCC_OscConfig+0x202>
 80036c2:	4b4c      	ldr	r3, [pc, #304]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80036c4:	685b      	ldr	r3, [r3, #4]
 80036c6:	f003 030c 	and.w	r3, r3, #12
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	d00b      	beq.n	80036e6 <HAL_RCC_OscConfig+0x15e>
 80036ce:	4b49      	ldr	r3, [pc, #292]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80036d0:	685b      	ldr	r3, [r3, #4]
 80036d2:	f003 030c 	and.w	r3, r3, #12
 80036d6:	2b08      	cmp	r3, #8
 80036d8:	d11c      	bne.n	8003714 <HAL_RCC_OscConfig+0x18c>
 80036da:	4b46      	ldr	r3, [pc, #280]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80036dc:	685b      	ldr	r3, [r3, #4]
 80036de:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	d116      	bne.n	8003714 <HAL_RCC_OscConfig+0x18c>
 80036e6:	4b43      	ldr	r3, [pc, #268]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	f003 0302 	and.w	r3, r3, #2
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d005      	beq.n	80036fe <HAL_RCC_OscConfig+0x176>
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	691b      	ldr	r3, [r3, #16]
 80036f6:	2b01      	cmp	r3, #1
 80036f8:	d001      	beq.n	80036fe <HAL_RCC_OscConfig+0x176>
 80036fa:	2301      	movs	r3, #1
 80036fc:	e1c0      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80036fe:	4b3d      	ldr	r3, [pc, #244]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003700:	681b      	ldr	r3, [r3, #0]
 8003702:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	695b      	ldr	r3, [r3, #20]
 800370a:	00db      	lsls	r3, r3, #3
 800370c:	4939      	ldr	r1, [pc, #228]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800370e:	4313      	orrs	r3, r2
 8003710:	600b      	str	r3, [r1, #0]
 8003712:	e03a      	b.n	800378a <HAL_RCC_OscConfig+0x202>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	691b      	ldr	r3, [r3, #16]
 8003718:	2b00      	cmp	r3, #0
 800371a:	d020      	beq.n	800375e <HAL_RCC_OscConfig+0x1d6>
 800371c:	4b36      	ldr	r3, [pc, #216]	@ (80037f8 <HAL_RCC_OscConfig+0x270>)
 800371e:	2201      	movs	r2, #1
 8003720:	601a      	str	r2, [r3, #0]
 8003722:	f7fd facd 	bl	8000cc0 <HAL_GetTick>
 8003726:	6138      	str	r0, [r7, #16]
 8003728:	e008      	b.n	800373c <HAL_RCC_OscConfig+0x1b4>
 800372a:	f7fd fac9 	bl	8000cc0 <HAL_GetTick>
 800372e:	4602      	mov	r2, r0
 8003730:	693b      	ldr	r3, [r7, #16]
 8003732:	1ad3      	subs	r3, r2, r3
 8003734:	2b02      	cmp	r3, #2
 8003736:	d901      	bls.n	800373c <HAL_RCC_OscConfig+0x1b4>
 8003738:	2303      	movs	r3, #3
 800373a:	e1a1      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 800373c:	4b2d      	ldr	r3, [pc, #180]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	f003 0302 	and.w	r3, r3, #2
 8003744:	2b00      	cmp	r3, #0
 8003746:	d0f0      	beq.n	800372a <HAL_RCC_OscConfig+0x1a2>
 8003748:	4b2a      	ldr	r3, [pc, #168]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	695b      	ldr	r3, [r3, #20]
 8003754:	00db      	lsls	r3, r3, #3
 8003756:	4927      	ldr	r1, [pc, #156]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003758:	4313      	orrs	r3, r2
 800375a:	600b      	str	r3, [r1, #0]
 800375c:	e015      	b.n	800378a <HAL_RCC_OscConfig+0x202>
 800375e:	4b26      	ldr	r3, [pc, #152]	@ (80037f8 <HAL_RCC_OscConfig+0x270>)
 8003760:	2200      	movs	r2, #0
 8003762:	601a      	str	r2, [r3, #0]
 8003764:	f7fd faac 	bl	8000cc0 <HAL_GetTick>
 8003768:	6138      	str	r0, [r7, #16]
 800376a:	e008      	b.n	800377e <HAL_RCC_OscConfig+0x1f6>
 800376c:	f7fd faa8 	bl	8000cc0 <HAL_GetTick>
 8003770:	4602      	mov	r2, r0
 8003772:	693b      	ldr	r3, [r7, #16]
 8003774:	1ad3      	subs	r3, r2, r3
 8003776:	2b02      	cmp	r3, #2
 8003778:	d901      	bls.n	800377e <HAL_RCC_OscConfig+0x1f6>
 800377a:	2303      	movs	r3, #3
 800377c:	e180      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 800377e:	4b1d      	ldr	r3, [pc, #116]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	f003 0302 	and.w	r3, r3, #2
 8003786:	2b00      	cmp	r3, #0
 8003788:	d1f0      	bne.n	800376c <HAL_RCC_OscConfig+0x1e4>
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	f003 0308 	and.w	r3, r3, #8
 8003792:	2b00      	cmp	r3, #0
 8003794:	d03a      	beq.n	800380c <HAL_RCC_OscConfig+0x284>
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	699b      	ldr	r3, [r3, #24]
 800379a:	2b00      	cmp	r3, #0
 800379c:	d019      	beq.n	80037d2 <HAL_RCC_OscConfig+0x24a>
 800379e:	4b17      	ldr	r3, [pc, #92]	@ (80037fc <HAL_RCC_OscConfig+0x274>)
 80037a0:	2201      	movs	r2, #1
 80037a2:	601a      	str	r2, [r3, #0]
 80037a4:	f7fd fa8c 	bl	8000cc0 <HAL_GetTick>
 80037a8:	6138      	str	r0, [r7, #16]
 80037aa:	e008      	b.n	80037be <HAL_RCC_OscConfig+0x236>
 80037ac:	f7fd fa88 	bl	8000cc0 <HAL_GetTick>
 80037b0:	4602      	mov	r2, r0
 80037b2:	693b      	ldr	r3, [r7, #16]
 80037b4:	1ad3      	subs	r3, r2, r3
 80037b6:	2b02      	cmp	r3, #2
 80037b8:	d901      	bls.n	80037be <HAL_RCC_OscConfig+0x236>
 80037ba:	2303      	movs	r3, #3
 80037bc:	e160      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80037be:	4b0d      	ldr	r3, [pc, #52]	@ (80037f4 <HAL_RCC_OscConfig+0x26c>)
 80037c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037c2:	f003 0302 	and.w	r3, r3, #2
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d0f0      	beq.n	80037ac <HAL_RCC_OscConfig+0x224>
 80037ca:	2001      	movs	r0, #1
 80037cc:	f000 faba 	bl	8003d44 <RCC_Delay>
 80037d0:	e01c      	b.n	800380c <HAL_RCC_OscConfig+0x284>
 80037d2:	4b0a      	ldr	r3, [pc, #40]	@ (80037fc <HAL_RCC_OscConfig+0x274>)
 80037d4:	2200      	movs	r2, #0
 80037d6:	601a      	str	r2, [r3, #0]
 80037d8:	f7fd fa72 	bl	8000cc0 <HAL_GetTick>
 80037dc:	6138      	str	r0, [r7, #16]
 80037de:	e00f      	b.n	8003800 <HAL_RCC_OscConfig+0x278>
 80037e0:	f7fd fa6e 	bl	8000cc0 <HAL_GetTick>
 80037e4:	4602      	mov	r2, r0
 80037e6:	693b      	ldr	r3, [r7, #16]
 80037e8:	1ad3      	subs	r3, r2, r3
 80037ea:	2b02      	cmp	r3, #2
 80037ec:	d908      	bls.n	8003800 <HAL_RCC_OscConfig+0x278>
 80037ee:	2303      	movs	r3, #3
 80037f0:	e146      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80037f2:	bf00      	nop
 80037f4:	40021000 	.word	0x40021000
 80037f8:	42420000 	.word	0x42420000
 80037fc:	42420480 	.word	0x42420480
 8003800:	4b92      	ldr	r3, [pc, #584]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003802:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003804:	f003 0302 	and.w	r3, r3, #2
 8003808:	2b00      	cmp	r3, #0
 800380a:	d1e9      	bne.n	80037e0 <HAL_RCC_OscConfig+0x258>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	f003 0304 	and.w	r3, r3, #4
 8003814:	2b00      	cmp	r3, #0
 8003816:	f000 80a6 	beq.w	8003966 <HAL_RCC_OscConfig+0x3de>
 800381a:	2300      	movs	r3, #0
 800381c:	75fb      	strb	r3, [r7, #23]
 800381e:	4b8b      	ldr	r3, [pc, #556]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003820:	69db      	ldr	r3, [r3, #28]
 8003822:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003826:	2b00      	cmp	r3, #0
 8003828:	d10d      	bne.n	8003846 <HAL_RCC_OscConfig+0x2be>
 800382a:	4b88      	ldr	r3, [pc, #544]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 800382c:	69db      	ldr	r3, [r3, #28]
 800382e:	4a87      	ldr	r2, [pc, #540]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003830:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003834:	61d3      	str	r3, [r2, #28]
 8003836:	4b85      	ldr	r3, [pc, #532]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003838:	69db      	ldr	r3, [r3, #28]
 800383a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800383e:	60bb      	str	r3, [r7, #8]
 8003840:	68bb      	ldr	r3, [r7, #8]
 8003842:	2301      	movs	r3, #1
 8003844:	75fb      	strb	r3, [r7, #23]
 8003846:	4b82      	ldr	r3, [pc, #520]	@ (8003a50 <HAL_RCC_OscConfig+0x4c8>)
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800384e:	2b00      	cmp	r3, #0
 8003850:	d118      	bne.n	8003884 <HAL_RCC_OscConfig+0x2fc>
 8003852:	4b7f      	ldr	r3, [pc, #508]	@ (8003a50 <HAL_RCC_OscConfig+0x4c8>)
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	4a7e      	ldr	r2, [pc, #504]	@ (8003a50 <HAL_RCC_OscConfig+0x4c8>)
 8003858:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800385c:	6013      	str	r3, [r2, #0]
 800385e:	f7fd fa2f 	bl	8000cc0 <HAL_GetTick>
 8003862:	6138      	str	r0, [r7, #16]
 8003864:	e008      	b.n	8003878 <HAL_RCC_OscConfig+0x2f0>
 8003866:	f7fd fa2b 	bl	8000cc0 <HAL_GetTick>
 800386a:	4602      	mov	r2, r0
 800386c:	693b      	ldr	r3, [r7, #16]
 800386e:	1ad3      	subs	r3, r2, r3
 8003870:	2b64      	cmp	r3, #100	@ 0x64
 8003872:	d901      	bls.n	8003878 <HAL_RCC_OscConfig+0x2f0>
 8003874:	2303      	movs	r3, #3
 8003876:	e103      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003878:	4b75      	ldr	r3, [pc, #468]	@ (8003a50 <HAL_RCC_OscConfig+0x4c8>)
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003880:	2b00      	cmp	r3, #0
 8003882:	d0f0      	beq.n	8003866 <HAL_RCC_OscConfig+0x2de>
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	68db      	ldr	r3, [r3, #12]
 8003888:	2b01      	cmp	r3, #1
 800388a:	d106      	bne.n	800389a <HAL_RCC_OscConfig+0x312>
 800388c:	4b6f      	ldr	r3, [pc, #444]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 800388e:	6a1b      	ldr	r3, [r3, #32]
 8003890:	4a6e      	ldr	r2, [pc, #440]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003892:	f043 0301 	orr.w	r3, r3, #1
 8003896:	6213      	str	r3, [r2, #32]
 8003898:	e02d      	b.n	80038f6 <HAL_RCC_OscConfig+0x36e>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	68db      	ldr	r3, [r3, #12]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	d10c      	bne.n	80038bc <HAL_RCC_OscConfig+0x334>
 80038a2:	4b6a      	ldr	r3, [pc, #424]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038a4:	6a1b      	ldr	r3, [r3, #32]
 80038a6:	4a69      	ldr	r2, [pc, #420]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038a8:	f023 0301 	bic.w	r3, r3, #1
 80038ac:	6213      	str	r3, [r2, #32]
 80038ae:	4b67      	ldr	r3, [pc, #412]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038b0:	6a1b      	ldr	r3, [r3, #32]
 80038b2:	4a66      	ldr	r2, [pc, #408]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038b4:	f023 0304 	bic.w	r3, r3, #4
 80038b8:	6213      	str	r3, [r2, #32]
 80038ba:	e01c      	b.n	80038f6 <HAL_RCC_OscConfig+0x36e>
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	68db      	ldr	r3, [r3, #12]
 80038c0:	2b05      	cmp	r3, #5
 80038c2:	d10c      	bne.n	80038de <HAL_RCC_OscConfig+0x356>
 80038c4:	4b61      	ldr	r3, [pc, #388]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038c6:	6a1b      	ldr	r3, [r3, #32]
 80038c8:	4a60      	ldr	r2, [pc, #384]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038ca:	f043 0304 	orr.w	r3, r3, #4
 80038ce:	6213      	str	r3, [r2, #32]
 80038d0:	4b5e      	ldr	r3, [pc, #376]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038d2:	6a1b      	ldr	r3, [r3, #32]
 80038d4:	4a5d      	ldr	r2, [pc, #372]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038d6:	f043 0301 	orr.w	r3, r3, #1
 80038da:	6213      	str	r3, [r2, #32]
 80038dc:	e00b      	b.n	80038f6 <HAL_RCC_OscConfig+0x36e>
 80038de:	4b5b      	ldr	r3, [pc, #364]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038e0:	6a1b      	ldr	r3, [r3, #32]
 80038e2:	4a5a      	ldr	r2, [pc, #360]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038e4:	f023 0301 	bic.w	r3, r3, #1
 80038e8:	6213      	str	r3, [r2, #32]
 80038ea:	4b58      	ldr	r3, [pc, #352]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038ec:	6a1b      	ldr	r3, [r3, #32]
 80038ee:	4a57      	ldr	r2, [pc, #348]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80038f0:	f023 0304 	bic.w	r3, r3, #4
 80038f4:	6213      	str	r3, [r2, #32]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	68db      	ldr	r3, [r3, #12]
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d015      	beq.n	800392a <HAL_RCC_OscConfig+0x3a2>
 80038fe:	f7fd f9df 	bl	8000cc0 <HAL_GetTick>
 8003902:	6138      	str	r0, [r7, #16]
 8003904:	e00a      	b.n	800391c <HAL_RCC_OscConfig+0x394>
 8003906:	f7fd f9db 	bl	8000cc0 <HAL_GetTick>
 800390a:	4602      	mov	r2, r0
 800390c:	693b      	ldr	r3, [r7, #16]
 800390e:	1ad3      	subs	r3, r2, r3
 8003910:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003914:	4293      	cmp	r3, r2
 8003916:	d901      	bls.n	800391c <HAL_RCC_OscConfig+0x394>
 8003918:	2303      	movs	r3, #3
 800391a:	e0b1      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 800391c:	4b4b      	ldr	r3, [pc, #300]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 800391e:	6a1b      	ldr	r3, [r3, #32]
 8003920:	f003 0302 	and.w	r3, r3, #2
 8003924:	2b00      	cmp	r3, #0
 8003926:	d0ee      	beq.n	8003906 <HAL_RCC_OscConfig+0x37e>
 8003928:	e014      	b.n	8003954 <HAL_RCC_OscConfig+0x3cc>
 800392a:	f7fd f9c9 	bl	8000cc0 <HAL_GetTick>
 800392e:	6138      	str	r0, [r7, #16]
 8003930:	e00a      	b.n	8003948 <HAL_RCC_OscConfig+0x3c0>
 8003932:	f7fd f9c5 	bl	8000cc0 <HAL_GetTick>
 8003936:	4602      	mov	r2, r0
 8003938:	693b      	ldr	r3, [r7, #16]
 800393a:	1ad3      	subs	r3, r2, r3
 800393c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003940:	4293      	cmp	r3, r2
 8003942:	d901      	bls.n	8003948 <HAL_RCC_OscConfig+0x3c0>
 8003944:	2303      	movs	r3, #3
 8003946:	e09b      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003948:	4b40      	ldr	r3, [pc, #256]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 800394a:	6a1b      	ldr	r3, [r3, #32]
 800394c:	f003 0302 	and.w	r3, r3, #2
 8003950:	2b00      	cmp	r3, #0
 8003952:	d1ee      	bne.n	8003932 <HAL_RCC_OscConfig+0x3aa>
 8003954:	7dfb      	ldrb	r3, [r7, #23]
 8003956:	2b01      	cmp	r3, #1
 8003958:	d105      	bne.n	8003966 <HAL_RCC_OscConfig+0x3de>
 800395a:	4b3c      	ldr	r3, [pc, #240]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 800395c:	69db      	ldr	r3, [r3, #28]
 800395e:	4a3b      	ldr	r2, [pc, #236]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003960:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003964:	61d3      	str	r3, [r2, #28]
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	69db      	ldr	r3, [r3, #28]
 800396a:	2b00      	cmp	r3, #0
 800396c:	f000 8087 	beq.w	8003a7e <HAL_RCC_OscConfig+0x4f6>
 8003970:	4b36      	ldr	r3, [pc, #216]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003972:	685b      	ldr	r3, [r3, #4]
 8003974:	f003 030c 	and.w	r3, r3, #12
 8003978:	2b08      	cmp	r3, #8
 800397a:	d061      	beq.n	8003a40 <HAL_RCC_OscConfig+0x4b8>
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	69db      	ldr	r3, [r3, #28]
 8003980:	2b02      	cmp	r3, #2
 8003982:	d146      	bne.n	8003a12 <HAL_RCC_OscConfig+0x48a>
 8003984:	4b33      	ldr	r3, [pc, #204]	@ (8003a54 <HAL_RCC_OscConfig+0x4cc>)
 8003986:	2200      	movs	r2, #0
 8003988:	601a      	str	r2, [r3, #0]
 800398a:	f7fd f999 	bl	8000cc0 <HAL_GetTick>
 800398e:	6138      	str	r0, [r7, #16]
 8003990:	e008      	b.n	80039a4 <HAL_RCC_OscConfig+0x41c>
 8003992:	f7fd f995 	bl	8000cc0 <HAL_GetTick>
 8003996:	4602      	mov	r2, r0
 8003998:	693b      	ldr	r3, [r7, #16]
 800399a:	1ad3      	subs	r3, r2, r3
 800399c:	2b02      	cmp	r3, #2
 800399e:	d901      	bls.n	80039a4 <HAL_RCC_OscConfig+0x41c>
 80039a0:	2303      	movs	r3, #3
 80039a2:	e06d      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 80039a4:	4b29      	ldr	r3, [pc, #164]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d1f0      	bne.n	8003992 <HAL_RCC_OscConfig+0x40a>
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	6a1b      	ldr	r3, [r3, #32]
 80039b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80039b8:	d108      	bne.n	80039cc <HAL_RCC_OscConfig+0x444>
 80039ba:	4b24      	ldr	r3, [pc, #144]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	689b      	ldr	r3, [r3, #8]
 80039c6:	4921      	ldr	r1, [pc, #132]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80039c8:	4313      	orrs	r3, r2
 80039ca:	604b      	str	r3, [r1, #4]
 80039cc:	4b1f      	ldr	r3, [pc, #124]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80039ce:	685b      	ldr	r3, [r3, #4]
 80039d0:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	6a19      	ldr	r1, [r3, #32]
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80039dc:	430b      	orrs	r3, r1
 80039de:	491b      	ldr	r1, [pc, #108]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 80039e0:	4313      	orrs	r3, r2
 80039e2:	604b      	str	r3, [r1, #4]
 80039e4:	4b1b      	ldr	r3, [pc, #108]	@ (8003a54 <HAL_RCC_OscConfig+0x4cc>)
 80039e6:	2201      	movs	r2, #1
 80039e8:	601a      	str	r2, [r3, #0]
 80039ea:	f7fd f969 	bl	8000cc0 <HAL_GetTick>
 80039ee:	6138      	str	r0, [r7, #16]
 80039f0:	e008      	b.n	8003a04 <HAL_RCC_OscConfig+0x47c>
 80039f2:	f7fd f965 	bl	8000cc0 <HAL_GetTick>
 80039f6:	4602      	mov	r2, r0
 80039f8:	693b      	ldr	r3, [r7, #16]
 80039fa:	1ad3      	subs	r3, r2, r3
 80039fc:	2b02      	cmp	r3, #2
 80039fe:	d901      	bls.n	8003a04 <HAL_RCC_OscConfig+0x47c>
 8003a00:	2303      	movs	r3, #3
 8003a02:	e03d      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003a04:	4b11      	ldr	r3, [pc, #68]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003a0c:	2b00      	cmp	r3, #0
 8003a0e:	d0f0      	beq.n	80039f2 <HAL_RCC_OscConfig+0x46a>
 8003a10:	e035      	b.n	8003a7e <HAL_RCC_OscConfig+0x4f6>
 8003a12:	4b10      	ldr	r3, [pc, #64]	@ (8003a54 <HAL_RCC_OscConfig+0x4cc>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	601a      	str	r2, [r3, #0]
 8003a18:	f7fd f952 	bl	8000cc0 <HAL_GetTick>
 8003a1c:	6138      	str	r0, [r7, #16]
 8003a1e:	e008      	b.n	8003a32 <HAL_RCC_OscConfig+0x4aa>
 8003a20:	f7fd f94e 	bl	8000cc0 <HAL_GetTick>
 8003a24:	4602      	mov	r2, r0
 8003a26:	693b      	ldr	r3, [r7, #16]
 8003a28:	1ad3      	subs	r3, r2, r3
 8003a2a:	2b02      	cmp	r3, #2
 8003a2c:	d901      	bls.n	8003a32 <HAL_RCC_OscConfig+0x4aa>
 8003a2e:	2303      	movs	r3, #3
 8003a30:	e026      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003a32:	4b06      	ldr	r3, [pc, #24]	@ (8003a4c <HAL_RCC_OscConfig+0x4c4>)
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d1f0      	bne.n	8003a20 <HAL_RCC_OscConfig+0x498>
 8003a3e:	e01e      	b.n	8003a7e <HAL_RCC_OscConfig+0x4f6>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	69db      	ldr	r3, [r3, #28]
 8003a44:	2b01      	cmp	r3, #1
 8003a46:	d107      	bne.n	8003a58 <HAL_RCC_OscConfig+0x4d0>
 8003a48:	2301      	movs	r3, #1
 8003a4a:	e019      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003a4c:	40021000 	.word	0x40021000
 8003a50:	40007000 	.word	0x40007000
 8003a54:	42420060 	.word	0x42420060
 8003a58:	4b0b      	ldr	r3, [pc, #44]	@ (8003a88 <HAL_RCC_OscConfig+0x500>)
 8003a5a:	685b      	ldr	r3, [r3, #4]
 8003a5c:	60fb      	str	r3, [r7, #12]
 8003a5e:	68fb      	ldr	r3, [r7, #12]
 8003a60:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	6a1b      	ldr	r3, [r3, #32]
 8003a68:	429a      	cmp	r2, r3
 8003a6a:	d106      	bne.n	8003a7a <HAL_RCC_OscConfig+0x4f2>
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a76:	429a      	cmp	r2, r3
 8003a78:	d001      	beq.n	8003a7e <HAL_RCC_OscConfig+0x4f6>
 8003a7a:	2301      	movs	r3, #1
 8003a7c:	e000      	b.n	8003a80 <HAL_RCC_OscConfig+0x4f8>
 8003a7e:	2300      	movs	r3, #0
 8003a80:	4618      	mov	r0, r3
 8003a82:	3718      	adds	r7, #24
 8003a84:	46bd      	mov	sp, r7
 8003a86:	bd80      	pop	{r7, pc}
 8003a88:	40021000 	.word	0x40021000

08003a8c <HAL_RCC_ClockConfig>:
 8003a8c:	b580      	push	{r7, lr}
 8003a8e:	b084      	sub	sp, #16
 8003a90:	af00      	add	r7, sp, #0
 8003a92:	6078      	str	r0, [r7, #4]
 8003a94:	6039      	str	r1, [r7, #0]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d101      	bne.n	8003aa0 <HAL_RCC_ClockConfig+0x14>
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	e0d0      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003aa0:	4b6a      	ldr	r3, [pc, #424]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f003 0307 	and.w	r3, r3, #7
 8003aa8:	683a      	ldr	r2, [r7, #0]
 8003aaa:	429a      	cmp	r2, r3
 8003aac:	d910      	bls.n	8003ad0 <HAL_RCC_ClockConfig+0x44>
 8003aae:	4b67      	ldr	r3, [pc, #412]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	f023 0207 	bic.w	r2, r3, #7
 8003ab6:	4965      	ldr	r1, [pc, #404]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003ab8:	683b      	ldr	r3, [r7, #0]
 8003aba:	4313      	orrs	r3, r2
 8003abc:	600b      	str	r3, [r1, #0]
 8003abe:	4b63      	ldr	r3, [pc, #396]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	f003 0307 	and.w	r3, r3, #7
 8003ac6:	683a      	ldr	r2, [r7, #0]
 8003ac8:	429a      	cmp	r2, r3
 8003aca:	d001      	beq.n	8003ad0 <HAL_RCC_ClockConfig+0x44>
 8003acc:	2301      	movs	r3, #1
 8003ace:	e0b8      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f003 0302 	and.w	r3, r3, #2
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	d020      	beq.n	8003b1e <HAL_RCC_ClockConfig+0x92>
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	f003 0304 	and.w	r3, r3, #4
 8003ae4:	2b00      	cmp	r3, #0
 8003ae6:	d005      	beq.n	8003af4 <HAL_RCC_ClockConfig+0x68>
 8003ae8:	4b59      	ldr	r3, [pc, #356]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003aea:	685b      	ldr	r3, [r3, #4]
 8003aec:	4a58      	ldr	r2, [pc, #352]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003aee:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8003af2:	6053      	str	r3, [r2, #4]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	f003 0308 	and.w	r3, r3, #8
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d005      	beq.n	8003b0c <HAL_RCC_ClockConfig+0x80>
 8003b00:	4b53      	ldr	r3, [pc, #332]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b02:	685b      	ldr	r3, [r3, #4]
 8003b04:	4a52      	ldr	r2, [pc, #328]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b06:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8003b0a:	6053      	str	r3, [r2, #4]
 8003b0c:	4b50      	ldr	r3, [pc, #320]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b0e:	685b      	ldr	r3, [r3, #4]
 8003b10:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	689b      	ldr	r3, [r3, #8]
 8003b18:	494d      	ldr	r1, [pc, #308]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b1a:	4313      	orrs	r3, r2
 8003b1c:	604b      	str	r3, [r1, #4]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f003 0301 	and.w	r3, r3, #1
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d040      	beq.n	8003bac <HAL_RCC_ClockConfig+0x120>
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	685b      	ldr	r3, [r3, #4]
 8003b2e:	2b01      	cmp	r3, #1
 8003b30:	d107      	bne.n	8003b42 <HAL_RCC_ClockConfig+0xb6>
 8003b32:	4b47      	ldr	r3, [pc, #284]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d115      	bne.n	8003b6a <HAL_RCC_ClockConfig+0xde>
 8003b3e:	2301      	movs	r3, #1
 8003b40:	e07f      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	685b      	ldr	r3, [r3, #4]
 8003b46:	2b02      	cmp	r3, #2
 8003b48:	d107      	bne.n	8003b5a <HAL_RCC_ClockConfig+0xce>
 8003b4a:	4b41      	ldr	r3, [pc, #260]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d109      	bne.n	8003b6a <HAL_RCC_ClockConfig+0xde>
 8003b56:	2301      	movs	r3, #1
 8003b58:	e073      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003b5a:	4b3d      	ldr	r3, [pc, #244]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f003 0302 	and.w	r3, r3, #2
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d101      	bne.n	8003b6a <HAL_RCC_ClockConfig+0xde>
 8003b66:	2301      	movs	r3, #1
 8003b68:	e06b      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003b6a:	4b39      	ldr	r3, [pc, #228]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b6c:	685b      	ldr	r3, [r3, #4]
 8003b6e:	f023 0203 	bic.w	r2, r3, #3
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	685b      	ldr	r3, [r3, #4]
 8003b76:	4936      	ldr	r1, [pc, #216]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b78:	4313      	orrs	r3, r2
 8003b7a:	604b      	str	r3, [r1, #4]
 8003b7c:	f7fd f8a0 	bl	8000cc0 <HAL_GetTick>
 8003b80:	60f8      	str	r0, [r7, #12]
 8003b82:	e00a      	b.n	8003b9a <HAL_RCC_ClockConfig+0x10e>
 8003b84:	f7fd f89c 	bl	8000cc0 <HAL_GetTick>
 8003b88:	4602      	mov	r2, r0
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	1ad3      	subs	r3, r2, r3
 8003b8e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b92:	4293      	cmp	r3, r2
 8003b94:	d901      	bls.n	8003b9a <HAL_RCC_ClockConfig+0x10e>
 8003b96:	2303      	movs	r3, #3
 8003b98:	e053      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003b9a:	4b2d      	ldr	r3, [pc, #180]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003b9c:	685b      	ldr	r3, [r3, #4]
 8003b9e:	f003 020c 	and.w	r2, r3, #12
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	685b      	ldr	r3, [r3, #4]
 8003ba6:	009b      	lsls	r3, r3, #2
 8003ba8:	429a      	cmp	r2, r3
 8003baa:	d1eb      	bne.n	8003b84 <HAL_RCC_ClockConfig+0xf8>
 8003bac:	4b27      	ldr	r3, [pc, #156]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f003 0307 	and.w	r3, r3, #7
 8003bb4:	683a      	ldr	r2, [r7, #0]
 8003bb6:	429a      	cmp	r2, r3
 8003bb8:	d210      	bcs.n	8003bdc <HAL_RCC_ClockConfig+0x150>
 8003bba:	4b24      	ldr	r3, [pc, #144]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	f023 0207 	bic.w	r2, r3, #7
 8003bc2:	4922      	ldr	r1, [pc, #136]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003bc4:	683b      	ldr	r3, [r7, #0]
 8003bc6:	4313      	orrs	r3, r2
 8003bc8:	600b      	str	r3, [r1, #0]
 8003bca:	4b20      	ldr	r3, [pc, #128]	@ (8003c4c <HAL_RCC_ClockConfig+0x1c0>)
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	f003 0307 	and.w	r3, r3, #7
 8003bd2:	683a      	ldr	r2, [r7, #0]
 8003bd4:	429a      	cmp	r2, r3
 8003bd6:	d001      	beq.n	8003bdc <HAL_RCC_ClockConfig+0x150>
 8003bd8:	2301      	movs	r3, #1
 8003bda:	e032      	b.n	8003c42 <HAL_RCC_ClockConfig+0x1b6>
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	f003 0304 	and.w	r3, r3, #4
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d008      	beq.n	8003bfa <HAL_RCC_ClockConfig+0x16e>
 8003be8:	4b19      	ldr	r3, [pc, #100]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003bea:	685b      	ldr	r3, [r3, #4]
 8003bec:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	68db      	ldr	r3, [r3, #12]
 8003bf4:	4916      	ldr	r1, [pc, #88]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003bf6:	4313      	orrs	r3, r2
 8003bf8:	604b      	str	r3, [r1, #4]
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	f003 0308 	and.w	r3, r3, #8
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d009      	beq.n	8003c1a <HAL_RCC_ClockConfig+0x18e>
 8003c06:	4b12      	ldr	r3, [pc, #72]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003c08:	685b      	ldr	r3, [r3, #4]
 8003c0a:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	691b      	ldr	r3, [r3, #16]
 8003c12:	00db      	lsls	r3, r3, #3
 8003c14:	490e      	ldr	r1, [pc, #56]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003c16:	4313      	orrs	r3, r2
 8003c18:	604b      	str	r3, [r1, #4]
 8003c1a:	f000 f821 	bl	8003c60 <HAL_RCC_GetSysClockFreq>
 8003c1e:	4602      	mov	r2, r0
 8003c20:	4b0b      	ldr	r3, [pc, #44]	@ (8003c50 <HAL_RCC_ClockConfig+0x1c4>)
 8003c22:	685b      	ldr	r3, [r3, #4]
 8003c24:	091b      	lsrs	r3, r3, #4
 8003c26:	f003 030f 	and.w	r3, r3, #15
 8003c2a:	490a      	ldr	r1, [pc, #40]	@ (8003c54 <HAL_RCC_ClockConfig+0x1c8>)
 8003c2c:	5ccb      	ldrb	r3, [r1, r3]
 8003c2e:	fa22 f303 	lsr.w	r3, r2, r3
 8003c32:	4a09      	ldr	r2, [pc, #36]	@ (8003c58 <HAL_RCC_ClockConfig+0x1cc>)
 8003c34:	6013      	str	r3, [r2, #0]
 8003c36:	4b09      	ldr	r3, [pc, #36]	@ (8003c5c <HAL_RCC_ClockConfig+0x1d0>)
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	4618      	mov	r0, r3
 8003c3c:	f7fc fffe 	bl	8000c3c <HAL_InitTick>
 8003c40:	2300      	movs	r3, #0
 8003c42:	4618      	mov	r0, r3
 8003c44:	3710      	adds	r7, #16
 8003c46:	46bd      	mov	sp, r7
 8003c48:	bd80      	pop	{r7, pc}
 8003c4a:	bf00      	nop
 8003c4c:	40022000 	.word	0x40022000
 8003c50:	40021000 	.word	0x40021000
 8003c54:	08008410 	.word	0x08008410
 8003c58:	20000004 	.word	0x20000004
 8003c5c:	20000008 	.word	0x20000008

08003c60 <HAL_RCC_GetSysClockFreq>:
 8003c60:	b480      	push	{r7}
 8003c62:	b087      	sub	sp, #28
 8003c64:	af00      	add	r7, sp, #0
 8003c66:	2300      	movs	r3, #0
 8003c68:	60fb      	str	r3, [r7, #12]
 8003c6a:	2300      	movs	r3, #0
 8003c6c:	60bb      	str	r3, [r7, #8]
 8003c6e:	2300      	movs	r3, #0
 8003c70:	617b      	str	r3, [r7, #20]
 8003c72:	2300      	movs	r3, #0
 8003c74:	607b      	str	r3, [r7, #4]
 8003c76:	2300      	movs	r3, #0
 8003c78:	613b      	str	r3, [r7, #16]
 8003c7a:	4b1e      	ldr	r3, [pc, #120]	@ (8003cf4 <HAL_RCC_GetSysClockFreq+0x94>)
 8003c7c:	685b      	ldr	r3, [r3, #4]
 8003c7e:	60fb      	str	r3, [r7, #12]
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	f003 030c 	and.w	r3, r3, #12
 8003c86:	2b04      	cmp	r3, #4
 8003c88:	d002      	beq.n	8003c90 <HAL_RCC_GetSysClockFreq+0x30>
 8003c8a:	2b08      	cmp	r3, #8
 8003c8c:	d003      	beq.n	8003c96 <HAL_RCC_GetSysClockFreq+0x36>
 8003c8e:	e027      	b.n	8003ce0 <HAL_RCC_GetSysClockFreq+0x80>
 8003c90:	4b19      	ldr	r3, [pc, #100]	@ (8003cf8 <HAL_RCC_GetSysClockFreq+0x98>)
 8003c92:	613b      	str	r3, [r7, #16]
 8003c94:	e027      	b.n	8003ce6 <HAL_RCC_GetSysClockFreq+0x86>
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	0c9b      	lsrs	r3, r3, #18
 8003c9a:	f003 030f 	and.w	r3, r3, #15
 8003c9e:	4a17      	ldr	r2, [pc, #92]	@ (8003cfc <HAL_RCC_GetSysClockFreq+0x9c>)
 8003ca0:	5cd3      	ldrb	r3, [r2, r3]
 8003ca2:	607b      	str	r3, [r7, #4]
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	d010      	beq.n	8003cd0 <HAL_RCC_GetSysClockFreq+0x70>
 8003cae:	4b11      	ldr	r3, [pc, #68]	@ (8003cf4 <HAL_RCC_GetSysClockFreq+0x94>)
 8003cb0:	685b      	ldr	r3, [r3, #4]
 8003cb2:	0c5b      	lsrs	r3, r3, #17
 8003cb4:	f003 0301 	and.w	r3, r3, #1
 8003cb8:	4a11      	ldr	r2, [pc, #68]	@ (8003d00 <HAL_RCC_GetSysClockFreq+0xa0>)
 8003cba:	5cd3      	ldrb	r3, [r2, r3]
 8003cbc:	60bb      	str	r3, [r7, #8]
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	4a0d      	ldr	r2, [pc, #52]	@ (8003cf8 <HAL_RCC_GetSysClockFreq+0x98>)
 8003cc2:	fb03 f202 	mul.w	r2, r3, r2
 8003cc6:	68bb      	ldr	r3, [r7, #8]
 8003cc8:	fbb2 f3f3 	udiv	r3, r2, r3
 8003ccc:	617b      	str	r3, [r7, #20]
 8003cce:	e004      	b.n	8003cda <HAL_RCC_GetSysClockFreq+0x7a>
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	4a0c      	ldr	r2, [pc, #48]	@ (8003d04 <HAL_RCC_GetSysClockFreq+0xa4>)
 8003cd4:	fb02 f303 	mul.w	r3, r2, r3
 8003cd8:	617b      	str	r3, [r7, #20]
 8003cda:	697b      	ldr	r3, [r7, #20]
 8003cdc:	613b      	str	r3, [r7, #16]
 8003cde:	e002      	b.n	8003ce6 <HAL_RCC_GetSysClockFreq+0x86>
 8003ce0:	4b05      	ldr	r3, [pc, #20]	@ (8003cf8 <HAL_RCC_GetSysClockFreq+0x98>)
 8003ce2:	613b      	str	r3, [r7, #16]
 8003ce4:	bf00      	nop
 8003ce6:	693b      	ldr	r3, [r7, #16]
 8003ce8:	4618      	mov	r0, r3
 8003cea:	371c      	adds	r7, #28
 8003cec:	46bd      	mov	sp, r7
 8003cee:	bc80      	pop	{r7}
 8003cf0:	4770      	bx	lr
 8003cf2:	bf00      	nop
 8003cf4:	40021000 	.word	0x40021000
 8003cf8:	007a1200 	.word	0x007a1200
 8003cfc:	08008428 	.word	0x08008428
 8003d00:	08008438 	.word	0x08008438
 8003d04:	003d0900 	.word	0x003d0900

08003d08 <HAL_RCC_GetHCLKFreq>:
 8003d08:	b480      	push	{r7}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4b02      	ldr	r3, [pc, #8]	@ (8003d18 <HAL_RCC_GetHCLKFreq+0x10>)
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	4618      	mov	r0, r3
 8003d12:	46bd      	mov	sp, r7
 8003d14:	bc80      	pop	{r7}
 8003d16:	4770      	bx	lr
 8003d18:	20000004 	.word	0x20000004

08003d1c <HAL_RCC_GetPCLK2Freq>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	f7ff fff2 	bl	8003d08 <HAL_RCC_GetHCLKFreq>
 8003d24:	4602      	mov	r2, r0
 8003d26:	4b05      	ldr	r3, [pc, #20]	@ (8003d3c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003d28:	685b      	ldr	r3, [r3, #4]
 8003d2a:	0adb      	lsrs	r3, r3, #11
 8003d2c:	f003 0307 	and.w	r3, r3, #7
 8003d30:	4903      	ldr	r1, [pc, #12]	@ (8003d40 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003d32:	5ccb      	ldrb	r3, [r1, r3]
 8003d34:	fa22 f303 	lsr.w	r3, r2, r3
 8003d38:	4618      	mov	r0, r3
 8003d3a:	bd80      	pop	{r7, pc}
 8003d3c:	40021000 	.word	0x40021000
 8003d40:	08008420 	.word	0x08008420

08003d44 <RCC_Delay>:
 8003d44:	b480      	push	{r7}
 8003d46:	b085      	sub	sp, #20
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	6078      	str	r0, [r7, #4]
 8003d4c:	4b0a      	ldr	r3, [pc, #40]	@ (8003d78 <RCC_Delay+0x34>)
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	4a0a      	ldr	r2, [pc, #40]	@ (8003d7c <RCC_Delay+0x38>)
 8003d52:	fba2 2303 	umull	r2, r3, r2, r3
 8003d56:	0a5b      	lsrs	r3, r3, #9
 8003d58:	687a      	ldr	r2, [r7, #4]
 8003d5a:	fb02 f303 	mul.w	r3, r2, r3
 8003d5e:	60fb      	str	r3, [r7, #12]
 8003d60:	bf00      	nop
 8003d62:	68fb      	ldr	r3, [r7, #12]
 8003d64:	1e5a      	subs	r2, r3, #1
 8003d66:	60fa      	str	r2, [r7, #12]
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d1f9      	bne.n	8003d60 <RCC_Delay+0x1c>
 8003d6c:	bf00      	nop
 8003d6e:	bf00      	nop
 8003d70:	3714      	adds	r7, #20
 8003d72:	46bd      	mov	sp, r7
 8003d74:	bc80      	pop	{r7}
 8003d76:	4770      	bx	lr
 8003d78:	20000004 	.word	0x20000004
 8003d7c:	10624dd3 	.word	0x10624dd3

08003d80 <HAL_RCCEx_PeriphCLKConfig>:
 8003d80:	b580      	push	{r7, lr}
 8003d82:	b086      	sub	sp, #24
 8003d84:	af00      	add	r7, sp, #0
 8003d86:	6078      	str	r0, [r7, #4]
 8003d88:	2300      	movs	r3, #0
 8003d8a:	613b      	str	r3, [r7, #16]
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	60fb      	str	r3, [r7, #12]
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	f003 0301 	and.w	r3, r3, #1
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d07d      	beq.n	8003e98 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003d9c:	2300      	movs	r3, #0
 8003d9e:	75fb      	strb	r3, [r7, #23]
 8003da0:	4b4f      	ldr	r3, [pc, #316]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003da2:	69db      	ldr	r3, [r3, #28]
 8003da4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003da8:	2b00      	cmp	r3, #0
 8003daa:	d10d      	bne.n	8003dc8 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8003dac:	4b4c      	ldr	r3, [pc, #304]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003dae:	69db      	ldr	r3, [r3, #28]
 8003db0:	4a4b      	ldr	r2, [pc, #300]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003db2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003db6:	61d3      	str	r3, [r2, #28]
 8003db8:	4b49      	ldr	r3, [pc, #292]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003dba:	69db      	ldr	r3, [r3, #28]
 8003dbc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003dc0:	60bb      	str	r3, [r7, #8]
 8003dc2:	68bb      	ldr	r3, [r7, #8]
 8003dc4:	2301      	movs	r3, #1
 8003dc6:	75fb      	strb	r3, [r7, #23]
 8003dc8:	4b46      	ldr	r3, [pc, #280]	@ (8003ee4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	d118      	bne.n	8003e06 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8003dd4:	4b43      	ldr	r3, [pc, #268]	@ (8003ee4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003dd6:	681b      	ldr	r3, [r3, #0]
 8003dd8:	4a42      	ldr	r2, [pc, #264]	@ (8003ee4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003dda:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003dde:	6013      	str	r3, [r2, #0]
 8003de0:	f7fc ff6e 	bl	8000cc0 <HAL_GetTick>
 8003de4:	6138      	str	r0, [r7, #16]
 8003de6:	e008      	b.n	8003dfa <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003de8:	f7fc ff6a 	bl	8000cc0 <HAL_GetTick>
 8003dec:	4602      	mov	r2, r0
 8003dee:	693b      	ldr	r3, [r7, #16]
 8003df0:	1ad3      	subs	r3, r2, r3
 8003df2:	2b64      	cmp	r3, #100	@ 0x64
 8003df4:	d901      	bls.n	8003dfa <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8003df6:	2303      	movs	r3, #3
 8003df8:	e06d      	b.n	8003ed6 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8003dfa:	4b3a      	ldr	r3, [pc, #232]	@ (8003ee4 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003e02:	2b00      	cmp	r3, #0
 8003e04:	d0f0      	beq.n	8003de8 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8003e06:	4b36      	ldr	r3, [pc, #216]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e08:	6a1b      	ldr	r3, [r3, #32]
 8003e0a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e0e:	60fb      	str	r3, [r7, #12]
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d02e      	beq.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	685b      	ldr	r3, [r3, #4]
 8003e1a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003e1e:	68fa      	ldr	r2, [r7, #12]
 8003e20:	429a      	cmp	r2, r3
 8003e22:	d027      	beq.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003e24:	4b2e      	ldr	r3, [pc, #184]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e26:	6a1b      	ldr	r3, [r3, #32]
 8003e28:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003e2c:	60fb      	str	r3, [r7, #12]
 8003e2e:	4b2e      	ldr	r3, [pc, #184]	@ (8003ee8 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003e30:	2201      	movs	r2, #1
 8003e32:	601a      	str	r2, [r3, #0]
 8003e34:	4b2c      	ldr	r3, [pc, #176]	@ (8003ee8 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8003e36:	2200      	movs	r2, #0
 8003e38:	601a      	str	r2, [r3, #0]
 8003e3a:	4a29      	ldr	r2, [pc, #164]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e3c:	68fb      	ldr	r3, [r7, #12]
 8003e3e:	6213      	str	r3, [r2, #32]
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	f003 0301 	and.w	r3, r3, #1
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d014      	beq.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003e4a:	f7fc ff39 	bl	8000cc0 <HAL_GetTick>
 8003e4e:	6138      	str	r0, [r7, #16]
 8003e50:	e00a      	b.n	8003e68 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8003e52:	f7fc ff35 	bl	8000cc0 <HAL_GetTick>
 8003e56:	4602      	mov	r2, r0
 8003e58:	693b      	ldr	r3, [r7, #16]
 8003e5a:	1ad3      	subs	r3, r2, r3
 8003e5c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003e60:	4293      	cmp	r3, r2
 8003e62:	d901      	bls.n	8003e68 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8003e64:	2303      	movs	r3, #3
 8003e66:	e036      	b.n	8003ed6 <HAL_RCCEx_PeriphCLKConfig+0x156>
 8003e68:	4b1d      	ldr	r3, [pc, #116]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e6a:	6a1b      	ldr	r3, [r3, #32]
 8003e6c:	f003 0302 	and.w	r3, r3, #2
 8003e70:	2b00      	cmp	r3, #0
 8003e72:	d0ee      	beq.n	8003e52 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8003e74:	4b1a      	ldr	r3, [pc, #104]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e76:	6a1b      	ldr	r3, [r3, #32]
 8003e78:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	685b      	ldr	r3, [r3, #4]
 8003e80:	4917      	ldr	r1, [pc, #92]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e82:	4313      	orrs	r3, r2
 8003e84:	620b      	str	r3, [r1, #32]
 8003e86:	7dfb      	ldrb	r3, [r7, #23]
 8003e88:	2b01      	cmp	r3, #1
 8003e8a:	d105      	bne.n	8003e98 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8003e8c:	4b14      	ldr	r3, [pc, #80]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e8e:	69db      	ldr	r3, [r3, #28]
 8003e90:	4a13      	ldr	r2, [pc, #76]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003e92:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8003e96:	61d3      	str	r3, [r2, #28]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	f003 0302 	and.w	r3, r3, #2
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d008      	beq.n	8003eb6 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8003ea4:	4b0e      	ldr	r3, [pc, #56]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	689b      	ldr	r3, [r3, #8]
 8003eb0:	490b      	ldr	r1, [pc, #44]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003eb2:	4313      	orrs	r3, r2
 8003eb4:	604b      	str	r3, [r1, #4]
 8003eb6:	687b      	ldr	r3, [r7, #4]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f003 0310 	and.w	r3, r3, #16
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d008      	beq.n	8003ed4 <HAL_RCCEx_PeriphCLKConfig+0x154>
 8003ec2:	4b07      	ldr	r3, [pc, #28]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003ec4:	685b      	ldr	r3, [r3, #4]
 8003ec6:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	68db      	ldr	r3, [r3, #12]
 8003ece:	4904      	ldr	r1, [pc, #16]	@ (8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8003ed0:	4313      	orrs	r3, r2
 8003ed2:	604b      	str	r3, [r1, #4]
 8003ed4:	2300      	movs	r3, #0
 8003ed6:	4618      	mov	r0, r3
 8003ed8:	3718      	adds	r7, #24
 8003eda:	46bd      	mov	sp, r7
 8003edc:	bd80      	pop	{r7, pc}
 8003ede:	bf00      	nop
 8003ee0:	40021000 	.word	0x40021000
 8003ee4:	40007000 	.word	0x40007000
 8003ee8:	42420440 	.word	0x42420440

08003eec <HAL_RCCEx_GetPeriphCLKFreq>:
 8003eec:	b580      	push	{r7, lr}
 8003eee:	b088      	sub	sp, #32
 8003ef0:	af00      	add	r7, sp, #0
 8003ef2:	6078      	str	r0, [r7, #4]
 8003ef4:	2300      	movs	r3, #0
 8003ef6:	617b      	str	r3, [r7, #20]
 8003ef8:	2300      	movs	r3, #0
 8003efa:	61fb      	str	r3, [r7, #28]
 8003efc:	2300      	movs	r3, #0
 8003efe:	613b      	str	r3, [r7, #16]
 8003f00:	2300      	movs	r3, #0
 8003f02:	60fb      	str	r3, [r7, #12]
 8003f04:	2300      	movs	r3, #0
 8003f06:	61bb      	str	r3, [r7, #24]
 8003f08:	687b      	ldr	r3, [r7, #4]
 8003f0a:	2b10      	cmp	r3, #16
 8003f0c:	d00a      	beq.n	8003f24 <HAL_RCCEx_GetPeriphCLKFreq+0x38>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	2b10      	cmp	r3, #16
 8003f12:	f200 808a 	bhi.w	800402a <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	2b01      	cmp	r3, #1
 8003f1a:	d045      	beq.n	8003fa8 <HAL_RCCEx_GetPeriphCLKFreq+0xbc>
 8003f1c:	687b      	ldr	r3, [r7, #4]
 8003f1e:	2b02      	cmp	r3, #2
 8003f20:	d075      	beq.n	800400e <HAL_RCCEx_GetPeriphCLKFreq+0x122>
 8003f22:	e082      	b.n	800402a <HAL_RCCEx_GetPeriphCLKFreq+0x13e>
 8003f24:	4b46      	ldr	r3, [pc, #280]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003f26:	685b      	ldr	r3, [r3, #4]
 8003f28:	60fb      	str	r3, [r7, #12]
 8003f2a:	4b45      	ldr	r3, [pc, #276]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d07b      	beq.n	800402e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003f36:	68fb      	ldr	r3, [r7, #12]
 8003f38:	0c9b      	lsrs	r3, r3, #18
 8003f3a:	f003 030f 	and.w	r3, r3, #15
 8003f3e:	4a41      	ldr	r2, [pc, #260]	@ (8004044 <HAL_RCCEx_GetPeriphCLKFreq+0x158>)
 8003f40:	5cd3      	ldrb	r3, [r2, r3]
 8003f42:	613b      	str	r3, [r7, #16]
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d015      	beq.n	8003f7a <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
 8003f4e:	4b3c      	ldr	r3, [pc, #240]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003f50:	685b      	ldr	r3, [r3, #4]
 8003f52:	0c5b      	lsrs	r3, r3, #17
 8003f54:	f003 0301 	and.w	r3, r3, #1
 8003f58:	4a3b      	ldr	r2, [pc, #236]	@ (8004048 <HAL_RCCEx_GetPeriphCLKFreq+0x15c>)
 8003f5a:	5cd3      	ldrb	r3, [r2, r3]
 8003f5c:	617b      	str	r3, [r7, #20]
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d00d      	beq.n	8003f84 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003f68:	4a38      	ldr	r2, [pc, #224]	@ (800404c <HAL_RCCEx_GetPeriphCLKFreq+0x160>)
 8003f6a:	697b      	ldr	r3, [r7, #20]
 8003f6c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003f70:	693b      	ldr	r3, [r7, #16]
 8003f72:	fb02 f303 	mul.w	r3, r2, r3
 8003f76:	61fb      	str	r3, [r7, #28]
 8003f78:	e004      	b.n	8003f84 <HAL_RCCEx_GetPeriphCLKFreq+0x98>
 8003f7a:	693b      	ldr	r3, [r7, #16]
 8003f7c:	4a34      	ldr	r2, [pc, #208]	@ (8004050 <HAL_RCCEx_GetPeriphCLKFreq+0x164>)
 8003f7e:	fb02 f303 	mul.w	r3, r2, r3
 8003f82:	61fb      	str	r3, [r7, #28]
 8003f84:	4b2e      	ldr	r3, [pc, #184]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003f86:	685b      	ldr	r3, [r3, #4]
 8003f88:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003f8c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003f90:	d102      	bne.n	8003f98 <HAL_RCCEx_GetPeriphCLKFreq+0xac>
 8003f92:	69fb      	ldr	r3, [r7, #28]
 8003f94:	61bb      	str	r3, [r7, #24]
 8003f96:	e04a      	b.n	800402e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003f98:	69fb      	ldr	r3, [r7, #28]
 8003f9a:	005b      	lsls	r3, r3, #1
 8003f9c:	4a2d      	ldr	r2, [pc, #180]	@ (8004054 <HAL_RCCEx_GetPeriphCLKFreq+0x168>)
 8003f9e:	fba2 2303 	umull	r2, r3, r2, r3
 8003fa2:	085b      	lsrs	r3, r3, #1
 8003fa4:	61bb      	str	r3, [r7, #24]
 8003fa6:	e042      	b.n	800402e <HAL_RCCEx_GetPeriphCLKFreq+0x142>
 8003fa8:	4b25      	ldr	r3, [pc, #148]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003faa:	6a1b      	ldr	r3, [r3, #32]
 8003fac:	60fb      	str	r3, [r7, #12]
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003fb4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003fb8:	d108      	bne.n	8003fcc <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003fba:	68fb      	ldr	r3, [r7, #12]
 8003fbc:	f003 0302 	and.w	r3, r3, #2
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d003      	beq.n	8003fcc <HAL_RCCEx_GetPeriphCLKFreq+0xe0>
 8003fc4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8003fc8:	61bb      	str	r3, [r7, #24]
 8003fca:	e01f      	b.n	800400c <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003fcc:	68fb      	ldr	r3, [r7, #12]
 8003fce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003fd2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003fd6:	d109      	bne.n	8003fec <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003fd8:	4b19      	ldr	r3, [pc, #100]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003fda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003fdc:	f003 0302 	and.w	r3, r3, #2
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	d003      	beq.n	8003fec <HAL_RCCEx_GetPeriphCLKFreq+0x100>
 8003fe4:	f649 4340 	movw	r3, #40000	@ 0x9c40
 8003fe8:	61bb      	str	r3, [r7, #24]
 8003fea:	e00f      	b.n	800400c <HAL_RCCEx_GetPeriphCLKFreq+0x120>
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8003ff2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8003ff6:	d11c      	bne.n	8004032 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8003ff8:	4b11      	ldr	r3, [pc, #68]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004000:	2b00      	cmp	r3, #0
 8004002:	d016      	beq.n	8004032 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 8004004:	f24f 4324 	movw	r3, #62500	@ 0xf424
 8004008:	61bb      	str	r3, [r7, #24]
 800400a:	e012      	b.n	8004032 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800400c:	e011      	b.n	8004032 <HAL_RCCEx_GetPeriphCLKFreq+0x146>
 800400e:	f7ff fe85 	bl	8003d1c <HAL_RCC_GetPCLK2Freq>
 8004012:	4602      	mov	r2, r0
 8004014:	4b0a      	ldr	r3, [pc, #40]	@ (8004040 <HAL_RCCEx_GetPeriphCLKFreq+0x154>)
 8004016:	685b      	ldr	r3, [r3, #4]
 8004018:	0b9b      	lsrs	r3, r3, #14
 800401a:	f003 0303 	and.w	r3, r3, #3
 800401e:	3301      	adds	r3, #1
 8004020:	005b      	lsls	r3, r3, #1
 8004022:	fbb2 f3f3 	udiv	r3, r2, r3
 8004026:	61bb      	str	r3, [r7, #24]
 8004028:	e004      	b.n	8004034 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 800402a:	bf00      	nop
 800402c:	e002      	b.n	8004034 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 800402e:	bf00      	nop
 8004030:	e000      	b.n	8004034 <HAL_RCCEx_GetPeriphCLKFreq+0x148>
 8004032:	bf00      	nop
 8004034:	69bb      	ldr	r3, [r7, #24]
 8004036:	4618      	mov	r0, r3
 8004038:	3720      	adds	r7, #32
 800403a:	46bd      	mov	sp, r7
 800403c:	bd80      	pop	{r7, pc}
 800403e:	bf00      	nop
 8004040:	40021000 	.word	0x40021000
 8004044:	0800843c 	.word	0x0800843c
 8004048:	0800844c 	.word	0x0800844c
 800404c:	007a1200 	.word	0x007a1200
 8004050:	003d0900 	.word	0x003d0900
 8004054:	aaaaaaab 	.word	0xaaaaaaab

08004058 <USB_CoreInit>:
 8004058:	b480      	push	{r7}
 800405a:	b085      	sub	sp, #20
 800405c:	af00      	add	r7, sp, #0
 800405e:	60f8      	str	r0, [r7, #12]
 8004060:	4638      	mov	r0, r7
 8004062:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8004066:	2300      	movs	r3, #0
 8004068:	4618      	mov	r0, r3
 800406a:	3714      	adds	r7, #20
 800406c:	46bd      	mov	sp, r7
 800406e:	bc80      	pop	{r7}
 8004070:	4770      	bx	lr

08004072 <USB_EnableGlobalInt>:
 8004072:	b480      	push	{r7}
 8004074:	b085      	sub	sp, #20
 8004076:	af00      	add	r7, sp, #0
 8004078:	6078      	str	r0, [r7, #4]
 800407a:	687b      	ldr	r3, [r7, #4]
 800407c:	2200      	movs	r2, #0
 800407e:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8004082:	f44f 433f 	mov.w	r3, #48896	@ 0xbf00
 8004086:	60fb      	str	r3, [r7, #12]
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	b29a      	uxth	r2, r3
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8004092:	2300      	movs	r3, #0
 8004094:	4618      	mov	r0, r3
 8004096:	3714      	adds	r7, #20
 8004098:	46bd      	mov	sp, r7
 800409a:	bc80      	pop	{r7}
 800409c:	4770      	bx	lr

0800409e <USB_DisableGlobalInt>:
 800409e:	b480      	push	{r7}
 80040a0:	b085      	sub	sp, #20
 80040a2:	af00      	add	r7, sp, #0
 80040a4:	6078      	str	r0, [r7, #4]
 80040a6:	f44f 433f 	mov.w	r3, #48896	@ 0xbf00
 80040aa:	60fb      	str	r3, [r7, #12]
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	f8b3 3040 	ldrh.w	r3, [r3, #64]	@ 0x40
 80040b2:	b29a      	uxth	r2, r3
 80040b4:	68fb      	ldr	r3, [r7, #12]
 80040b6:	b29b      	uxth	r3, r3
 80040b8:	43db      	mvns	r3, r3
 80040ba:	b29b      	uxth	r3, r3
 80040bc:	4013      	ands	r3, r2
 80040be:	b29a      	uxth	r2, r3
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 80040c6:	2300      	movs	r3, #0
 80040c8:	4618      	mov	r0, r3
 80040ca:	3714      	adds	r7, #20
 80040cc:	46bd      	mov	sp, r7
 80040ce:	bc80      	pop	{r7}
 80040d0:	4770      	bx	lr

080040d2 <USB_SetCurrentMode>:
 80040d2:	b480      	push	{r7}
 80040d4:	b083      	sub	sp, #12
 80040d6:	af00      	add	r7, sp, #0
 80040d8:	6078      	str	r0, [r7, #4]
 80040da:	460b      	mov	r3, r1
 80040dc:	70fb      	strb	r3, [r7, #3]
 80040de:	2300      	movs	r3, #0
 80040e0:	4618      	mov	r0, r3
 80040e2:	370c      	adds	r7, #12
 80040e4:	46bd      	mov	sp, r7
 80040e6:	bc80      	pop	{r7}
 80040e8:	4770      	bx	lr

080040ea <USB_DevInit>:
 80040ea:	b480      	push	{r7}
 80040ec:	b085      	sub	sp, #20
 80040ee:	af00      	add	r7, sp, #0
 80040f0:	60f8      	str	r0, [r7, #12]
 80040f2:	4638      	mov	r0, r7
 80040f4:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80040f8:	68fb      	ldr	r3, [r7, #12]
 80040fa:	2201      	movs	r2, #1
 80040fc:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8004100:	68fb      	ldr	r3, [r7, #12]
 8004102:	2200      	movs	r2, #0
 8004104:	f8a3 2040 	strh.w	r2, [r3, #64]	@ 0x40
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	2200      	movs	r2, #0
 800410c:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	2200      	movs	r2, #0
 8004114:	f8a3 2050 	strh.w	r2, [r3, #80]	@ 0x50
 8004118:	2300      	movs	r3, #0
 800411a:	4618      	mov	r0, r3
 800411c:	3714      	adds	r7, #20
 800411e:	46bd      	mov	sp, r7
 8004120:	bc80      	pop	{r7}
 8004122:	4770      	bx	lr

08004124 <USB_ActivateEndpoint>:
 8004124:	b480      	push	{r7}
 8004126:	b09d      	sub	sp, #116	@ 0x74
 8004128:	af00      	add	r7, sp, #0
 800412a:	6078      	str	r0, [r7, #4]
 800412c:	6039      	str	r1, [r7, #0]
 800412e:	2300      	movs	r3, #0
 8004130:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 8004134:	687a      	ldr	r2, [r7, #4]
 8004136:	683b      	ldr	r3, [r7, #0]
 8004138:	781b      	ldrb	r3, [r3, #0]
 800413a:	009b      	lsls	r3, r3, #2
 800413c:	4413      	add	r3, r2
 800413e:	881b      	ldrh	r3, [r3, #0]
 8004140:	b29b      	uxth	r3, r3
 8004142:	f423 43ec 	bic.w	r3, r3, #30208	@ 0x7600
 8004146:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800414a:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800414e:	683b      	ldr	r3, [r7, #0]
 8004150:	78db      	ldrb	r3, [r3, #3]
 8004152:	2b03      	cmp	r3, #3
 8004154:	d81f      	bhi.n	8004196 <USB_ActivateEndpoint+0x72>
 8004156:	a201      	add	r2, pc, #4	@ (adr r2, 800415c <USB_ActivateEndpoint+0x38>)
 8004158:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800415c:	0800416d 	.word	0x0800416d
 8004160:	08004189 	.word	0x08004189
 8004164:	0800419f 	.word	0x0800419f
 8004168:	0800417b 	.word	0x0800417b
 800416c:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 8004170:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004174:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8004178:	e012      	b.n	80041a0 <USB_ActivateEndpoint+0x7c>
 800417a:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800417e:	f443 63c0 	orr.w	r3, r3, #1536	@ 0x600
 8004182:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8004186:	e00b      	b.n	80041a0 <USB_ActivateEndpoint+0x7c>
 8004188:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800418c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8004190:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 8004194:	e004      	b.n	80041a0 <USB_ActivateEndpoint+0x7c>
 8004196:	2301      	movs	r3, #1
 8004198:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 800419c:	e000      	b.n	80041a0 <USB_ActivateEndpoint+0x7c>
 800419e:	bf00      	nop
 80041a0:	687a      	ldr	r2, [r7, #4]
 80041a2:	683b      	ldr	r3, [r7, #0]
 80041a4:	781b      	ldrb	r3, [r3, #0]
 80041a6:	009b      	lsls	r3, r3, #2
 80041a8:	441a      	add	r2, r3
 80041aa:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 80041ae:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80041b2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80041b6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80041ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80041be:	b29b      	uxth	r3, r3
 80041c0:	8013      	strh	r3, [r2, #0]
 80041c2:	687a      	ldr	r2, [r7, #4]
 80041c4:	683b      	ldr	r3, [r7, #0]
 80041c6:	781b      	ldrb	r3, [r3, #0]
 80041c8:	009b      	lsls	r3, r3, #2
 80041ca:	4413      	add	r3, r2
 80041cc:	881b      	ldrh	r3, [r3, #0]
 80041ce:	b29b      	uxth	r3, r3
 80041d0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80041d4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80041d8:	b29b      	uxth	r3, r3
 80041da:	683a      	ldr	r2, [r7, #0]
 80041dc:	7812      	ldrb	r2, [r2, #0]
 80041de:	4313      	orrs	r3, r2
 80041e0:	f8a7 3066 	strh.w	r3, [r7, #102]	@ 0x66
 80041e4:	687a      	ldr	r2, [r7, #4]
 80041e6:	683b      	ldr	r3, [r7, #0]
 80041e8:	781b      	ldrb	r3, [r3, #0]
 80041ea:	009b      	lsls	r3, r3, #2
 80041ec:	441a      	add	r2, r3
 80041ee:	f8b7 3066 	ldrh.w	r3, [r7, #102]	@ 0x66
 80041f2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80041f6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80041fa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80041fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004202:	b29b      	uxth	r3, r3
 8004204:	8013      	strh	r3, [r2, #0]
 8004206:	683b      	ldr	r3, [r7, #0]
 8004208:	7b1b      	ldrb	r3, [r3, #12]
 800420a:	2b00      	cmp	r3, #0
 800420c:	f040 8178 	bne.w	8004500 <USB_ActivateEndpoint+0x3dc>
 8004210:	683b      	ldr	r3, [r7, #0]
 8004212:	785b      	ldrb	r3, [r3, #1]
 8004214:	2b00      	cmp	r3, #0
 8004216:	f000 8084 	beq.w	8004322 <USB_ActivateEndpoint+0x1fe>
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	61bb      	str	r3, [r7, #24]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004224:	b29b      	uxth	r3, r3
 8004226:	461a      	mov	r2, r3
 8004228:	69bb      	ldr	r3, [r7, #24]
 800422a:	4413      	add	r3, r2
 800422c:	61bb      	str	r3, [r7, #24]
 800422e:	683b      	ldr	r3, [r7, #0]
 8004230:	781b      	ldrb	r3, [r3, #0]
 8004232:	011a      	lsls	r2, r3, #4
 8004234:	69bb      	ldr	r3, [r7, #24]
 8004236:	4413      	add	r3, r2
 8004238:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800423c:	617b      	str	r3, [r7, #20]
 800423e:	683b      	ldr	r3, [r7, #0]
 8004240:	88db      	ldrh	r3, [r3, #6]
 8004242:	085b      	lsrs	r3, r3, #1
 8004244:	b29b      	uxth	r3, r3
 8004246:	005b      	lsls	r3, r3, #1
 8004248:	b29a      	uxth	r2, r3
 800424a:	697b      	ldr	r3, [r7, #20]
 800424c:	801a      	strh	r2, [r3, #0]
 800424e:	687a      	ldr	r2, [r7, #4]
 8004250:	683b      	ldr	r3, [r7, #0]
 8004252:	781b      	ldrb	r3, [r3, #0]
 8004254:	009b      	lsls	r3, r3, #2
 8004256:	4413      	add	r3, r2
 8004258:	881b      	ldrh	r3, [r3, #0]
 800425a:	827b      	strh	r3, [r7, #18]
 800425c:	8a7b      	ldrh	r3, [r7, #18]
 800425e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004262:	2b00      	cmp	r3, #0
 8004264:	d01b      	beq.n	800429e <USB_ActivateEndpoint+0x17a>
 8004266:	687a      	ldr	r2, [r7, #4]
 8004268:	683b      	ldr	r3, [r7, #0]
 800426a:	781b      	ldrb	r3, [r3, #0]
 800426c:	009b      	lsls	r3, r3, #2
 800426e:	4413      	add	r3, r2
 8004270:	881b      	ldrh	r3, [r3, #0]
 8004272:	b29b      	uxth	r3, r3
 8004274:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004278:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800427c:	823b      	strh	r3, [r7, #16]
 800427e:	687a      	ldr	r2, [r7, #4]
 8004280:	683b      	ldr	r3, [r7, #0]
 8004282:	781b      	ldrb	r3, [r3, #0]
 8004284:	009b      	lsls	r3, r3, #2
 8004286:	441a      	add	r2, r3
 8004288:	8a3b      	ldrh	r3, [r7, #16]
 800428a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800428e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004292:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004296:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800429a:	b29b      	uxth	r3, r3
 800429c:	8013      	strh	r3, [r2, #0]
 800429e:	683b      	ldr	r3, [r7, #0]
 80042a0:	78db      	ldrb	r3, [r3, #3]
 80042a2:	2b01      	cmp	r3, #1
 80042a4:	d020      	beq.n	80042e8 <USB_ActivateEndpoint+0x1c4>
 80042a6:	687a      	ldr	r2, [r7, #4]
 80042a8:	683b      	ldr	r3, [r7, #0]
 80042aa:	781b      	ldrb	r3, [r3, #0]
 80042ac:	009b      	lsls	r3, r3, #2
 80042ae:	4413      	add	r3, r2
 80042b0:	881b      	ldrh	r3, [r3, #0]
 80042b2:	b29b      	uxth	r3, r3
 80042b4:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80042b8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80042bc:	81bb      	strh	r3, [r7, #12]
 80042be:	89bb      	ldrh	r3, [r7, #12]
 80042c0:	f083 0320 	eor.w	r3, r3, #32
 80042c4:	81bb      	strh	r3, [r7, #12]
 80042c6:	687a      	ldr	r2, [r7, #4]
 80042c8:	683b      	ldr	r3, [r7, #0]
 80042ca:	781b      	ldrb	r3, [r3, #0]
 80042cc:	009b      	lsls	r3, r3, #2
 80042ce:	441a      	add	r2, r3
 80042d0:	89bb      	ldrh	r3, [r7, #12]
 80042d2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80042d6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80042da:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80042de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80042e2:	b29b      	uxth	r3, r3
 80042e4:	8013      	strh	r3, [r2, #0]
 80042e6:	e2d5      	b.n	8004894 <USB_ActivateEndpoint+0x770>
 80042e8:	687a      	ldr	r2, [r7, #4]
 80042ea:	683b      	ldr	r3, [r7, #0]
 80042ec:	781b      	ldrb	r3, [r3, #0]
 80042ee:	009b      	lsls	r3, r3, #2
 80042f0:	4413      	add	r3, r2
 80042f2:	881b      	ldrh	r3, [r3, #0]
 80042f4:	b29b      	uxth	r3, r3
 80042f6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80042fa:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80042fe:	81fb      	strh	r3, [r7, #14]
 8004300:	687a      	ldr	r2, [r7, #4]
 8004302:	683b      	ldr	r3, [r7, #0]
 8004304:	781b      	ldrb	r3, [r3, #0]
 8004306:	009b      	lsls	r3, r3, #2
 8004308:	441a      	add	r2, r3
 800430a:	89fb      	ldrh	r3, [r7, #14]
 800430c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004310:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004314:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004318:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800431c:	b29b      	uxth	r3, r3
 800431e:	8013      	strh	r3, [r2, #0]
 8004320:	e2b8      	b.n	8004894 <USB_ActivateEndpoint+0x770>
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	633b      	str	r3, [r7, #48]	@ 0x30
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800432c:	b29b      	uxth	r3, r3
 800432e:	461a      	mov	r2, r3
 8004330:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004332:	4413      	add	r3, r2
 8004334:	633b      	str	r3, [r7, #48]	@ 0x30
 8004336:	683b      	ldr	r3, [r7, #0]
 8004338:	781b      	ldrb	r3, [r3, #0]
 800433a:	011a      	lsls	r2, r3, #4
 800433c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800433e:	4413      	add	r3, r2
 8004340:	f503 6381 	add.w	r3, r3, #1032	@ 0x408
 8004344:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004346:	683b      	ldr	r3, [r7, #0]
 8004348:	88db      	ldrh	r3, [r3, #6]
 800434a:	085b      	lsrs	r3, r3, #1
 800434c:	b29b      	uxth	r3, r3
 800434e:	005b      	lsls	r3, r3, #1
 8004350:	b29a      	uxth	r2, r3
 8004352:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004354:	801a      	strh	r2, [r3, #0]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	62bb      	str	r3, [r7, #40]	@ 0x28
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004360:	b29b      	uxth	r3, r3
 8004362:	461a      	mov	r2, r3
 8004364:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004366:	4413      	add	r3, r2
 8004368:	62bb      	str	r3, [r7, #40]	@ 0x28
 800436a:	683b      	ldr	r3, [r7, #0]
 800436c:	781b      	ldrb	r3, [r3, #0]
 800436e:	011a      	lsls	r2, r3, #4
 8004370:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004372:	4413      	add	r3, r2
 8004374:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004378:	627b      	str	r3, [r7, #36]	@ 0x24
 800437a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800437c:	881b      	ldrh	r3, [r3, #0]
 800437e:	b29b      	uxth	r3, r3
 8004380:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004384:	b29a      	uxth	r2, r3
 8004386:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004388:	801a      	strh	r2, [r3, #0]
 800438a:	683b      	ldr	r3, [r7, #0]
 800438c:	691b      	ldr	r3, [r3, #16]
 800438e:	2b3e      	cmp	r3, #62	@ 0x3e
 8004390:	d91d      	bls.n	80043ce <USB_ActivateEndpoint+0x2aa>
 8004392:	683b      	ldr	r3, [r7, #0]
 8004394:	691b      	ldr	r3, [r3, #16]
 8004396:	095b      	lsrs	r3, r3, #5
 8004398:	66bb      	str	r3, [r7, #104]	@ 0x68
 800439a:	683b      	ldr	r3, [r7, #0]
 800439c:	691b      	ldr	r3, [r3, #16]
 800439e:	f003 031f 	and.w	r3, r3, #31
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d102      	bne.n	80043ac <USB_ActivateEndpoint+0x288>
 80043a6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80043a8:	3b01      	subs	r3, #1
 80043aa:	66bb      	str	r3, [r7, #104]	@ 0x68
 80043ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043ae:	881b      	ldrh	r3, [r3, #0]
 80043b0:	b29a      	uxth	r2, r3
 80043b2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80043b4:	b29b      	uxth	r3, r3
 80043b6:	029b      	lsls	r3, r3, #10
 80043b8:	b29b      	uxth	r3, r3
 80043ba:	4313      	orrs	r3, r2
 80043bc:	b29b      	uxth	r3, r3
 80043be:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80043c2:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80043c6:	b29a      	uxth	r2, r3
 80043c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043ca:	801a      	strh	r2, [r3, #0]
 80043cc:	e026      	b.n	800441c <USB_ActivateEndpoint+0x2f8>
 80043ce:	683b      	ldr	r3, [r7, #0]
 80043d0:	691b      	ldr	r3, [r3, #16]
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d10a      	bne.n	80043ec <USB_ActivateEndpoint+0x2c8>
 80043d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043d8:	881b      	ldrh	r3, [r3, #0]
 80043da:	b29b      	uxth	r3, r3
 80043dc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80043e0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80043e4:	b29a      	uxth	r2, r3
 80043e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043e8:	801a      	strh	r2, [r3, #0]
 80043ea:	e017      	b.n	800441c <USB_ActivateEndpoint+0x2f8>
 80043ec:	683b      	ldr	r3, [r7, #0]
 80043ee:	691b      	ldr	r3, [r3, #16]
 80043f0:	085b      	lsrs	r3, r3, #1
 80043f2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80043f4:	683b      	ldr	r3, [r7, #0]
 80043f6:	691b      	ldr	r3, [r3, #16]
 80043f8:	f003 0301 	and.w	r3, r3, #1
 80043fc:	2b00      	cmp	r3, #0
 80043fe:	d002      	beq.n	8004406 <USB_ActivateEndpoint+0x2e2>
 8004400:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004402:	3301      	adds	r3, #1
 8004404:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004406:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004408:	881b      	ldrh	r3, [r3, #0]
 800440a:	b29a      	uxth	r2, r3
 800440c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800440e:	b29b      	uxth	r3, r3
 8004410:	029b      	lsls	r3, r3, #10
 8004412:	b29b      	uxth	r3, r3
 8004414:	4313      	orrs	r3, r2
 8004416:	b29a      	uxth	r2, r3
 8004418:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800441a:	801a      	strh	r2, [r3, #0]
 800441c:	687a      	ldr	r2, [r7, #4]
 800441e:	683b      	ldr	r3, [r7, #0]
 8004420:	781b      	ldrb	r3, [r3, #0]
 8004422:	009b      	lsls	r3, r3, #2
 8004424:	4413      	add	r3, r2
 8004426:	881b      	ldrh	r3, [r3, #0]
 8004428:	847b      	strh	r3, [r7, #34]	@ 0x22
 800442a:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800442c:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004430:	2b00      	cmp	r3, #0
 8004432:	d01b      	beq.n	800446c <USB_ActivateEndpoint+0x348>
 8004434:	687a      	ldr	r2, [r7, #4]
 8004436:	683b      	ldr	r3, [r7, #0]
 8004438:	781b      	ldrb	r3, [r3, #0]
 800443a:	009b      	lsls	r3, r3, #2
 800443c:	4413      	add	r3, r2
 800443e:	881b      	ldrh	r3, [r3, #0]
 8004440:	b29b      	uxth	r3, r3
 8004442:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004446:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800444a:	843b      	strh	r3, [r7, #32]
 800444c:	687a      	ldr	r2, [r7, #4]
 800444e:	683b      	ldr	r3, [r7, #0]
 8004450:	781b      	ldrb	r3, [r3, #0]
 8004452:	009b      	lsls	r3, r3, #2
 8004454:	441a      	add	r2, r3
 8004456:	8c3b      	ldrh	r3, [r7, #32]
 8004458:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800445c:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004460:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004464:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004468:	b29b      	uxth	r3, r3
 800446a:	8013      	strh	r3, [r2, #0]
 800446c:	683b      	ldr	r3, [r7, #0]
 800446e:	781b      	ldrb	r3, [r3, #0]
 8004470:	2b00      	cmp	r3, #0
 8004472:	d124      	bne.n	80044be <USB_ActivateEndpoint+0x39a>
 8004474:	687a      	ldr	r2, [r7, #4]
 8004476:	683b      	ldr	r3, [r7, #0]
 8004478:	781b      	ldrb	r3, [r3, #0]
 800447a:	009b      	lsls	r3, r3, #2
 800447c:	4413      	add	r3, r2
 800447e:	881b      	ldrh	r3, [r3, #0]
 8004480:	b29b      	uxth	r3, r3
 8004482:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004486:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800448a:	83bb      	strh	r3, [r7, #28]
 800448c:	8bbb      	ldrh	r3, [r7, #28]
 800448e:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8004492:	83bb      	strh	r3, [r7, #28]
 8004494:	8bbb      	ldrh	r3, [r7, #28]
 8004496:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 800449a:	83bb      	strh	r3, [r7, #28]
 800449c:	687a      	ldr	r2, [r7, #4]
 800449e:	683b      	ldr	r3, [r7, #0]
 80044a0:	781b      	ldrb	r3, [r3, #0]
 80044a2:	009b      	lsls	r3, r3, #2
 80044a4:	441a      	add	r2, r3
 80044a6:	8bbb      	ldrh	r3, [r7, #28]
 80044a8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80044ac:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80044b0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80044b4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80044b8:	b29b      	uxth	r3, r3
 80044ba:	8013      	strh	r3, [r2, #0]
 80044bc:	e1ea      	b.n	8004894 <USB_ActivateEndpoint+0x770>
 80044be:	687a      	ldr	r2, [r7, #4]
 80044c0:	683b      	ldr	r3, [r7, #0]
 80044c2:	781b      	ldrb	r3, [r3, #0]
 80044c4:	009b      	lsls	r3, r3, #2
 80044c6:	4413      	add	r3, r2
 80044c8:	881b      	ldrh	r3, [r3, #0]
 80044ca:	b29b      	uxth	r3, r3
 80044cc:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80044d0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80044d4:	83fb      	strh	r3, [r7, #30]
 80044d6:	8bfb      	ldrh	r3, [r7, #30]
 80044d8:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 80044dc:	83fb      	strh	r3, [r7, #30]
 80044de:	687a      	ldr	r2, [r7, #4]
 80044e0:	683b      	ldr	r3, [r7, #0]
 80044e2:	781b      	ldrb	r3, [r3, #0]
 80044e4:	009b      	lsls	r3, r3, #2
 80044e6:	441a      	add	r2, r3
 80044e8:	8bfb      	ldrh	r3, [r7, #30]
 80044ea:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80044ee:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80044f2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80044f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80044fa:	b29b      	uxth	r3, r3
 80044fc:	8013      	strh	r3, [r2, #0]
 80044fe:	e1c9      	b.n	8004894 <USB_ActivateEndpoint+0x770>
 8004500:	683b      	ldr	r3, [r7, #0]
 8004502:	78db      	ldrb	r3, [r3, #3]
 8004504:	2b02      	cmp	r3, #2
 8004506:	d11e      	bne.n	8004546 <USB_ActivateEndpoint+0x422>
 8004508:	687a      	ldr	r2, [r7, #4]
 800450a:	683b      	ldr	r3, [r7, #0]
 800450c:	781b      	ldrb	r3, [r3, #0]
 800450e:	009b      	lsls	r3, r3, #2
 8004510:	4413      	add	r3, r2
 8004512:	881b      	ldrh	r3, [r3, #0]
 8004514:	b29b      	uxth	r3, r3
 8004516:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800451a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800451e:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
 8004522:	687a      	ldr	r2, [r7, #4]
 8004524:	683b      	ldr	r3, [r7, #0]
 8004526:	781b      	ldrb	r3, [r3, #0]
 8004528:	009b      	lsls	r3, r3, #2
 800452a:	441a      	add	r2, r3
 800452c:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 8004530:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004534:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004538:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 800453c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004540:	b29b      	uxth	r3, r3
 8004542:	8013      	strh	r3, [r2, #0]
 8004544:	e01d      	b.n	8004582 <USB_ActivateEndpoint+0x45e>
 8004546:	687a      	ldr	r2, [r7, #4]
 8004548:	683b      	ldr	r3, [r7, #0]
 800454a:	781b      	ldrb	r3, [r3, #0]
 800454c:	009b      	lsls	r3, r3, #2
 800454e:	4413      	add	r3, r2
 8004550:	881b      	ldrh	r3, [r3, #0]
 8004552:	b29b      	uxth	r3, r3
 8004554:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 8004558:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800455c:	f8a7 3064 	strh.w	r3, [r7, #100]	@ 0x64
 8004560:	687a      	ldr	r2, [r7, #4]
 8004562:	683b      	ldr	r3, [r7, #0]
 8004564:	781b      	ldrb	r3, [r3, #0]
 8004566:	009b      	lsls	r3, r3, #2
 8004568:	441a      	add	r2, r3
 800456a:	f8b7 3064 	ldrh.w	r3, [r7, #100]	@ 0x64
 800456e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004572:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004576:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800457a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800457e:	b29b      	uxth	r3, r3
 8004580:	8013      	strh	r3, [r2, #0]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800458c:	b29b      	uxth	r3, r3
 800458e:	461a      	mov	r2, r3
 8004590:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004592:	4413      	add	r3, r2
 8004594:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004596:	683b      	ldr	r3, [r7, #0]
 8004598:	781b      	ldrb	r3, [r3, #0]
 800459a:	011a      	lsls	r2, r3, #4
 800459c:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800459e:	4413      	add	r3, r2
 80045a0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80045a4:	65bb      	str	r3, [r7, #88]	@ 0x58
 80045a6:	683b      	ldr	r3, [r7, #0]
 80045a8:	891b      	ldrh	r3, [r3, #8]
 80045aa:	085b      	lsrs	r3, r3, #1
 80045ac:	b29b      	uxth	r3, r3
 80045ae:	005b      	lsls	r3, r3, #1
 80045b0:	b29a      	uxth	r2, r3
 80045b2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80045b4:	801a      	strh	r2, [r3, #0]
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	657b      	str	r3, [r7, #84]	@ 0x54
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80045c0:	b29b      	uxth	r3, r3
 80045c2:	461a      	mov	r2, r3
 80045c4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045c6:	4413      	add	r3, r2
 80045c8:	657b      	str	r3, [r7, #84]	@ 0x54
 80045ca:	683b      	ldr	r3, [r7, #0]
 80045cc:	781b      	ldrb	r3, [r3, #0]
 80045ce:	011a      	lsls	r2, r3, #4
 80045d0:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80045d2:	4413      	add	r3, r2
 80045d4:	f503 6381 	add.w	r3, r3, #1032	@ 0x408
 80045d8:	653b      	str	r3, [r7, #80]	@ 0x50
 80045da:	683b      	ldr	r3, [r7, #0]
 80045dc:	895b      	ldrh	r3, [r3, #10]
 80045de:	085b      	lsrs	r3, r3, #1
 80045e0:	b29b      	uxth	r3, r3
 80045e2:	005b      	lsls	r3, r3, #1
 80045e4:	b29a      	uxth	r2, r3
 80045e6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80045e8:	801a      	strh	r2, [r3, #0]
 80045ea:	683b      	ldr	r3, [r7, #0]
 80045ec:	785b      	ldrb	r3, [r3, #1]
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	f040 8093 	bne.w	800471a <USB_ActivateEndpoint+0x5f6>
 80045f4:	687a      	ldr	r2, [r7, #4]
 80045f6:	683b      	ldr	r3, [r7, #0]
 80045f8:	781b      	ldrb	r3, [r3, #0]
 80045fa:	009b      	lsls	r3, r3, #2
 80045fc:	4413      	add	r3, r2
 80045fe:	881b      	ldrh	r3, [r3, #0]
 8004600:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40
 8004604:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8004608:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800460c:	2b00      	cmp	r3, #0
 800460e:	d01b      	beq.n	8004648 <USB_ActivateEndpoint+0x524>
 8004610:	687a      	ldr	r2, [r7, #4]
 8004612:	683b      	ldr	r3, [r7, #0]
 8004614:	781b      	ldrb	r3, [r3, #0]
 8004616:	009b      	lsls	r3, r3, #2
 8004618:	4413      	add	r3, r2
 800461a:	881b      	ldrh	r3, [r3, #0]
 800461c:	b29b      	uxth	r3, r3
 800461e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004622:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004626:	87fb      	strh	r3, [r7, #62]	@ 0x3e
 8004628:	687a      	ldr	r2, [r7, #4]
 800462a:	683b      	ldr	r3, [r7, #0]
 800462c:	781b      	ldrb	r3, [r3, #0]
 800462e:	009b      	lsls	r3, r3, #2
 8004630:	441a      	add	r2, r3
 8004632:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8004634:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004638:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800463c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004640:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004644:	b29b      	uxth	r3, r3
 8004646:	8013      	strh	r3, [r2, #0]
 8004648:	687a      	ldr	r2, [r7, #4]
 800464a:	683b      	ldr	r3, [r7, #0]
 800464c:	781b      	ldrb	r3, [r3, #0]
 800464e:	009b      	lsls	r3, r3, #2
 8004650:	4413      	add	r3, r2
 8004652:	881b      	ldrh	r3, [r3, #0]
 8004654:	87bb      	strh	r3, [r7, #60]	@ 0x3c
 8004656:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8004658:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800465c:	2b00      	cmp	r3, #0
 800465e:	d01b      	beq.n	8004698 <USB_ActivateEndpoint+0x574>
 8004660:	687a      	ldr	r2, [r7, #4]
 8004662:	683b      	ldr	r3, [r7, #0]
 8004664:	781b      	ldrb	r3, [r3, #0]
 8004666:	009b      	lsls	r3, r3, #2
 8004668:	4413      	add	r3, r2
 800466a:	881b      	ldrh	r3, [r3, #0]
 800466c:	b29b      	uxth	r3, r3
 800466e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004672:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004676:	877b      	strh	r3, [r7, #58]	@ 0x3a
 8004678:	687a      	ldr	r2, [r7, #4]
 800467a:	683b      	ldr	r3, [r7, #0]
 800467c:	781b      	ldrb	r3, [r3, #0]
 800467e:	009b      	lsls	r3, r3, #2
 8004680:	441a      	add	r2, r3
 8004682:	8f7b      	ldrh	r3, [r7, #58]	@ 0x3a
 8004684:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004688:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800468c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004690:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8004694:	b29b      	uxth	r3, r3
 8004696:	8013      	strh	r3, [r2, #0]
 8004698:	687a      	ldr	r2, [r7, #4]
 800469a:	683b      	ldr	r3, [r7, #0]
 800469c:	781b      	ldrb	r3, [r3, #0]
 800469e:	009b      	lsls	r3, r3, #2
 80046a0:	4413      	add	r3, r2
 80046a2:	881b      	ldrh	r3, [r3, #0]
 80046a4:	b29b      	uxth	r3, r3
 80046a6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80046aa:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80046ae:	873b      	strh	r3, [r7, #56]	@ 0x38
 80046b0:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 80046b2:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 80046b6:	873b      	strh	r3, [r7, #56]	@ 0x38
 80046b8:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 80046ba:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 80046be:	873b      	strh	r3, [r7, #56]	@ 0x38
 80046c0:	687a      	ldr	r2, [r7, #4]
 80046c2:	683b      	ldr	r3, [r7, #0]
 80046c4:	781b      	ldrb	r3, [r3, #0]
 80046c6:	009b      	lsls	r3, r3, #2
 80046c8:	441a      	add	r2, r3
 80046ca:	8f3b      	ldrh	r3, [r7, #56]	@ 0x38
 80046cc:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80046d0:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80046d4:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80046d8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80046dc:	b29b      	uxth	r3, r3
 80046de:	8013      	strh	r3, [r2, #0]
 80046e0:	687a      	ldr	r2, [r7, #4]
 80046e2:	683b      	ldr	r3, [r7, #0]
 80046e4:	781b      	ldrb	r3, [r3, #0]
 80046e6:	009b      	lsls	r3, r3, #2
 80046e8:	4413      	add	r3, r2
 80046ea:	881b      	ldrh	r3, [r3, #0]
 80046ec:	b29b      	uxth	r3, r3
 80046ee:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80046f2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80046f6:	86fb      	strh	r3, [r7, #54]	@ 0x36
 80046f8:	687a      	ldr	r2, [r7, #4]
 80046fa:	683b      	ldr	r3, [r7, #0]
 80046fc:	781b      	ldrb	r3, [r3, #0]
 80046fe:	009b      	lsls	r3, r3, #2
 8004700:	441a      	add	r2, r3
 8004702:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8004704:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004708:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800470c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004710:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004714:	b29b      	uxth	r3, r3
 8004716:	8013      	strh	r3, [r2, #0]
 8004718:	e0bc      	b.n	8004894 <USB_ActivateEndpoint+0x770>
 800471a:	687a      	ldr	r2, [r7, #4]
 800471c:	683b      	ldr	r3, [r7, #0]
 800471e:	781b      	ldrb	r3, [r3, #0]
 8004720:	009b      	lsls	r3, r3, #2
 8004722:	4413      	add	r3, r2
 8004724:	881b      	ldrh	r3, [r3, #0]
 8004726:	f8a7 304e 	strh.w	r3, [r7, #78]	@ 0x4e
 800472a:	f8b7 304e 	ldrh.w	r3, [r7, #78]	@ 0x4e
 800472e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004732:	2b00      	cmp	r3, #0
 8004734:	d01d      	beq.n	8004772 <USB_ActivateEndpoint+0x64e>
 8004736:	687a      	ldr	r2, [r7, #4]
 8004738:	683b      	ldr	r3, [r7, #0]
 800473a:	781b      	ldrb	r3, [r3, #0]
 800473c:	009b      	lsls	r3, r3, #2
 800473e:	4413      	add	r3, r2
 8004740:	881b      	ldrh	r3, [r3, #0]
 8004742:	b29b      	uxth	r3, r3
 8004744:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004748:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800474c:	f8a7 304c 	strh.w	r3, [r7, #76]	@ 0x4c
 8004750:	687a      	ldr	r2, [r7, #4]
 8004752:	683b      	ldr	r3, [r7, #0]
 8004754:	781b      	ldrb	r3, [r3, #0]
 8004756:	009b      	lsls	r3, r3, #2
 8004758:	441a      	add	r2, r3
 800475a:	f8b7 304c 	ldrh.w	r3, [r7, #76]	@ 0x4c
 800475e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004762:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004766:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800476a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800476e:	b29b      	uxth	r3, r3
 8004770:	8013      	strh	r3, [r2, #0]
 8004772:	687a      	ldr	r2, [r7, #4]
 8004774:	683b      	ldr	r3, [r7, #0]
 8004776:	781b      	ldrb	r3, [r3, #0]
 8004778:	009b      	lsls	r3, r3, #2
 800477a:	4413      	add	r3, r2
 800477c:	881b      	ldrh	r3, [r3, #0]
 800477e:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
 8004782:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8004786:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800478a:	2b00      	cmp	r3, #0
 800478c:	d01d      	beq.n	80047ca <USB_ActivateEndpoint+0x6a6>
 800478e:	687a      	ldr	r2, [r7, #4]
 8004790:	683b      	ldr	r3, [r7, #0]
 8004792:	781b      	ldrb	r3, [r3, #0]
 8004794:	009b      	lsls	r3, r3, #2
 8004796:	4413      	add	r3, r2
 8004798:	881b      	ldrh	r3, [r3, #0]
 800479a:	b29b      	uxth	r3, r3
 800479c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80047a0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80047a4:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
 80047a8:	687a      	ldr	r2, [r7, #4]
 80047aa:	683b      	ldr	r3, [r7, #0]
 80047ac:	781b      	ldrb	r3, [r3, #0]
 80047ae:	009b      	lsls	r3, r3, #2
 80047b0:	441a      	add	r2, r3
 80047b2:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 80047b6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80047ba:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80047be:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80047c2:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80047c6:	b29b      	uxth	r3, r3
 80047c8:	8013      	strh	r3, [r2, #0]
 80047ca:	683b      	ldr	r3, [r7, #0]
 80047cc:	78db      	ldrb	r3, [r3, #3]
 80047ce:	2b01      	cmp	r3, #1
 80047d0:	d024      	beq.n	800481c <USB_ActivateEndpoint+0x6f8>
 80047d2:	687a      	ldr	r2, [r7, #4]
 80047d4:	683b      	ldr	r3, [r7, #0]
 80047d6:	781b      	ldrb	r3, [r3, #0]
 80047d8:	009b      	lsls	r3, r3, #2
 80047da:	4413      	add	r3, r2
 80047dc:	881b      	ldrh	r3, [r3, #0]
 80047de:	b29b      	uxth	r3, r3
 80047e0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80047e4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80047e8:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 80047ec:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 80047f0:	f083 0320 	eor.w	r3, r3, #32
 80047f4:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
 80047f8:	687a      	ldr	r2, [r7, #4]
 80047fa:	683b      	ldr	r3, [r7, #0]
 80047fc:	781b      	ldrb	r3, [r3, #0]
 80047fe:	009b      	lsls	r3, r3, #2
 8004800:	441a      	add	r2, r3
 8004802:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8004806:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800480a:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800480e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004812:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004816:	b29b      	uxth	r3, r3
 8004818:	8013      	strh	r3, [r2, #0]
 800481a:	e01d      	b.n	8004858 <USB_ActivateEndpoint+0x734>
 800481c:	687a      	ldr	r2, [r7, #4]
 800481e:	683b      	ldr	r3, [r7, #0]
 8004820:	781b      	ldrb	r3, [r3, #0]
 8004822:	009b      	lsls	r3, r3, #2
 8004824:	4413      	add	r3, r2
 8004826:	881b      	ldrh	r3, [r3, #0]
 8004828:	b29b      	uxth	r3, r3
 800482a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800482e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004832:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
 8004836:	687a      	ldr	r2, [r7, #4]
 8004838:	683b      	ldr	r3, [r7, #0]
 800483a:	781b      	ldrb	r3, [r3, #0]
 800483c:	009b      	lsls	r3, r3, #2
 800483e:	441a      	add	r2, r3
 8004840:	f8b7 3046 	ldrh.w	r3, [r7, #70]	@ 0x46
 8004844:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004848:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800484c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004850:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004854:	b29b      	uxth	r3, r3
 8004856:	8013      	strh	r3, [r2, #0]
 8004858:	687a      	ldr	r2, [r7, #4]
 800485a:	683b      	ldr	r3, [r7, #0]
 800485c:	781b      	ldrb	r3, [r3, #0]
 800485e:	009b      	lsls	r3, r3, #2
 8004860:	4413      	add	r3, r2
 8004862:	881b      	ldrh	r3, [r3, #0]
 8004864:	b29b      	uxth	r3, r3
 8004866:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800486a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800486e:	f8a7 3042 	strh.w	r3, [r7, #66]	@ 0x42
 8004872:	687a      	ldr	r2, [r7, #4]
 8004874:	683b      	ldr	r3, [r7, #0]
 8004876:	781b      	ldrb	r3, [r3, #0]
 8004878:	009b      	lsls	r3, r3, #2
 800487a:	441a      	add	r2, r3
 800487c:	f8b7 3042 	ldrh.w	r3, [r7, #66]	@ 0x42
 8004880:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004884:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004888:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800488c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004890:	b29b      	uxth	r3, r3
 8004892:	8013      	strh	r3, [r2, #0]
 8004894:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8004898:	4618      	mov	r0, r3
 800489a:	3774      	adds	r7, #116	@ 0x74
 800489c:	46bd      	mov	sp, r7
 800489e:	bc80      	pop	{r7}
 80048a0:	4770      	bx	lr
 80048a2:	bf00      	nop

080048a4 <USB_DeactivateEndpoint>:
 80048a4:	b480      	push	{r7}
 80048a6:	b08d      	sub	sp, #52	@ 0x34
 80048a8:	af00      	add	r7, sp, #0
 80048aa:	6078      	str	r0, [r7, #4]
 80048ac:	6039      	str	r1, [r7, #0]
 80048ae:	683b      	ldr	r3, [r7, #0]
 80048b0:	7b1b      	ldrb	r3, [r3, #12]
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	f040 808e 	bne.w	80049d4 <USB_DeactivateEndpoint+0x130>
 80048b8:	683b      	ldr	r3, [r7, #0]
 80048ba:	785b      	ldrb	r3, [r3, #1]
 80048bc:	2b00      	cmp	r3, #0
 80048be:	d044      	beq.n	800494a <USB_DeactivateEndpoint+0xa6>
 80048c0:	687a      	ldr	r2, [r7, #4]
 80048c2:	683b      	ldr	r3, [r7, #0]
 80048c4:	781b      	ldrb	r3, [r3, #0]
 80048c6:	009b      	lsls	r3, r3, #2
 80048c8:	4413      	add	r3, r2
 80048ca:	881b      	ldrh	r3, [r3, #0]
 80048cc:	81bb      	strh	r3, [r7, #12]
 80048ce:	89bb      	ldrh	r3, [r7, #12]
 80048d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80048d4:	2b00      	cmp	r3, #0
 80048d6:	d01b      	beq.n	8004910 <USB_DeactivateEndpoint+0x6c>
 80048d8:	687a      	ldr	r2, [r7, #4]
 80048da:	683b      	ldr	r3, [r7, #0]
 80048dc:	781b      	ldrb	r3, [r3, #0]
 80048de:	009b      	lsls	r3, r3, #2
 80048e0:	4413      	add	r3, r2
 80048e2:	881b      	ldrh	r3, [r3, #0]
 80048e4:	b29b      	uxth	r3, r3
 80048e6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80048ea:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80048ee:	817b      	strh	r3, [r7, #10]
 80048f0:	687a      	ldr	r2, [r7, #4]
 80048f2:	683b      	ldr	r3, [r7, #0]
 80048f4:	781b      	ldrb	r3, [r3, #0]
 80048f6:	009b      	lsls	r3, r3, #2
 80048f8:	441a      	add	r2, r3
 80048fa:	897b      	ldrh	r3, [r7, #10]
 80048fc:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004900:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004904:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004908:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 800490c:	b29b      	uxth	r3, r3
 800490e:	8013      	strh	r3, [r2, #0]
 8004910:	687a      	ldr	r2, [r7, #4]
 8004912:	683b      	ldr	r3, [r7, #0]
 8004914:	781b      	ldrb	r3, [r3, #0]
 8004916:	009b      	lsls	r3, r3, #2
 8004918:	4413      	add	r3, r2
 800491a:	881b      	ldrh	r3, [r3, #0]
 800491c:	b29b      	uxth	r3, r3
 800491e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004922:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004926:	813b      	strh	r3, [r7, #8]
 8004928:	687a      	ldr	r2, [r7, #4]
 800492a:	683b      	ldr	r3, [r7, #0]
 800492c:	781b      	ldrb	r3, [r3, #0]
 800492e:	009b      	lsls	r3, r3, #2
 8004930:	441a      	add	r2, r3
 8004932:	893b      	ldrh	r3, [r7, #8]
 8004934:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004938:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800493c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004940:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004944:	b29b      	uxth	r3, r3
 8004946:	8013      	strh	r3, [r2, #0]
 8004948:	e192      	b.n	8004c70 <USB_DeactivateEndpoint+0x3cc>
 800494a:	687a      	ldr	r2, [r7, #4]
 800494c:	683b      	ldr	r3, [r7, #0]
 800494e:	781b      	ldrb	r3, [r3, #0]
 8004950:	009b      	lsls	r3, r3, #2
 8004952:	4413      	add	r3, r2
 8004954:	881b      	ldrh	r3, [r3, #0]
 8004956:	827b      	strh	r3, [r7, #18]
 8004958:	8a7b      	ldrh	r3, [r7, #18]
 800495a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800495e:	2b00      	cmp	r3, #0
 8004960:	d01b      	beq.n	800499a <USB_DeactivateEndpoint+0xf6>
 8004962:	687a      	ldr	r2, [r7, #4]
 8004964:	683b      	ldr	r3, [r7, #0]
 8004966:	781b      	ldrb	r3, [r3, #0]
 8004968:	009b      	lsls	r3, r3, #2
 800496a:	4413      	add	r3, r2
 800496c:	881b      	ldrh	r3, [r3, #0]
 800496e:	b29b      	uxth	r3, r3
 8004970:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004974:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004978:	823b      	strh	r3, [r7, #16]
 800497a:	687a      	ldr	r2, [r7, #4]
 800497c:	683b      	ldr	r3, [r7, #0]
 800497e:	781b      	ldrb	r3, [r3, #0]
 8004980:	009b      	lsls	r3, r3, #2
 8004982:	441a      	add	r2, r3
 8004984:	8a3b      	ldrh	r3, [r7, #16]
 8004986:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 800498a:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 800498e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004992:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004996:	b29b      	uxth	r3, r3
 8004998:	8013      	strh	r3, [r2, #0]
 800499a:	687a      	ldr	r2, [r7, #4]
 800499c:	683b      	ldr	r3, [r7, #0]
 800499e:	781b      	ldrb	r3, [r3, #0]
 80049a0:	009b      	lsls	r3, r3, #2
 80049a2:	4413      	add	r3, r2
 80049a4:	881b      	ldrh	r3, [r3, #0]
 80049a6:	b29b      	uxth	r3, r3
 80049a8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80049ac:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80049b0:	81fb      	strh	r3, [r7, #14]
 80049b2:	687a      	ldr	r2, [r7, #4]
 80049b4:	683b      	ldr	r3, [r7, #0]
 80049b6:	781b      	ldrb	r3, [r3, #0]
 80049b8:	009b      	lsls	r3, r3, #2
 80049ba:	441a      	add	r2, r3
 80049bc:	89fb      	ldrh	r3, [r7, #14]
 80049be:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80049c2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80049c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80049ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80049ce:	b29b      	uxth	r3, r3
 80049d0:	8013      	strh	r3, [r2, #0]
 80049d2:	e14d      	b.n	8004c70 <USB_DeactivateEndpoint+0x3cc>
 80049d4:	683b      	ldr	r3, [r7, #0]
 80049d6:	785b      	ldrb	r3, [r3, #1]
 80049d8:	2b00      	cmp	r3, #0
 80049da:	f040 80a5 	bne.w	8004b28 <USB_DeactivateEndpoint+0x284>
 80049de:	687a      	ldr	r2, [r7, #4]
 80049e0:	683b      	ldr	r3, [r7, #0]
 80049e2:	781b      	ldrb	r3, [r3, #0]
 80049e4:	009b      	lsls	r3, r3, #2
 80049e6:	4413      	add	r3, r2
 80049e8:	881b      	ldrh	r3, [r3, #0]
 80049ea:	843b      	strh	r3, [r7, #32]
 80049ec:	8c3b      	ldrh	r3, [r7, #32]
 80049ee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d01b      	beq.n	8004a2e <USB_DeactivateEndpoint+0x18a>
 80049f6:	687a      	ldr	r2, [r7, #4]
 80049f8:	683b      	ldr	r3, [r7, #0]
 80049fa:	781b      	ldrb	r3, [r3, #0]
 80049fc:	009b      	lsls	r3, r3, #2
 80049fe:	4413      	add	r3, r2
 8004a00:	881b      	ldrh	r3, [r3, #0]
 8004a02:	b29b      	uxth	r3, r3
 8004a04:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a08:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a0c:	83fb      	strh	r3, [r7, #30]
 8004a0e:	687a      	ldr	r2, [r7, #4]
 8004a10:	683b      	ldr	r3, [r7, #0]
 8004a12:	781b      	ldrb	r3, [r3, #0]
 8004a14:	009b      	lsls	r3, r3, #2
 8004a16:	441a      	add	r2, r3
 8004a18:	8bfb      	ldrh	r3, [r7, #30]
 8004a1a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004a1e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004a22:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004a26:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004a2a:	b29b      	uxth	r3, r3
 8004a2c:	8013      	strh	r3, [r2, #0]
 8004a2e:	687a      	ldr	r2, [r7, #4]
 8004a30:	683b      	ldr	r3, [r7, #0]
 8004a32:	781b      	ldrb	r3, [r3, #0]
 8004a34:	009b      	lsls	r3, r3, #2
 8004a36:	4413      	add	r3, r2
 8004a38:	881b      	ldrh	r3, [r3, #0]
 8004a3a:	83bb      	strh	r3, [r7, #28]
 8004a3c:	8bbb      	ldrh	r3, [r7, #28]
 8004a3e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	d01b      	beq.n	8004a7e <USB_DeactivateEndpoint+0x1da>
 8004a46:	687a      	ldr	r2, [r7, #4]
 8004a48:	683b      	ldr	r3, [r7, #0]
 8004a4a:	781b      	ldrb	r3, [r3, #0]
 8004a4c:	009b      	lsls	r3, r3, #2
 8004a4e:	4413      	add	r3, r2
 8004a50:	881b      	ldrh	r3, [r3, #0]
 8004a52:	b29b      	uxth	r3, r3
 8004a54:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a58:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a5c:	837b      	strh	r3, [r7, #26]
 8004a5e:	687a      	ldr	r2, [r7, #4]
 8004a60:	683b      	ldr	r3, [r7, #0]
 8004a62:	781b      	ldrb	r3, [r3, #0]
 8004a64:	009b      	lsls	r3, r3, #2
 8004a66:	441a      	add	r2, r3
 8004a68:	8b7b      	ldrh	r3, [r7, #26]
 8004a6a:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004a6e:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004a72:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004a76:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8004a7a:	b29b      	uxth	r3, r3
 8004a7c:	8013      	strh	r3, [r2, #0]
 8004a7e:	687a      	ldr	r2, [r7, #4]
 8004a80:	683b      	ldr	r3, [r7, #0]
 8004a82:	781b      	ldrb	r3, [r3, #0]
 8004a84:	009b      	lsls	r3, r3, #2
 8004a86:	4413      	add	r3, r2
 8004a88:	881b      	ldrh	r3, [r3, #0]
 8004a8a:	b29b      	uxth	r3, r3
 8004a8c:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004a90:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004a94:	833b      	strh	r3, [r7, #24]
 8004a96:	687a      	ldr	r2, [r7, #4]
 8004a98:	683b      	ldr	r3, [r7, #0]
 8004a9a:	781b      	ldrb	r3, [r3, #0]
 8004a9c:	009b      	lsls	r3, r3, #2
 8004a9e:	441a      	add	r2, r3
 8004aa0:	8b3b      	ldrh	r3, [r7, #24]
 8004aa2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004aa6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004aaa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004aae:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8004ab2:	b29b      	uxth	r3, r3
 8004ab4:	8013      	strh	r3, [r2, #0]
 8004ab6:	687a      	ldr	r2, [r7, #4]
 8004ab8:	683b      	ldr	r3, [r7, #0]
 8004aba:	781b      	ldrb	r3, [r3, #0]
 8004abc:	009b      	lsls	r3, r3, #2
 8004abe:	4413      	add	r3, r2
 8004ac0:	881b      	ldrh	r3, [r3, #0]
 8004ac2:	b29b      	uxth	r3, r3
 8004ac4:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004ac8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004acc:	82fb      	strh	r3, [r7, #22]
 8004ace:	687a      	ldr	r2, [r7, #4]
 8004ad0:	683b      	ldr	r3, [r7, #0]
 8004ad2:	781b      	ldrb	r3, [r3, #0]
 8004ad4:	009b      	lsls	r3, r3, #2
 8004ad6:	441a      	add	r2, r3
 8004ad8:	8afb      	ldrh	r3, [r7, #22]
 8004ada:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004ade:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004ae2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004ae6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004aea:	b29b      	uxth	r3, r3
 8004aec:	8013      	strh	r3, [r2, #0]
 8004aee:	687a      	ldr	r2, [r7, #4]
 8004af0:	683b      	ldr	r3, [r7, #0]
 8004af2:	781b      	ldrb	r3, [r3, #0]
 8004af4:	009b      	lsls	r3, r3, #2
 8004af6:	4413      	add	r3, r2
 8004af8:	881b      	ldrh	r3, [r3, #0]
 8004afa:	b29b      	uxth	r3, r3
 8004afc:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004b00:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004b04:	82bb      	strh	r3, [r7, #20]
 8004b06:	687a      	ldr	r2, [r7, #4]
 8004b08:	683b      	ldr	r3, [r7, #0]
 8004b0a:	781b      	ldrb	r3, [r3, #0]
 8004b0c:	009b      	lsls	r3, r3, #2
 8004b0e:	441a      	add	r2, r3
 8004b10:	8abb      	ldrh	r3, [r7, #20]
 8004b12:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004b16:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004b1a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004b1e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004b22:	b29b      	uxth	r3, r3
 8004b24:	8013      	strh	r3, [r2, #0]
 8004b26:	e0a3      	b.n	8004c70 <USB_DeactivateEndpoint+0x3cc>
 8004b28:	687a      	ldr	r2, [r7, #4]
 8004b2a:	683b      	ldr	r3, [r7, #0]
 8004b2c:	781b      	ldrb	r3, [r3, #0]
 8004b2e:	009b      	lsls	r3, r3, #2
 8004b30:	4413      	add	r3, r2
 8004b32:	881b      	ldrh	r3, [r3, #0]
 8004b34:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8004b36:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8004b38:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d01b      	beq.n	8004b78 <USB_DeactivateEndpoint+0x2d4>
 8004b40:	687a      	ldr	r2, [r7, #4]
 8004b42:	683b      	ldr	r3, [r7, #0]
 8004b44:	781b      	ldrb	r3, [r3, #0]
 8004b46:	009b      	lsls	r3, r3, #2
 8004b48:	4413      	add	r3, r2
 8004b4a:	881b      	ldrh	r3, [r3, #0]
 8004b4c:	b29b      	uxth	r3, r3
 8004b4e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004b52:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004b56:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8004b58:	687a      	ldr	r2, [r7, #4]
 8004b5a:	683b      	ldr	r3, [r7, #0]
 8004b5c:	781b      	ldrb	r3, [r3, #0]
 8004b5e:	009b      	lsls	r3, r3, #2
 8004b60:	441a      	add	r2, r3
 8004b62:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8004b64:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004b68:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004b6c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004b70:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004b74:	b29b      	uxth	r3, r3
 8004b76:	8013      	strh	r3, [r2, #0]
 8004b78:	687a      	ldr	r2, [r7, #4]
 8004b7a:	683b      	ldr	r3, [r7, #0]
 8004b7c:	781b      	ldrb	r3, [r3, #0]
 8004b7e:	009b      	lsls	r3, r3, #2
 8004b80:	4413      	add	r3, r2
 8004b82:	881b      	ldrh	r3, [r3, #0]
 8004b84:	857b      	strh	r3, [r7, #42]	@ 0x2a
 8004b86:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8004b88:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	d01b      	beq.n	8004bc8 <USB_DeactivateEndpoint+0x324>
 8004b90:	687a      	ldr	r2, [r7, #4]
 8004b92:	683b      	ldr	r3, [r7, #0]
 8004b94:	781b      	ldrb	r3, [r3, #0]
 8004b96:	009b      	lsls	r3, r3, #2
 8004b98:	4413      	add	r3, r2
 8004b9a:	881b      	ldrh	r3, [r3, #0]
 8004b9c:	b29b      	uxth	r3, r3
 8004b9e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004ba2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004ba6:	853b      	strh	r3, [r7, #40]	@ 0x28
 8004ba8:	687a      	ldr	r2, [r7, #4]
 8004baa:	683b      	ldr	r3, [r7, #0]
 8004bac:	781b      	ldrb	r3, [r3, #0]
 8004bae:	009b      	lsls	r3, r3, #2
 8004bb0:	441a      	add	r2, r3
 8004bb2:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 8004bb4:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004bb8:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004bbc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004bc0:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8004bc4:	b29b      	uxth	r3, r3
 8004bc6:	8013      	strh	r3, [r2, #0]
 8004bc8:	687a      	ldr	r2, [r7, #4]
 8004bca:	683b      	ldr	r3, [r7, #0]
 8004bcc:	781b      	ldrb	r3, [r3, #0]
 8004bce:	009b      	lsls	r3, r3, #2
 8004bd0:	4413      	add	r3, r2
 8004bd2:	881b      	ldrh	r3, [r3, #0]
 8004bd4:	b29b      	uxth	r3, r3
 8004bd6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004bda:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004bde:	84fb      	strh	r3, [r7, #38]	@ 0x26
 8004be0:	687a      	ldr	r2, [r7, #4]
 8004be2:	683b      	ldr	r3, [r7, #0]
 8004be4:	781b      	ldrb	r3, [r3, #0]
 8004be6:	009b      	lsls	r3, r3, #2
 8004be8:	441a      	add	r2, r3
 8004bea:	8cfb      	ldrh	r3, [r7, #38]	@ 0x26
 8004bec:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004bf0:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004bf4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004bf8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004bfc:	b29b      	uxth	r3, r3
 8004bfe:	8013      	strh	r3, [r2, #0]
 8004c00:	687a      	ldr	r2, [r7, #4]
 8004c02:	683b      	ldr	r3, [r7, #0]
 8004c04:	781b      	ldrb	r3, [r3, #0]
 8004c06:	009b      	lsls	r3, r3, #2
 8004c08:	4413      	add	r3, r2
 8004c0a:	881b      	ldrh	r3, [r3, #0]
 8004c0c:	b29b      	uxth	r3, r3
 8004c0e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004c12:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004c16:	84bb      	strh	r3, [r7, #36]	@ 0x24
 8004c18:	687a      	ldr	r2, [r7, #4]
 8004c1a:	683b      	ldr	r3, [r7, #0]
 8004c1c:	781b      	ldrb	r3, [r3, #0]
 8004c1e:	009b      	lsls	r3, r3, #2
 8004c20:	441a      	add	r2, r3
 8004c22:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8004c24:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004c28:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004c2c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004c30:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004c34:	b29b      	uxth	r3, r3
 8004c36:	8013      	strh	r3, [r2, #0]
 8004c38:	687a      	ldr	r2, [r7, #4]
 8004c3a:	683b      	ldr	r3, [r7, #0]
 8004c3c:	781b      	ldrb	r3, [r3, #0]
 8004c3e:	009b      	lsls	r3, r3, #2
 8004c40:	4413      	add	r3, r2
 8004c42:	881b      	ldrh	r3, [r3, #0]
 8004c44:	b29b      	uxth	r3, r3
 8004c46:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8004c4a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004c4e:	847b      	strh	r3, [r7, #34]	@ 0x22
 8004c50:	687a      	ldr	r2, [r7, #4]
 8004c52:	683b      	ldr	r3, [r7, #0]
 8004c54:	781b      	ldrb	r3, [r3, #0]
 8004c56:	009b      	lsls	r3, r3, #2
 8004c58:	441a      	add	r2, r3
 8004c5a:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 8004c5c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004c60:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004c64:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004c68:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004c6c:	b29b      	uxth	r3, r3
 8004c6e:	8013      	strh	r3, [r2, #0]
 8004c70:	2300      	movs	r3, #0
 8004c72:	4618      	mov	r0, r3
 8004c74:	3734      	adds	r7, #52	@ 0x34
 8004c76:	46bd      	mov	sp, r7
 8004c78:	bc80      	pop	{r7}
 8004c7a:	4770      	bx	lr

08004c7c <USB_EPStartXfer>:
 8004c7c:	b580      	push	{r7, lr}
 8004c7e:	b0c2      	sub	sp, #264	@ 0x108
 8004c80:	af00      	add	r7, sp, #0
 8004c82:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004c86:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004c8a:	6018      	str	r0, [r3, #0]
 8004c8c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004c90:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004c94:	6019      	str	r1, [r3, #0]
 8004c96:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004c9a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	785b      	ldrb	r3, [r3, #1]
 8004ca2:	2b01      	cmp	r3, #1
 8004ca4:	f040 86b7 	bne.w	8005a16 <USB_EPStartXfer+0xd9a>
 8004ca8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cac:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	699a      	ldr	r2, [r3, #24]
 8004cb4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cb8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	691b      	ldr	r3, [r3, #16]
 8004cc0:	429a      	cmp	r2, r3
 8004cc2:	d908      	bls.n	8004cd6 <USB_EPStartXfer+0x5a>
 8004cc4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cc8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	691b      	ldr	r3, [r3, #16]
 8004cd0:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8004cd4:	e007      	b.n	8004ce6 <USB_EPStartXfer+0x6a>
 8004cd6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cda:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	699b      	ldr	r3, [r3, #24]
 8004ce2:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8004ce6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cea:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	7b1b      	ldrb	r3, [r3, #12]
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d13a      	bne.n	8004d6c <USB_EPStartXfer+0xf0>
 8004cf6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004cfa:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	6959      	ldr	r1, [r3, #20]
 8004d02:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d06:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	88da      	ldrh	r2, [r3, #6]
 8004d0e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004d12:	b29b      	uxth	r3, r3
 8004d14:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8004d18:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8004d1c:	6800      	ldr	r0, [r0, #0]
 8004d1e:	f001 fc9c 	bl	800665a <USB_WritePMA>
 8004d22:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d26:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	613b      	str	r3, [r7, #16]
 8004d2e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d32:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004d3c:	b29b      	uxth	r3, r3
 8004d3e:	461a      	mov	r2, r3
 8004d40:	693b      	ldr	r3, [r7, #16]
 8004d42:	4413      	add	r3, r2
 8004d44:	613b      	str	r3, [r7, #16]
 8004d46:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d4a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	781b      	ldrb	r3, [r3, #0]
 8004d52:	011a      	lsls	r2, r3, #4
 8004d54:	693b      	ldr	r3, [r7, #16]
 8004d56:	4413      	add	r3, r2
 8004d58:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8004d5c:	60fb      	str	r3, [r7, #12]
 8004d5e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004d62:	b29a      	uxth	r2, r3
 8004d64:	68fb      	ldr	r3, [r7, #12]
 8004d66:	801a      	strh	r2, [r3, #0]
 8004d68:	f000 be1f 	b.w	80059aa <USB_EPStartXfer+0xd2e>
 8004d6c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d70:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	78db      	ldrb	r3, [r3, #3]
 8004d78:	2b02      	cmp	r3, #2
 8004d7a:	f040 8462 	bne.w	8005642 <USB_EPStartXfer+0x9c6>
 8004d7e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d82:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	6a1a      	ldr	r2, [r3, #32]
 8004d8a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004d8e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	691b      	ldr	r3, [r3, #16]
 8004d96:	429a      	cmp	r2, r3
 8004d98:	f240 83df 	bls.w	800555a <USB_EPStartXfer+0x8de>
 8004d9c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004da0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004da4:	681a      	ldr	r2, [r3, #0]
 8004da6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004daa:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	781b      	ldrb	r3, [r3, #0]
 8004db2:	009b      	lsls	r3, r3, #2
 8004db4:	4413      	add	r3, r2
 8004db6:	881b      	ldrh	r3, [r3, #0]
 8004db8:	b29b      	uxth	r3, r3
 8004dba:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8004dbe:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8004dc2:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
 8004dc6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004dca:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004dce:	681a      	ldr	r2, [r3, #0]
 8004dd0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004dd4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	781b      	ldrb	r3, [r3, #0]
 8004ddc:	009b      	lsls	r3, r3, #2
 8004dde:	441a      	add	r2, r3
 8004de0:	f8b7 3056 	ldrh.w	r3, [r7, #86]	@ 0x56
 8004de4:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8004de8:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8004dec:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 8004df0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004df4:	b29b      	uxth	r3, r3
 8004df6:	8013      	strh	r3, [r2, #0]
 8004df8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004dfc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	6a1a      	ldr	r2, [r3, #32]
 8004e04:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004e08:	1ad2      	subs	r2, r2, r3
 8004e0a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e0e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	621a      	str	r2, [r3, #32]
 8004e16:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e1a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004e1e:	681a      	ldr	r2, [r3, #0]
 8004e20:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e24:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	781b      	ldrb	r3, [r3, #0]
 8004e2c:	009b      	lsls	r3, r3, #2
 8004e2e:	4413      	add	r3, r2
 8004e30:	881b      	ldrh	r3, [r3, #0]
 8004e32:	b29b      	uxth	r3, r3
 8004e34:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004e38:	2b00      	cmp	r3, #0
 8004e3a:	f000 81c7 	beq.w	80051cc <USB_EPStartXfer+0x550>
 8004e3e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e42:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	633b      	str	r3, [r7, #48]	@ 0x30
 8004e4a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e4e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	785b      	ldrb	r3, [r3, #1]
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	d177      	bne.n	8004f4a <USB_EPStartXfer+0x2ce>
 8004e5a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e5e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e66:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e6a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004e74:	b29b      	uxth	r3, r3
 8004e76:	461a      	mov	r2, r3
 8004e78:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e7a:	4413      	add	r3, r2
 8004e7c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004e7e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004e82:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	781b      	ldrb	r3, [r3, #0]
 8004e8a:	011a      	lsls	r2, r3, #4
 8004e8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004e8e:	4413      	add	r3, r2
 8004e90:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004e94:	627b      	str	r3, [r7, #36]	@ 0x24
 8004e96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e98:	881b      	ldrh	r3, [r3, #0]
 8004e9a:	b29b      	uxth	r3, r3
 8004e9c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8004ea0:	b29a      	uxth	r2, r3
 8004ea2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ea4:	801a      	strh	r2, [r3, #0]
 8004ea6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004eaa:	2b3e      	cmp	r3, #62	@ 0x3e
 8004eac:	d921      	bls.n	8004ef2 <USB_EPStartXfer+0x276>
 8004eae:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004eb2:	095b      	lsrs	r3, r3, #5
 8004eb4:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8004eb8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004ebc:	f003 031f 	and.w	r3, r3, #31
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d104      	bne.n	8004ece <USB_EPStartXfer+0x252>
 8004ec4:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8004ec8:	3b01      	subs	r3, #1
 8004eca:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8004ece:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ed0:	881b      	ldrh	r3, [r3, #0]
 8004ed2:	b29a      	uxth	r2, r3
 8004ed4:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8004ed8:	b29b      	uxth	r3, r3
 8004eda:	029b      	lsls	r3, r3, #10
 8004edc:	b29b      	uxth	r3, r3
 8004ede:	4313      	orrs	r3, r2
 8004ee0:	b29b      	uxth	r3, r3
 8004ee2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004ee6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004eea:	b29a      	uxth	r2, r3
 8004eec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004eee:	801a      	strh	r2, [r3, #0]
 8004ef0:	e050      	b.n	8004f94 <USB_EPStartXfer+0x318>
 8004ef2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d10a      	bne.n	8004f10 <USB_EPStartXfer+0x294>
 8004efa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004efc:	881b      	ldrh	r3, [r3, #0]
 8004efe:	b29b      	uxth	r3, r3
 8004f00:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004f04:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004f08:	b29a      	uxth	r2, r3
 8004f0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f0c:	801a      	strh	r2, [r3, #0]
 8004f0e:	e041      	b.n	8004f94 <USB_EPStartXfer+0x318>
 8004f10:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004f14:	085b      	lsrs	r3, r3, #1
 8004f16:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8004f1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004f1e:	f003 0301 	and.w	r3, r3, #1
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d004      	beq.n	8004f30 <USB_EPStartXfer+0x2b4>
 8004f26:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8004f2a:	3301      	adds	r3, #1
 8004f2c:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8004f30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f32:	881b      	ldrh	r3, [r3, #0]
 8004f34:	b29a      	uxth	r2, r3
 8004f36:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8004f3a:	b29b      	uxth	r3, r3
 8004f3c:	029b      	lsls	r3, r3, #10
 8004f3e:	b29b      	uxth	r3, r3
 8004f40:	4313      	orrs	r3, r2
 8004f42:	b29a      	uxth	r2, r3
 8004f44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f46:	801a      	strh	r2, [r3, #0]
 8004f48:	e024      	b.n	8004f94 <USB_EPStartXfer+0x318>
 8004f4a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004f4e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	785b      	ldrb	r3, [r3, #1]
 8004f56:	2b01      	cmp	r3, #1
 8004f58:	d11c      	bne.n	8004f94 <USB_EPStartXfer+0x318>
 8004f5a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004f5e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8004f68:	b29b      	uxth	r3, r3
 8004f6a:	461a      	mov	r2, r3
 8004f6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f6e:	4413      	add	r3, r2
 8004f70:	633b      	str	r3, [r7, #48]	@ 0x30
 8004f72:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004f76:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	781b      	ldrb	r3, [r3, #0]
 8004f7e:	011a      	lsls	r2, r3, #4
 8004f80:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004f82:	4413      	add	r3, r2
 8004f84:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8004f88:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004f8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004f8e:	b29a      	uxth	r2, r3
 8004f90:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004f92:	801a      	strh	r2, [r3, #0]
 8004f94:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004f98:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	895b      	ldrh	r3, [r3, #10]
 8004fa0:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8004fa4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004fa8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	6959      	ldr	r1, [r3, #20]
 8004fb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004fb4:	b29b      	uxth	r3, r3
 8004fb6:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8004fba:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8004fbe:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8004fc2:	6800      	ldr	r0, [r0, #0]
 8004fc4:	f001 fb49 	bl	800665a <USB_WritePMA>
 8004fc8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004fcc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004fd0:	681b      	ldr	r3, [r3, #0]
 8004fd2:	695a      	ldr	r2, [r3, #20]
 8004fd4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8004fd8:	441a      	add	r2, r3
 8004fda:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004fde:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	615a      	str	r2, [r3, #20]
 8004fe6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004fea:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	6a1a      	ldr	r2, [r3, #32]
 8004ff2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8004ff6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	691b      	ldr	r3, [r3, #16]
 8004ffe:	429a      	cmp	r2, r3
 8005000:	d90f      	bls.n	8005022 <USB_EPStartXfer+0x3a6>
 8005002:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005006:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800500a:	681b      	ldr	r3, [r3, #0]
 800500c:	6a1a      	ldr	r2, [r3, #32]
 800500e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005012:	1ad2      	subs	r2, r2, r3
 8005014:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005018:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	621a      	str	r2, [r3, #32]
 8005020:	e00e      	b.n	8005040 <USB_EPStartXfer+0x3c4>
 8005022:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005026:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800502a:	681b      	ldr	r3, [r3, #0]
 800502c:	6a1b      	ldr	r3, [r3, #32]
 800502e:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8005032:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005036:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800503a:	681b      	ldr	r3, [r3, #0]
 800503c:	2200      	movs	r2, #0
 800503e:	621a      	str	r2, [r3, #32]
 8005040:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005044:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	785b      	ldrb	r3, [r3, #1]
 800504c:	2b00      	cmp	r3, #0
 800504e:	d177      	bne.n	8005140 <USB_EPStartXfer+0x4c4>
 8005050:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005054:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	61bb      	str	r3, [r7, #24]
 800505c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005060:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005064:	681b      	ldr	r3, [r3, #0]
 8005066:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800506a:	b29b      	uxth	r3, r3
 800506c:	461a      	mov	r2, r3
 800506e:	69bb      	ldr	r3, [r7, #24]
 8005070:	4413      	add	r3, r2
 8005072:	61bb      	str	r3, [r7, #24]
 8005074:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005078:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	781b      	ldrb	r3, [r3, #0]
 8005080:	011a      	lsls	r2, r3, #4
 8005082:	69bb      	ldr	r3, [r7, #24]
 8005084:	4413      	add	r3, r2
 8005086:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800508a:	617b      	str	r3, [r7, #20]
 800508c:	697b      	ldr	r3, [r7, #20]
 800508e:	881b      	ldrh	r3, [r3, #0]
 8005090:	b29b      	uxth	r3, r3
 8005092:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005096:	b29a      	uxth	r2, r3
 8005098:	697b      	ldr	r3, [r7, #20]
 800509a:	801a      	strh	r2, [r3, #0]
 800509c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80050a0:	2b3e      	cmp	r3, #62	@ 0x3e
 80050a2:	d921      	bls.n	80050e8 <USB_EPStartXfer+0x46c>
 80050a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80050a8:	095b      	lsrs	r3, r3, #5
 80050aa:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80050ae:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80050b2:	f003 031f 	and.w	r3, r3, #31
 80050b6:	2b00      	cmp	r3, #0
 80050b8:	d104      	bne.n	80050c4 <USB_EPStartXfer+0x448>
 80050ba:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80050be:	3b01      	subs	r3, #1
 80050c0:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80050c4:	697b      	ldr	r3, [r7, #20]
 80050c6:	881b      	ldrh	r3, [r3, #0]
 80050c8:	b29a      	uxth	r2, r3
 80050ca:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80050ce:	b29b      	uxth	r3, r3
 80050d0:	029b      	lsls	r3, r3, #10
 80050d2:	b29b      	uxth	r3, r3
 80050d4:	4313      	orrs	r3, r2
 80050d6:	b29b      	uxth	r3, r3
 80050d8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80050dc:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80050e0:	b29a      	uxth	r2, r3
 80050e2:	697b      	ldr	r3, [r7, #20]
 80050e4:	801a      	strh	r2, [r3, #0]
 80050e6:	e056      	b.n	8005196 <USB_EPStartXfer+0x51a>
 80050e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d10a      	bne.n	8005106 <USB_EPStartXfer+0x48a>
 80050f0:	697b      	ldr	r3, [r7, #20]
 80050f2:	881b      	ldrh	r3, [r3, #0]
 80050f4:	b29b      	uxth	r3, r3
 80050f6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80050fa:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80050fe:	b29a      	uxth	r2, r3
 8005100:	697b      	ldr	r3, [r7, #20]
 8005102:	801a      	strh	r2, [r3, #0]
 8005104:	e047      	b.n	8005196 <USB_EPStartXfer+0x51a>
 8005106:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800510a:	085b      	lsrs	r3, r3, #1
 800510c:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8005110:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005114:	f003 0301 	and.w	r3, r3, #1
 8005118:	2b00      	cmp	r3, #0
 800511a:	d004      	beq.n	8005126 <USB_EPStartXfer+0x4aa>
 800511c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005120:	3301      	adds	r3, #1
 8005122:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8005126:	697b      	ldr	r3, [r7, #20]
 8005128:	881b      	ldrh	r3, [r3, #0]
 800512a:	b29a      	uxth	r2, r3
 800512c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005130:	b29b      	uxth	r3, r3
 8005132:	029b      	lsls	r3, r3, #10
 8005134:	b29b      	uxth	r3, r3
 8005136:	4313      	orrs	r3, r2
 8005138:	b29a      	uxth	r2, r3
 800513a:	697b      	ldr	r3, [r7, #20]
 800513c:	801a      	strh	r2, [r3, #0]
 800513e:	e02a      	b.n	8005196 <USB_EPStartXfer+0x51a>
 8005140:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005144:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	785b      	ldrb	r3, [r3, #1]
 800514c:	2b01      	cmp	r3, #1
 800514e:	d122      	bne.n	8005196 <USB_EPStartXfer+0x51a>
 8005150:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005154:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	623b      	str	r3, [r7, #32]
 800515c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005160:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800516a:	b29b      	uxth	r3, r3
 800516c:	461a      	mov	r2, r3
 800516e:	6a3b      	ldr	r3, [r7, #32]
 8005170:	4413      	add	r3, r2
 8005172:	623b      	str	r3, [r7, #32]
 8005174:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005178:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	781b      	ldrb	r3, [r3, #0]
 8005180:	011a      	lsls	r2, r3, #4
 8005182:	6a3b      	ldr	r3, [r7, #32]
 8005184:	4413      	add	r3, r2
 8005186:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800518a:	61fb      	str	r3, [r7, #28]
 800518c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005190:	b29a      	uxth	r2, r3
 8005192:	69fb      	ldr	r3, [r7, #28]
 8005194:	801a      	strh	r2, [r3, #0]
 8005196:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800519a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	891b      	ldrh	r3, [r3, #8]
 80051a2:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 80051a6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80051aa:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	6959      	ldr	r1, [r3, #20]
 80051b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80051b6:	b29b      	uxth	r3, r3
 80051b8:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 80051bc:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 80051c0:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 80051c4:	6800      	ldr	r0, [r0, #0]
 80051c6:	f001 fa48 	bl	800665a <USB_WritePMA>
 80051ca:	e3ee      	b.n	80059aa <USB_EPStartXfer+0xd2e>
 80051cc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80051d0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	785b      	ldrb	r3, [r3, #1]
 80051d8:	2b00      	cmp	r3, #0
 80051da:	d177      	bne.n	80052cc <USB_EPStartXfer+0x650>
 80051dc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80051e0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80051e8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80051ec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80051f6:	b29b      	uxth	r3, r3
 80051f8:	461a      	mov	r2, r3
 80051fa:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80051fc:	4413      	add	r3, r2
 80051fe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005200:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005204:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	781b      	ldrb	r3, [r3, #0]
 800520c:	011a      	lsls	r2, r3, #4
 800520e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8005210:	4413      	add	r3, r2
 8005212:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005216:	647b      	str	r3, [r7, #68]	@ 0x44
 8005218:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800521a:	881b      	ldrh	r3, [r3, #0]
 800521c:	b29b      	uxth	r3, r3
 800521e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005222:	b29a      	uxth	r2, r3
 8005224:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005226:	801a      	strh	r2, [r3, #0]
 8005228:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800522c:	2b3e      	cmp	r3, #62	@ 0x3e
 800522e:	d921      	bls.n	8005274 <USB_EPStartXfer+0x5f8>
 8005230:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005234:	095b      	lsrs	r3, r3, #5
 8005236:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800523a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800523e:	f003 031f 	and.w	r3, r3, #31
 8005242:	2b00      	cmp	r3, #0
 8005244:	d104      	bne.n	8005250 <USB_EPStartXfer+0x5d4>
 8005246:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800524a:	3b01      	subs	r3, #1
 800524c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005250:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005252:	881b      	ldrh	r3, [r3, #0]
 8005254:	b29a      	uxth	r2, r3
 8005256:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800525a:	b29b      	uxth	r3, r3
 800525c:	029b      	lsls	r3, r3, #10
 800525e:	b29b      	uxth	r3, r3
 8005260:	4313      	orrs	r3, r2
 8005262:	b29b      	uxth	r3, r3
 8005264:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005268:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800526c:	b29a      	uxth	r2, r3
 800526e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8005270:	801a      	strh	r2, [r3, #0]
 8005272:	e056      	b.n	8005322 <USB_EPStartXfer+0x6a6>
 8005274:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005278:	2b00      	cmp	r3, #0
 800527a:	d10a      	bne.n	8005292 <USB_EPStartXfer+0x616>
 800527c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800527e:	881b      	ldrh	r3, [r3, #0]
 8005280:	b29b      	uxth	r3, r3
 8005282:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005286:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800528a:	b29a      	uxth	r2, r3
 800528c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800528e:	801a      	strh	r2, [r3, #0]
 8005290:	e047      	b.n	8005322 <USB_EPStartXfer+0x6a6>
 8005292:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005296:	085b      	lsrs	r3, r3, #1
 8005298:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 800529c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80052a0:	f003 0301 	and.w	r3, r3, #1
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	d004      	beq.n	80052b2 <USB_EPStartXfer+0x636>
 80052a8:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80052ac:	3301      	adds	r3, #1
 80052ae:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80052b2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80052b4:	881b      	ldrh	r3, [r3, #0]
 80052b6:	b29a      	uxth	r2, r3
 80052b8:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80052bc:	b29b      	uxth	r3, r3
 80052be:	029b      	lsls	r3, r3, #10
 80052c0:	b29b      	uxth	r3, r3
 80052c2:	4313      	orrs	r3, r2
 80052c4:	b29a      	uxth	r2, r3
 80052c6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80052c8:	801a      	strh	r2, [r3, #0]
 80052ca:	e02a      	b.n	8005322 <USB_EPStartXfer+0x6a6>
 80052cc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80052d0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	785b      	ldrb	r3, [r3, #1]
 80052d8:	2b01      	cmp	r3, #1
 80052da:	d122      	bne.n	8005322 <USB_EPStartXfer+0x6a6>
 80052dc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80052e0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	653b      	str	r3, [r7, #80]	@ 0x50
 80052e8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80052ec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80052f6:	b29b      	uxth	r3, r3
 80052f8:	461a      	mov	r2, r3
 80052fa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 80052fc:	4413      	add	r3, r2
 80052fe:	653b      	str	r3, [r7, #80]	@ 0x50
 8005300:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005304:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005308:	681b      	ldr	r3, [r3, #0]
 800530a:	781b      	ldrb	r3, [r3, #0]
 800530c:	011a      	lsls	r2, r3, #4
 800530e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8005310:	4413      	add	r3, r2
 8005312:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005316:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005318:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800531c:	b29a      	uxth	r2, r3
 800531e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8005320:	801a      	strh	r2, [r3, #0]
 8005322:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005326:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	891b      	ldrh	r3, [r3, #8]
 800532e:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8005332:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005336:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	6959      	ldr	r1, [r3, #20]
 800533e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005342:	b29b      	uxth	r3, r3
 8005344:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8005348:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 800534c:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8005350:	6800      	ldr	r0, [r0, #0]
 8005352:	f001 f982 	bl	800665a <USB_WritePMA>
 8005356:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800535a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	695a      	ldr	r2, [r3, #20]
 8005362:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005366:	441a      	add	r2, r3
 8005368:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800536c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	615a      	str	r2, [r3, #20]
 8005374:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005378:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	6a1a      	ldr	r2, [r3, #32]
 8005380:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005384:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	691b      	ldr	r3, [r3, #16]
 800538c:	429a      	cmp	r2, r3
 800538e:	d90f      	bls.n	80053b0 <USB_EPStartXfer+0x734>
 8005390:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005394:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	6a1a      	ldr	r2, [r3, #32]
 800539c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80053a0:	1ad2      	subs	r2, r2, r3
 80053a2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053a6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	621a      	str	r2, [r3, #32]
 80053ae:	e00e      	b.n	80053ce <USB_EPStartXfer+0x752>
 80053b0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053b4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	6a1b      	ldr	r3, [r3, #32]
 80053bc:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 80053c0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053c4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	2200      	movs	r2, #0
 80053cc:	621a      	str	r2, [r3, #32]
 80053ce:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053d2:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	643b      	str	r3, [r7, #64]	@ 0x40
 80053da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053de:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	785b      	ldrb	r3, [r3, #1]
 80053e6:	2b00      	cmp	r3, #0
 80053e8:	d177      	bne.n	80054da <USB_EPStartXfer+0x85e>
 80053ea:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053ee:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80053f6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80053fa:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005404:	b29b      	uxth	r3, r3
 8005406:	461a      	mov	r2, r3
 8005408:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800540a:	4413      	add	r3, r2
 800540c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800540e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005412:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	781b      	ldrb	r3, [r3, #0]
 800541a:	011a      	lsls	r2, r3, #4
 800541c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800541e:	4413      	add	r3, r2
 8005420:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005424:	637b      	str	r3, [r7, #52]	@ 0x34
 8005426:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005428:	881b      	ldrh	r3, [r3, #0]
 800542a:	b29b      	uxth	r3, r3
 800542c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005430:	b29a      	uxth	r2, r3
 8005432:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005434:	801a      	strh	r2, [r3, #0]
 8005436:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800543a:	2b3e      	cmp	r3, #62	@ 0x3e
 800543c:	d921      	bls.n	8005482 <USB_EPStartXfer+0x806>
 800543e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005442:	095b      	lsrs	r3, r3, #5
 8005444:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8005448:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800544c:	f003 031f 	and.w	r3, r3, #31
 8005450:	2b00      	cmp	r3, #0
 8005452:	d104      	bne.n	800545e <USB_EPStartXfer+0x7e2>
 8005454:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005458:	3b01      	subs	r3, #1
 800545a:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800545e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005460:	881b      	ldrh	r3, [r3, #0]
 8005462:	b29a      	uxth	r2, r3
 8005464:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005468:	b29b      	uxth	r3, r3
 800546a:	029b      	lsls	r3, r3, #10
 800546c:	b29b      	uxth	r3, r3
 800546e:	4313      	orrs	r3, r2
 8005470:	b29b      	uxth	r3, r3
 8005472:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005476:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800547a:	b29a      	uxth	r2, r3
 800547c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800547e:	801a      	strh	r2, [r3, #0]
 8005480:	e050      	b.n	8005524 <USB_EPStartXfer+0x8a8>
 8005482:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005486:	2b00      	cmp	r3, #0
 8005488:	d10a      	bne.n	80054a0 <USB_EPStartXfer+0x824>
 800548a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800548c:	881b      	ldrh	r3, [r3, #0]
 800548e:	b29b      	uxth	r3, r3
 8005490:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005494:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005498:	b29a      	uxth	r2, r3
 800549a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800549c:	801a      	strh	r2, [r3, #0]
 800549e:	e041      	b.n	8005524 <USB_EPStartXfer+0x8a8>
 80054a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80054a4:	085b      	lsrs	r3, r3, #1
 80054a6:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 80054aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80054ae:	f003 0301 	and.w	r3, r3, #1
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	d004      	beq.n	80054c0 <USB_EPStartXfer+0x844>
 80054b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80054ba:	3301      	adds	r3, #1
 80054bc:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 80054c0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80054c2:	881b      	ldrh	r3, [r3, #0]
 80054c4:	b29a      	uxth	r2, r3
 80054c6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80054ca:	b29b      	uxth	r3, r3
 80054cc:	029b      	lsls	r3, r3, #10
 80054ce:	b29b      	uxth	r3, r3
 80054d0:	4313      	orrs	r3, r2
 80054d2:	b29a      	uxth	r2, r3
 80054d4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80054d6:	801a      	strh	r2, [r3, #0]
 80054d8:	e024      	b.n	8005524 <USB_EPStartXfer+0x8a8>
 80054da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80054de:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	785b      	ldrb	r3, [r3, #1]
 80054e6:	2b01      	cmp	r3, #1
 80054e8:	d11c      	bne.n	8005524 <USB_EPStartXfer+0x8a8>
 80054ea:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80054ee:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80054f8:	b29b      	uxth	r3, r3
 80054fa:	461a      	mov	r2, r3
 80054fc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80054fe:	4413      	add	r3, r2
 8005500:	643b      	str	r3, [r7, #64]	@ 0x40
 8005502:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005506:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	781b      	ldrb	r3, [r3, #0]
 800550e:	011a      	lsls	r2, r3, #4
 8005510:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8005512:	4413      	add	r3, r2
 8005514:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005518:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800551a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800551e:	b29a      	uxth	r2, r3
 8005520:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8005522:	801a      	strh	r2, [r3, #0]
 8005524:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005528:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	895b      	ldrh	r3, [r3, #10]
 8005530:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8005534:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005538:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	6959      	ldr	r1, [r3, #20]
 8005540:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005544:	b29b      	uxth	r3, r3
 8005546:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 800554a:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 800554e:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 8005552:	6800      	ldr	r0, [r0, #0]
 8005554:	f001 f881 	bl	800665a <USB_WritePMA>
 8005558:	e227      	b.n	80059aa <USB_EPStartXfer+0xd2e>
 800555a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800555e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	6a1b      	ldr	r3, [r3, #32]
 8005566:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800556a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800556e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005572:	681a      	ldr	r2, [r3, #0]
 8005574:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005578:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	781b      	ldrb	r3, [r3, #0]
 8005580:	009b      	lsls	r3, r3, #2
 8005582:	4413      	add	r3, r2
 8005584:	881b      	ldrh	r3, [r3, #0]
 8005586:	b29b      	uxth	r3, r3
 8005588:	f423 43e2 	bic.w	r3, r3, #28928	@ 0x7100
 800558c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005590:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
 8005594:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005598:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800559c:	681a      	ldr	r2, [r3, #0]
 800559e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80055a2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	781b      	ldrb	r3, [r3, #0]
 80055aa:	009b      	lsls	r3, r3, #2
 80055ac:	441a      	add	r2, r3
 80055ae:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 80055b2:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80055b6:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80055ba:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80055be:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80055c2:	b29b      	uxth	r3, r3
 80055c4:	8013      	strh	r3, [r2, #0]
 80055c6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80055ca:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80055d2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80055d6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80055e0:	b29b      	uxth	r3, r3
 80055e2:	461a      	mov	r2, r3
 80055e4:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80055e6:	4413      	add	r3, r2
 80055e8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80055ea:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80055ee:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	781b      	ldrb	r3, [r3, #0]
 80055f6:	011a      	lsls	r2, r3, #4
 80055f8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80055fa:	4413      	add	r3, r2
 80055fc:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005600:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005602:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005606:	b29a      	uxth	r2, r3
 8005608:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800560a:	801a      	strh	r2, [r3, #0]
 800560c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005610:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	891b      	ldrh	r3, [r3, #8]
 8005618:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 800561c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005620:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	6959      	ldr	r1, [r3, #20]
 8005628:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800562c:	b29b      	uxth	r3, r3
 800562e:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8005632:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8005636:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 800563a:	6800      	ldr	r0, [r0, #0]
 800563c:	f001 f80d 	bl	800665a <USB_WritePMA>
 8005640:	e1b3      	b.n	80059aa <USB_EPStartXfer+0xd2e>
 8005642:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005646:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800564a:	681b      	ldr	r3, [r3, #0]
 800564c:	6a1a      	ldr	r2, [r3, #32]
 800564e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005652:	1ad2      	subs	r2, r2, r3
 8005654:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005658:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	621a      	str	r2, [r3, #32]
 8005660:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005664:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005668:	681a      	ldr	r2, [r3, #0]
 800566a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800566e:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	781b      	ldrb	r3, [r3, #0]
 8005676:	009b      	lsls	r3, r3, #2
 8005678:	4413      	add	r3, r2
 800567a:	881b      	ldrh	r3, [r3, #0]
 800567c:	b29b      	uxth	r3, r3
 800567e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005682:	2b00      	cmp	r3, #0
 8005684:	f000 80c6 	beq.w	8005814 <USB_EPStartXfer+0xb98>
 8005688:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800568c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	673b      	str	r3, [r7, #112]	@ 0x70
 8005694:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005698:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	785b      	ldrb	r3, [r3, #1]
 80056a0:	2b00      	cmp	r3, #0
 80056a2:	d177      	bne.n	8005794 <USB_EPStartXfer+0xb18>
 80056a4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80056a8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	66bb      	str	r3, [r7, #104]	@ 0x68
 80056b0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80056b4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80056be:	b29b      	uxth	r3, r3
 80056c0:	461a      	mov	r2, r3
 80056c2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80056c4:	4413      	add	r3, r2
 80056c6:	66bb      	str	r3, [r7, #104]	@ 0x68
 80056c8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80056cc:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	781b      	ldrb	r3, [r3, #0]
 80056d4:	011a      	lsls	r2, r3, #4
 80056d6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80056d8:	4413      	add	r3, r2
 80056da:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80056de:	667b      	str	r3, [r7, #100]	@ 0x64
 80056e0:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80056e2:	881b      	ldrh	r3, [r3, #0]
 80056e4:	b29b      	uxth	r3, r3
 80056e6:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80056ea:	b29a      	uxth	r2, r3
 80056ec:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80056ee:	801a      	strh	r2, [r3, #0]
 80056f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80056f4:	2b3e      	cmp	r3, #62	@ 0x3e
 80056f6:	d921      	bls.n	800573c <USB_EPStartXfer+0xac0>
 80056f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80056fc:	095b      	lsrs	r3, r3, #5
 80056fe:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005702:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005706:	f003 031f 	and.w	r3, r3, #31
 800570a:	2b00      	cmp	r3, #0
 800570c:	d104      	bne.n	8005718 <USB_EPStartXfer+0xa9c>
 800570e:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8005712:	3b01      	subs	r3, #1
 8005714:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005718:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800571a:	881b      	ldrh	r3, [r3, #0]
 800571c:	b29a      	uxth	r2, r3
 800571e:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8005722:	b29b      	uxth	r3, r3
 8005724:	029b      	lsls	r3, r3, #10
 8005726:	b29b      	uxth	r3, r3
 8005728:	4313      	orrs	r3, r2
 800572a:	b29b      	uxth	r3, r3
 800572c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005730:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005734:	b29a      	uxth	r2, r3
 8005736:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005738:	801a      	strh	r2, [r3, #0]
 800573a:	e050      	b.n	80057de <USB_EPStartXfer+0xb62>
 800573c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005740:	2b00      	cmp	r3, #0
 8005742:	d10a      	bne.n	800575a <USB_EPStartXfer+0xade>
 8005744:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005746:	881b      	ldrh	r3, [r3, #0]
 8005748:	b29b      	uxth	r3, r3
 800574a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800574e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005752:	b29a      	uxth	r2, r3
 8005754:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005756:	801a      	strh	r2, [r3, #0]
 8005758:	e041      	b.n	80057de <USB_EPStartXfer+0xb62>
 800575a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800575e:	085b      	lsrs	r3, r3, #1
 8005760:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005764:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005768:	f003 0301 	and.w	r3, r3, #1
 800576c:	2b00      	cmp	r3, #0
 800576e:	d004      	beq.n	800577a <USB_EPStartXfer+0xafe>
 8005770:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8005774:	3301      	adds	r3, #1
 8005776:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 800577a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800577c:	881b      	ldrh	r3, [r3, #0]
 800577e:	b29a      	uxth	r2, r3
 8005780:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8005784:	b29b      	uxth	r3, r3
 8005786:	029b      	lsls	r3, r3, #10
 8005788:	b29b      	uxth	r3, r3
 800578a:	4313      	orrs	r3, r2
 800578c:	b29a      	uxth	r2, r3
 800578e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8005790:	801a      	strh	r2, [r3, #0]
 8005792:	e024      	b.n	80057de <USB_EPStartXfer+0xb62>
 8005794:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005798:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	785b      	ldrb	r3, [r3, #1]
 80057a0:	2b01      	cmp	r3, #1
 80057a2:	d11c      	bne.n	80057de <USB_EPStartXfer+0xb62>
 80057a4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80057a8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80057b2:	b29b      	uxth	r3, r3
 80057b4:	461a      	mov	r2, r3
 80057b6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80057b8:	4413      	add	r3, r2
 80057ba:	673b      	str	r3, [r7, #112]	@ 0x70
 80057bc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80057c0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	781b      	ldrb	r3, [r3, #0]
 80057c8:	011a      	lsls	r2, r3, #4
 80057ca:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80057cc:	4413      	add	r3, r2
 80057ce:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 80057d2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80057d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80057d8:	b29a      	uxth	r2, r3
 80057da:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80057dc:	801a      	strh	r2, [r3, #0]
 80057de:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80057e2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	895b      	ldrh	r3, [r3, #10]
 80057ea:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 80057ee:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80057f2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	6959      	ldr	r1, [r3, #20]
 80057fa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80057fe:	b29b      	uxth	r3, r3
 8005800:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 8005804:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 8005808:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 800580c:	6800      	ldr	r0, [r0, #0]
 800580e:	f000 ff24 	bl	800665a <USB_WritePMA>
 8005812:	e0ca      	b.n	80059aa <USB_EPStartXfer+0xd2e>
 8005814:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005818:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	785b      	ldrb	r3, [r3, #1]
 8005820:	2b00      	cmp	r3, #0
 8005822:	d177      	bne.n	8005914 <USB_EPStartXfer+0xc98>
 8005824:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005828:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005830:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005834:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800583e:	b29b      	uxth	r3, r3
 8005840:	461a      	mov	r2, r3
 8005842:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8005844:	4413      	add	r3, r2
 8005846:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005848:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800584c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	781b      	ldrb	r3, [r3, #0]
 8005854:	011a      	lsls	r2, r3, #4
 8005856:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8005858:	4413      	add	r3, r2
 800585a:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 800585e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005860:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005862:	881b      	ldrh	r3, [r3, #0]
 8005864:	b29b      	uxth	r3, r3
 8005866:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800586a:	b29a      	uxth	r2, r3
 800586c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800586e:	801a      	strh	r2, [r3, #0]
 8005870:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005874:	2b3e      	cmp	r3, #62	@ 0x3e
 8005876:	d921      	bls.n	80058bc <USB_EPStartXfer+0xc40>
 8005878:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800587c:	095b      	lsrs	r3, r3, #5
 800587e:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8005882:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005886:	f003 031f 	and.w	r3, r3, #31
 800588a:	2b00      	cmp	r3, #0
 800588c:	d104      	bne.n	8005898 <USB_EPStartXfer+0xc1c>
 800588e:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8005892:	3b01      	subs	r3, #1
 8005894:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8005898:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800589a:	881b      	ldrh	r3, [r3, #0]
 800589c:	b29a      	uxth	r2, r3
 800589e:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 80058a2:	b29b      	uxth	r3, r3
 80058a4:	029b      	lsls	r3, r3, #10
 80058a6:	b29b      	uxth	r3, r3
 80058a8:	4313      	orrs	r3, r2
 80058aa:	b29b      	uxth	r3, r3
 80058ac:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80058b0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80058b4:	b29a      	uxth	r2, r3
 80058b6:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80058b8:	801a      	strh	r2, [r3, #0]
 80058ba:	e05c      	b.n	8005976 <USB_EPStartXfer+0xcfa>
 80058bc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80058c0:	2b00      	cmp	r3, #0
 80058c2:	d10a      	bne.n	80058da <USB_EPStartXfer+0xc5e>
 80058c4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80058c6:	881b      	ldrh	r3, [r3, #0]
 80058c8:	b29b      	uxth	r3, r3
 80058ca:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80058ce:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80058d2:	b29a      	uxth	r2, r3
 80058d4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80058d6:	801a      	strh	r2, [r3, #0]
 80058d8:	e04d      	b.n	8005976 <USB_EPStartXfer+0xcfa>
 80058da:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80058de:	085b      	lsrs	r3, r3, #1
 80058e0:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 80058e4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80058e8:	f003 0301 	and.w	r3, r3, #1
 80058ec:	2b00      	cmp	r3, #0
 80058ee:	d004      	beq.n	80058fa <USB_EPStartXfer+0xc7e>
 80058f0:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 80058f4:	3301      	adds	r3, #1
 80058f6:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 80058fa:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80058fc:	881b      	ldrh	r3, [r3, #0]
 80058fe:	b29a      	uxth	r2, r3
 8005900:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8005904:	b29b      	uxth	r3, r3
 8005906:	029b      	lsls	r3, r3, #10
 8005908:	b29b      	uxth	r3, r3
 800590a:	4313      	orrs	r3, r2
 800590c:	b29a      	uxth	r2, r3
 800590e:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8005910:	801a      	strh	r2, [r3, #0]
 8005912:	e030      	b.n	8005976 <USB_EPStartXfer+0xcfa>
 8005914:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005918:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	785b      	ldrb	r3, [r3, #1]
 8005920:	2b01      	cmp	r3, #1
 8005922:	d128      	bne.n	8005976 <USB_EPStartXfer+0xcfa>
 8005924:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005928:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005932:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005936:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005940:	b29b      	uxth	r3, r3
 8005942:	461a      	mov	r2, r3
 8005944:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005948:	4413      	add	r3, r2
 800594a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800594e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005952:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	781b      	ldrb	r3, [r3, #0]
 800595a:	011a      	lsls	r2, r3, #4
 800595c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8005960:	4413      	add	r3, r2
 8005962:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005966:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800596a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800596e:	b29a      	uxth	r2, r3
 8005970:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8005974:	801a      	strh	r2, [r3, #0]
 8005976:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800597a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	891b      	ldrh	r3, [r3, #8]
 8005982:	f8a7 3076 	strh.w	r3, [r7, #118]	@ 0x76
 8005986:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800598a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	6959      	ldr	r1, [r3, #20]
 8005992:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005996:	b29b      	uxth	r3, r3
 8005998:	f8b7 2076 	ldrh.w	r2, [r7, #118]	@ 0x76
 800599c:	f507 7084 	add.w	r0, r7, #264	@ 0x108
 80059a0:	f5a0 7082 	sub.w	r0, r0, #260	@ 0x104
 80059a4:	6800      	ldr	r0, [r0, #0]
 80059a6:	f000 fe58 	bl	800665a <USB_WritePMA>
 80059aa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80059ae:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80059b2:	681a      	ldr	r2, [r3, #0]
 80059b4:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80059b8:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	781b      	ldrb	r3, [r3, #0]
 80059c0:	009b      	lsls	r3, r3, #2
 80059c2:	4413      	add	r3, r2
 80059c4:	881b      	ldrh	r3, [r3, #0]
 80059c6:	b29b      	uxth	r3, r3
 80059c8:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80059cc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80059d0:	817b      	strh	r3, [r7, #10]
 80059d2:	897b      	ldrh	r3, [r7, #10]
 80059d4:	f083 0310 	eor.w	r3, r3, #16
 80059d8:	817b      	strh	r3, [r7, #10]
 80059da:	897b      	ldrh	r3, [r7, #10]
 80059dc:	f083 0320 	eor.w	r3, r3, #32
 80059e0:	817b      	strh	r3, [r7, #10]
 80059e2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80059e6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80059ea:	681a      	ldr	r2, [r3, #0]
 80059ec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80059f0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	781b      	ldrb	r3, [r3, #0]
 80059f8:	009b      	lsls	r3, r3, #2
 80059fa:	441a      	add	r2, r3
 80059fc:	897b      	ldrh	r3, [r7, #10]
 80059fe:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8005a02:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8005a06:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005a0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005a0e:	b29b      	uxth	r3, r3
 8005a10:	8013      	strh	r3, [r2, #0]
 8005a12:	f000 bcde 	b.w	80063d2 <USB_EPStartXfer+0x1756>
 8005a16:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a1a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	7b1b      	ldrb	r3, [r3, #12]
 8005a22:	2b00      	cmp	r3, #0
 8005a24:	f040 80bb 	bne.w	8005b9e <USB_EPStartXfer+0xf22>
 8005a28:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a2c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	699a      	ldr	r2, [r3, #24]
 8005a34:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a38:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	691b      	ldr	r3, [r3, #16]
 8005a40:	429a      	cmp	r2, r3
 8005a42:	d917      	bls.n	8005a74 <USB_EPStartXfer+0xdf8>
 8005a44:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a48:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a4c:	681b      	ldr	r3, [r3, #0]
 8005a4e:	691b      	ldr	r3, [r3, #16]
 8005a50:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8005a54:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a58:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	699a      	ldr	r2, [r3, #24]
 8005a60:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a64:	1ad2      	subs	r2, r2, r3
 8005a66:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a6a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	619a      	str	r2, [r3, #24]
 8005a72:	e00e      	b.n	8005a92 <USB_EPStartXfer+0xe16>
 8005a74:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a78:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	699b      	ldr	r3, [r3, #24]
 8005a80:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8005a84:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a88:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	2200      	movs	r2, #0
 8005a90:	619a      	str	r2, [r3, #24]
 8005a92:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005a96:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005aa0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005aa4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005aae:	b29b      	uxth	r3, r3
 8005ab0:	461a      	mov	r2, r3
 8005ab2:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8005ab6:	4413      	add	r3, r2
 8005ab8:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005abc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ac0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005ac4:	681b      	ldr	r3, [r3, #0]
 8005ac6:	781b      	ldrb	r3, [r3, #0]
 8005ac8:	011a      	lsls	r2, r3, #4
 8005aca:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8005ace:	4413      	add	r3, r2
 8005ad0:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005ad4:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005ad8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005adc:	881b      	ldrh	r3, [r3, #0]
 8005ade:	b29b      	uxth	r3, r3
 8005ae0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005ae4:	b29a      	uxth	r2, r3
 8005ae6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005aea:	801a      	strh	r2, [r3, #0]
 8005aec:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005af0:	2b3e      	cmp	r3, #62	@ 0x3e
 8005af2:	d924      	bls.n	8005b3e <USB_EPStartXfer+0xec2>
 8005af4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005af8:	095b      	lsrs	r3, r3, #5
 8005afa:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005afe:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b02:	f003 031f 	and.w	r3, r3, #31
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d104      	bne.n	8005b14 <USB_EPStartXfer+0xe98>
 8005b0a:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8005b0e:	3b01      	subs	r3, #1
 8005b10:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005b14:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b18:	881b      	ldrh	r3, [r3, #0]
 8005b1a:	b29a      	uxth	r2, r3
 8005b1c:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8005b20:	b29b      	uxth	r3, r3
 8005b22:	029b      	lsls	r3, r3, #10
 8005b24:	b29b      	uxth	r3, r3
 8005b26:	4313      	orrs	r3, r2
 8005b28:	b29b      	uxth	r3, r3
 8005b2a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005b2e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005b32:	b29a      	uxth	r2, r3
 8005b34:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b38:	801a      	strh	r2, [r3, #0]
 8005b3a:	f000 bc10 	b.w	800635e <USB_EPStartXfer+0x16e2>
 8005b3e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b42:	2b00      	cmp	r3, #0
 8005b44:	d10c      	bne.n	8005b60 <USB_EPStartXfer+0xee4>
 8005b46:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b4a:	881b      	ldrh	r3, [r3, #0]
 8005b4c:	b29b      	uxth	r3, r3
 8005b4e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005b52:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005b56:	b29a      	uxth	r2, r3
 8005b58:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b5c:	801a      	strh	r2, [r3, #0]
 8005b5e:	e3fe      	b.n	800635e <USB_EPStartXfer+0x16e2>
 8005b60:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b64:	085b      	lsrs	r3, r3, #1
 8005b66:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005b6a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b6e:	f003 0301 	and.w	r3, r3, #1
 8005b72:	2b00      	cmp	r3, #0
 8005b74:	d004      	beq.n	8005b80 <USB_EPStartXfer+0xf04>
 8005b76:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8005b7a:	3301      	adds	r3, #1
 8005b7c:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005b80:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b84:	881b      	ldrh	r3, [r3, #0]
 8005b86:	b29a      	uxth	r2, r3
 8005b88:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 8005b8c:	b29b      	uxth	r3, r3
 8005b8e:	029b      	lsls	r3, r3, #10
 8005b90:	b29b      	uxth	r3, r3
 8005b92:	4313      	orrs	r3, r2
 8005b94:	b29a      	uxth	r2, r3
 8005b96:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8005b9a:	801a      	strh	r2, [r3, #0]
 8005b9c:	e3df      	b.n	800635e <USB_EPStartXfer+0x16e2>
 8005b9e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ba2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	78db      	ldrb	r3, [r3, #3]
 8005baa:	2b02      	cmp	r3, #2
 8005bac:	f040 8218 	bne.w	8005fe0 <USB_EPStartXfer+0x1364>
 8005bb0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005bb4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	785b      	ldrb	r3, [r3, #1]
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	f040 809d 	bne.w	8005cfc <USB_EPStartXfer+0x1080>
 8005bc2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005bc6:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005bd0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005bd4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005bde:	b29b      	uxth	r3, r3
 8005be0:	461a      	mov	r2, r3
 8005be2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005be6:	4413      	add	r3, r2
 8005be8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005bec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005bf0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005bf4:	681b      	ldr	r3, [r3, #0]
 8005bf6:	781b      	ldrb	r3, [r3, #0]
 8005bf8:	011a      	lsls	r2, r3, #4
 8005bfa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005bfe:	4413      	add	r3, r2
 8005c00:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005c04:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005c08:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005c0c:	881b      	ldrh	r3, [r3, #0]
 8005c0e:	b29b      	uxth	r3, r3
 8005c10:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005c14:	b29a      	uxth	r2, r3
 8005c16:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005c1a:	801a      	strh	r2, [r3, #0]
 8005c1c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005c20:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	691b      	ldr	r3, [r3, #16]
 8005c28:	2b3e      	cmp	r3, #62	@ 0x3e
 8005c2a:	d92b      	bls.n	8005c84 <USB_EPStartXfer+0x1008>
 8005c2c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005c30:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	691b      	ldr	r3, [r3, #16]
 8005c38:	095b      	lsrs	r3, r3, #5
 8005c3a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005c3e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005c42:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	691b      	ldr	r3, [r3, #16]
 8005c4a:	f003 031f 	and.w	r3, r3, #31
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	d104      	bne.n	8005c5c <USB_EPStartXfer+0xfe0>
 8005c52:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005c56:	3b01      	subs	r3, #1
 8005c58:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005c5c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005c60:	881b      	ldrh	r3, [r3, #0]
 8005c62:	b29a      	uxth	r2, r3
 8005c64:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005c68:	b29b      	uxth	r3, r3
 8005c6a:	029b      	lsls	r3, r3, #10
 8005c6c:	b29b      	uxth	r3, r3
 8005c6e:	4313      	orrs	r3, r2
 8005c70:	b29b      	uxth	r3, r3
 8005c72:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005c76:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005c7a:	b29a      	uxth	r2, r3
 8005c7c:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005c80:	801a      	strh	r2, [r3, #0]
 8005c82:	e070      	b.n	8005d66 <USB_EPStartXfer+0x10ea>
 8005c84:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005c88:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	691b      	ldr	r3, [r3, #16]
 8005c90:	2b00      	cmp	r3, #0
 8005c92:	d10c      	bne.n	8005cae <USB_EPStartXfer+0x1032>
 8005c94:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005c98:	881b      	ldrh	r3, [r3, #0]
 8005c9a:	b29b      	uxth	r3, r3
 8005c9c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005ca0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005ca4:	b29a      	uxth	r2, r3
 8005ca6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005caa:	801a      	strh	r2, [r3, #0]
 8005cac:	e05b      	b.n	8005d66 <USB_EPStartXfer+0x10ea>
 8005cae:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005cb2:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005cb6:	681b      	ldr	r3, [r3, #0]
 8005cb8:	691b      	ldr	r3, [r3, #16]
 8005cba:	085b      	lsrs	r3, r3, #1
 8005cbc:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005cc0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005cc4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005cc8:	681b      	ldr	r3, [r3, #0]
 8005cca:	691b      	ldr	r3, [r3, #16]
 8005ccc:	f003 0301 	and.w	r3, r3, #1
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	d004      	beq.n	8005cde <USB_EPStartXfer+0x1062>
 8005cd4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005cd8:	3301      	adds	r3, #1
 8005cda:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005cde:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005ce2:	881b      	ldrh	r3, [r3, #0]
 8005ce4:	b29a      	uxth	r2, r3
 8005ce6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8005cea:	b29b      	uxth	r3, r3
 8005cec:	029b      	lsls	r3, r3, #10
 8005cee:	b29b      	uxth	r3, r3
 8005cf0:	4313      	orrs	r3, r2
 8005cf2:	b29a      	uxth	r2, r3
 8005cf4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005cf8:	801a      	strh	r2, [r3, #0]
 8005cfa:	e034      	b.n	8005d66 <USB_EPStartXfer+0x10ea>
 8005cfc:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d00:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005d04:	681b      	ldr	r3, [r3, #0]
 8005d06:	785b      	ldrb	r3, [r3, #1]
 8005d08:	2b01      	cmp	r3, #1
 8005d0a:	d12c      	bne.n	8005d66 <USB_EPStartXfer+0x10ea>
 8005d0c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d10:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005d1a:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d1e:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005d28:	b29b      	uxth	r3, r3
 8005d2a:	461a      	mov	r2, r3
 8005d2c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8005d30:	4413      	add	r3, r2
 8005d32:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005d36:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d3a:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	781b      	ldrb	r3, [r3, #0]
 8005d42:	011a      	lsls	r2, r3, #4
 8005d44:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8005d48:	4413      	add	r3, r2
 8005d4a:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 8005d4e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005d52:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d56:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	691b      	ldr	r3, [r3, #16]
 8005d5e:	b29a      	uxth	r2, r3
 8005d60:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8005d64:	801a      	strh	r2, [r3, #0]
 8005d66:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d6a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005d6e:	681b      	ldr	r3, [r3, #0]
 8005d70:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005d74:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d78:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	785b      	ldrb	r3, [r3, #1]
 8005d80:	2b00      	cmp	r3, #0
 8005d82:	f040 809d 	bne.w	8005ec0 <USB_EPStartXfer+0x1244>
 8005d86:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d8a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005d94:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005d98:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005da2:	b29b      	uxth	r3, r3
 8005da4:	461a      	mov	r2, r3
 8005da6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005daa:	4413      	add	r3, r2
 8005dac:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005db0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005db4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	781b      	ldrb	r3, [r3, #0]
 8005dbc:	011a      	lsls	r2, r3, #4
 8005dbe:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8005dc2:	4413      	add	r3, r2
 8005dc4:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005dc8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005dcc:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005dd0:	881b      	ldrh	r3, [r3, #0]
 8005dd2:	b29b      	uxth	r3, r3
 8005dd4:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005dd8:	b29a      	uxth	r2, r3
 8005dda:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005dde:	801a      	strh	r2, [r3, #0]
 8005de0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005de4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005de8:	681b      	ldr	r3, [r3, #0]
 8005dea:	691b      	ldr	r3, [r3, #16]
 8005dec:	2b3e      	cmp	r3, #62	@ 0x3e
 8005dee:	d92b      	bls.n	8005e48 <USB_EPStartXfer+0x11cc>
 8005df0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005df4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	691b      	ldr	r3, [r3, #16]
 8005dfc:	095b      	lsrs	r3, r3, #5
 8005dfe:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005e02:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005e06:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005e0a:	681b      	ldr	r3, [r3, #0]
 8005e0c:	691b      	ldr	r3, [r3, #16]
 8005e0e:	f003 031f 	and.w	r3, r3, #31
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d104      	bne.n	8005e20 <USB_EPStartXfer+0x11a4>
 8005e16:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e1a:	3b01      	subs	r3, #1
 8005e1c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005e20:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005e24:	881b      	ldrh	r3, [r3, #0]
 8005e26:	b29a      	uxth	r2, r3
 8005e28:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e2c:	b29b      	uxth	r3, r3
 8005e2e:	029b      	lsls	r3, r3, #10
 8005e30:	b29b      	uxth	r3, r3
 8005e32:	4313      	orrs	r3, r2
 8005e34:	b29b      	uxth	r3, r3
 8005e36:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005e3a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005e3e:	b29a      	uxth	r2, r3
 8005e40:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005e44:	801a      	strh	r2, [r3, #0]
 8005e46:	e069      	b.n	8005f1c <USB_EPStartXfer+0x12a0>
 8005e48:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005e4c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	691b      	ldr	r3, [r3, #16]
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d10c      	bne.n	8005e72 <USB_EPStartXfer+0x11f6>
 8005e58:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005e5c:	881b      	ldrh	r3, [r3, #0]
 8005e5e:	b29b      	uxth	r3, r3
 8005e60:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005e64:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005e68:	b29a      	uxth	r2, r3
 8005e6a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005e6e:	801a      	strh	r2, [r3, #0]
 8005e70:	e054      	b.n	8005f1c <USB_EPStartXfer+0x12a0>
 8005e72:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005e76:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	691b      	ldr	r3, [r3, #16]
 8005e7e:	085b      	lsrs	r3, r3, #1
 8005e80:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005e84:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005e88:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005e8c:	681b      	ldr	r3, [r3, #0]
 8005e8e:	691b      	ldr	r3, [r3, #16]
 8005e90:	f003 0301 	and.w	r3, r3, #1
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	d004      	beq.n	8005ea2 <USB_EPStartXfer+0x1226>
 8005e98:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005e9c:	3301      	adds	r3, #1
 8005e9e:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005ea2:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005ea6:	881b      	ldrh	r3, [r3, #0]
 8005ea8:	b29a      	uxth	r2, r3
 8005eaa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8005eae:	b29b      	uxth	r3, r3
 8005eb0:	029b      	lsls	r3, r3, #10
 8005eb2:	b29b      	uxth	r3, r3
 8005eb4:	4313      	orrs	r3, r2
 8005eb6:	b29a      	uxth	r2, r3
 8005eb8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8005ebc:	801a      	strh	r2, [r3, #0]
 8005ebe:	e02d      	b.n	8005f1c <USB_EPStartXfer+0x12a0>
 8005ec0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ec4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	785b      	ldrb	r3, [r3, #1]
 8005ecc:	2b01      	cmp	r3, #1
 8005ece:	d125      	bne.n	8005f1c <USB_EPStartXfer+0x12a0>
 8005ed0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ed4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8005ede:	b29b      	uxth	r3, r3
 8005ee0:	461a      	mov	r2, r3
 8005ee2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005ee6:	4413      	add	r3, r2
 8005ee8:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005eec:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ef0:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	781b      	ldrb	r3, [r3, #0]
 8005ef8:	011a      	lsls	r2, r3, #4
 8005efa:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005efe:	4413      	add	r3, r2
 8005f00:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8005f04:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005f08:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f0c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	691b      	ldr	r3, [r3, #16]
 8005f14:	b29a      	uxth	r2, r3
 8005f16:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8005f1a:	801a      	strh	r2, [r3, #0]
 8005f1c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f20:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005f24:	681b      	ldr	r3, [r3, #0]
 8005f26:	69db      	ldr	r3, [r3, #28]
 8005f28:	2b00      	cmp	r3, #0
 8005f2a:	f000 8218 	beq.w	800635e <USB_EPStartXfer+0x16e2>
 8005f2e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f32:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005f36:	681a      	ldr	r2, [r3, #0]
 8005f38:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f3c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	781b      	ldrb	r3, [r3, #0]
 8005f44:	009b      	lsls	r3, r3, #2
 8005f46:	4413      	add	r3, r2
 8005f48:	881b      	ldrh	r3, [r3, #0]
 8005f4a:	f8a7 3096 	strh.w	r3, [r7, #150]	@ 0x96
 8005f4e:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8005f52:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005f56:	2b00      	cmp	r3, #0
 8005f58:	d005      	beq.n	8005f66 <USB_EPStartXfer+0x12ea>
 8005f5a:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8005f5e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d10d      	bne.n	8005f82 <USB_EPStartXfer+0x1306>
 8005f66:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8005f6a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	f040 81f5 	bne.w	800635e <USB_EPStartXfer+0x16e2>
 8005f74:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8005f78:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f7c:	2b00      	cmp	r3, #0
 8005f7e:	f040 81ee 	bne.w	800635e <USB_EPStartXfer+0x16e2>
 8005f82:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f86:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005f8a:	681a      	ldr	r2, [r3, #0]
 8005f8c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005f90:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	781b      	ldrb	r3, [r3, #0]
 8005f98:	009b      	lsls	r3, r3, #2
 8005f9a:	4413      	add	r3, r2
 8005f9c:	881b      	ldrh	r3, [r3, #0]
 8005f9e:	b29b      	uxth	r3, r3
 8005fa0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005fa4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005fa8:	f8a7 3094 	strh.w	r3, [r7, #148]	@ 0x94
 8005fac:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005fb0:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8005fb4:	681a      	ldr	r2, [r3, #0]
 8005fb6:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005fba:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	781b      	ldrb	r3, [r3, #0]
 8005fc2:	009b      	lsls	r3, r3, #2
 8005fc4:	441a      	add	r2, r3
 8005fc6:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 8005fca:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8005fce:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8005fd2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005fd6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8005fda:	b29b      	uxth	r3, r3
 8005fdc:	8013      	strh	r3, [r2, #0]
 8005fde:	e1be      	b.n	800635e <USB_EPStartXfer+0x16e2>
 8005fe0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005fe4:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	78db      	ldrb	r3, [r3, #3]
 8005fec:	2b01      	cmp	r3, #1
 8005fee:	f040 81b4 	bne.w	800635a <USB_EPStartXfer+0x16de>
 8005ff2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8005ff6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	699a      	ldr	r2, [r3, #24]
 8005ffe:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006002:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006006:	681b      	ldr	r3, [r3, #0]
 8006008:	691b      	ldr	r3, [r3, #16]
 800600a:	429a      	cmp	r2, r3
 800600c:	d917      	bls.n	800603e <USB_EPStartXfer+0x13c2>
 800600e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006012:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006016:	681b      	ldr	r3, [r3, #0]
 8006018:	691b      	ldr	r3, [r3, #16]
 800601a:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800601e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006022:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006026:	681b      	ldr	r3, [r3, #0]
 8006028:	699a      	ldr	r2, [r3, #24]
 800602a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800602e:	1ad2      	subs	r2, r2, r3
 8006030:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006034:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006038:	681b      	ldr	r3, [r3, #0]
 800603a:	619a      	str	r2, [r3, #24]
 800603c:	e00e      	b.n	800605c <USB_EPStartXfer+0x13e0>
 800603e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006042:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	699b      	ldr	r3, [r3, #24]
 800604a:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800604e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006052:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006056:	681b      	ldr	r3, [r3, #0]
 8006058:	2200      	movs	r2, #0
 800605a:	619a      	str	r2, [r3, #24]
 800605c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006060:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	785b      	ldrb	r3, [r3, #1]
 8006068:	2b00      	cmp	r3, #0
 800606a:	f040 8085 	bne.w	8006178 <USB_EPStartXfer+0x14fc>
 800606e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006072:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800607c:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006080:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 800608a:	b29b      	uxth	r3, r3
 800608c:	461a      	mov	r2, r3
 800608e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8006092:	4413      	add	r3, r2
 8006094:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8006098:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800609c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	781b      	ldrb	r3, [r3, #0]
 80060a4:	011a      	lsls	r2, r3, #4
 80060a6:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 80060aa:	4413      	add	r3, r2
 80060ac:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 80060b0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80060b4:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80060b8:	881b      	ldrh	r3, [r3, #0]
 80060ba:	b29b      	uxth	r3, r3
 80060bc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80060c0:	b29a      	uxth	r2, r3
 80060c2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80060c6:	801a      	strh	r2, [r3, #0]
 80060c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80060cc:	2b3e      	cmp	r3, #62	@ 0x3e
 80060ce:	d923      	bls.n	8006118 <USB_EPStartXfer+0x149c>
 80060d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80060d4:	095b      	lsrs	r3, r3, #5
 80060d6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80060da:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80060de:	f003 031f 	and.w	r3, r3, #31
 80060e2:	2b00      	cmp	r3, #0
 80060e4:	d104      	bne.n	80060f0 <USB_EPStartXfer+0x1474>
 80060e6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80060ea:	3b01      	subs	r3, #1
 80060ec:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80060f0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 80060f4:	881b      	ldrh	r3, [r3, #0]
 80060f6:	b29a      	uxth	r2, r3
 80060f8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80060fc:	b29b      	uxth	r3, r3
 80060fe:	029b      	lsls	r3, r3, #10
 8006100:	b29b      	uxth	r3, r3
 8006102:	4313      	orrs	r3, r2
 8006104:	b29b      	uxth	r3, r3
 8006106:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800610a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800610e:	b29a      	uxth	r2, r3
 8006110:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006114:	801a      	strh	r2, [r3, #0]
 8006116:	e060      	b.n	80061da <USB_EPStartXfer+0x155e>
 8006118:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800611c:	2b00      	cmp	r3, #0
 800611e:	d10c      	bne.n	800613a <USB_EPStartXfer+0x14be>
 8006120:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006124:	881b      	ldrh	r3, [r3, #0]
 8006126:	b29b      	uxth	r3, r3
 8006128:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800612c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8006130:	b29a      	uxth	r2, r3
 8006132:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006136:	801a      	strh	r2, [r3, #0]
 8006138:	e04f      	b.n	80061da <USB_EPStartXfer+0x155e>
 800613a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800613e:	085b      	lsrs	r3, r3, #1
 8006140:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8006144:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006148:	f003 0301 	and.w	r3, r3, #1
 800614c:	2b00      	cmp	r3, #0
 800614e:	d004      	beq.n	800615a <USB_EPStartXfer+0x14de>
 8006150:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006154:	3301      	adds	r3, #1
 8006156:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800615a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800615e:	881b      	ldrh	r3, [r3, #0]
 8006160:	b29a      	uxth	r2, r3
 8006162:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8006166:	b29b      	uxth	r3, r3
 8006168:	029b      	lsls	r3, r3, #10
 800616a:	b29b      	uxth	r3, r3
 800616c:	4313      	orrs	r3, r2
 800616e:	b29a      	uxth	r2, r3
 8006170:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8006174:	801a      	strh	r2, [r3, #0]
 8006176:	e030      	b.n	80061da <USB_EPStartXfer+0x155e>
 8006178:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800617c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006180:	681b      	ldr	r3, [r3, #0]
 8006182:	785b      	ldrb	r3, [r3, #1]
 8006184:	2b01      	cmp	r3, #1
 8006186:	d128      	bne.n	80061da <USB_EPStartXfer+0x155e>
 8006188:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800618c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8006196:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800619a:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 80061a4:	b29b      	uxth	r3, r3
 80061a6:	461a      	mov	r2, r3
 80061a8:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80061ac:	4413      	add	r3, r2
 80061ae:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80061b2:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80061b6:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	781b      	ldrb	r3, [r3, #0]
 80061be:	011a      	lsls	r2, r3, #4
 80061c0:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80061c4:	4413      	add	r3, r2
 80061c6:	f203 4304 	addw	r3, r3, #1028	@ 0x404
 80061ca:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80061ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80061d2:	b29a      	uxth	r2, r3
 80061d4:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 80061d8:	801a      	strh	r2, [r3, #0]
 80061da:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80061de:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80061e2:	681b      	ldr	r3, [r3, #0]
 80061e4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80061e8:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80061ec:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	785b      	ldrb	r3, [r3, #1]
 80061f4:	2b00      	cmp	r3, #0
 80061f6:	f040 8085 	bne.w	8006304 <USB_EPStartXfer+0x1688>
 80061fa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80061fe:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8006208:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800620c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8006216:	b29b      	uxth	r3, r3
 8006218:	461a      	mov	r2, r3
 800621a:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 800621e:	4413      	add	r3, r2
 8006220:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8006224:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006228:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	781b      	ldrb	r3, [r3, #0]
 8006230:	011a      	lsls	r2, r3, #4
 8006232:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8006236:	4413      	add	r3, r2
 8006238:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800623c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006240:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006244:	881b      	ldrh	r3, [r3, #0]
 8006246:	b29b      	uxth	r3, r3
 8006248:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800624c:	b29a      	uxth	r2, r3
 800624e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006252:	801a      	strh	r2, [r3, #0]
 8006254:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006258:	2b3e      	cmp	r3, #62	@ 0x3e
 800625a:	d923      	bls.n	80062a4 <USB_EPStartXfer+0x1628>
 800625c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006260:	095b      	lsrs	r3, r3, #5
 8006262:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8006266:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800626a:	f003 031f 	and.w	r3, r3, #31
 800626e:	2b00      	cmp	r3, #0
 8006270:	d104      	bne.n	800627c <USB_EPStartXfer+0x1600>
 8006272:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006276:	3b01      	subs	r3, #1
 8006278:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800627c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006280:	881b      	ldrh	r3, [r3, #0]
 8006282:	b29a      	uxth	r2, r3
 8006284:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8006288:	b29b      	uxth	r3, r3
 800628a:	029b      	lsls	r3, r3, #10
 800628c:	b29b      	uxth	r3, r3
 800628e:	4313      	orrs	r3, r2
 8006290:	b29b      	uxth	r3, r3
 8006292:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8006296:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800629a:	b29a      	uxth	r2, r3
 800629c:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80062a0:	801a      	strh	r2, [r3, #0]
 80062a2:	e05c      	b.n	800635e <USB_EPStartXfer+0x16e2>
 80062a4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d10c      	bne.n	80062c6 <USB_EPStartXfer+0x164a>
 80062ac:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80062b0:	881b      	ldrh	r3, [r3, #0]
 80062b2:	b29b      	uxth	r3, r3
 80062b4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80062b8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80062bc:	b29a      	uxth	r2, r3
 80062be:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80062c2:	801a      	strh	r2, [r3, #0]
 80062c4:	e04b      	b.n	800635e <USB_EPStartXfer+0x16e2>
 80062c6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062ca:	085b      	lsrs	r3, r3, #1
 80062cc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80062d0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062d4:	f003 0301 	and.w	r3, r3, #1
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d004      	beq.n	80062e6 <USB_EPStartXfer+0x166a>
 80062dc:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80062e0:	3301      	adds	r3, #1
 80062e2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80062e6:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 80062ea:	881b      	ldrh	r3, [r3, #0]
 80062ec:	b29a      	uxth	r2, r3
 80062ee:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80062f2:	b29b      	uxth	r3, r3
 80062f4:	029b      	lsls	r3, r3, #10
 80062f6:	b29b      	uxth	r3, r3
 80062f8:	4313      	orrs	r3, r2
 80062fa:	b29a      	uxth	r2, r3
 80062fc:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8006300:	801a      	strh	r2, [r3, #0]
 8006302:	e02c      	b.n	800635e <USB_EPStartXfer+0x16e2>
 8006304:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006308:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 800630c:	681b      	ldr	r3, [r3, #0]
 800630e:	785b      	ldrb	r3, [r3, #1]
 8006310:	2b01      	cmp	r3, #1
 8006312:	d124      	bne.n	800635e <USB_EPStartXfer+0x16e2>
 8006314:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006318:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	@ 0x50
 8006322:	b29b      	uxth	r3, r3
 8006324:	461a      	mov	r2, r3
 8006326:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 800632a:	4413      	add	r3, r2
 800632c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8006330:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006334:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006338:	681b      	ldr	r3, [r3, #0]
 800633a:	781b      	ldrb	r3, [r3, #0]
 800633c:	011a      	lsls	r2, r3, #4
 800633e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8006342:	4413      	add	r3, r2
 8006344:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 8006348:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800634c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006350:	b29a      	uxth	r2, r3
 8006352:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8006356:	801a      	strh	r2, [r3, #0]
 8006358:	e001      	b.n	800635e <USB_EPStartXfer+0x16e2>
 800635a:	2301      	movs	r3, #1
 800635c:	e03a      	b.n	80063d4 <USB_EPStartXfer+0x1758>
 800635e:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 8006362:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 8006366:	681a      	ldr	r2, [r3, #0]
 8006368:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 800636c:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	781b      	ldrb	r3, [r3, #0]
 8006374:	009b      	lsls	r3, r3, #2
 8006376:	4413      	add	r3, r2
 8006378:	881b      	ldrh	r3, [r3, #0]
 800637a:	b29b      	uxth	r3, r3
 800637c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006380:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006384:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 8006388:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800638c:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8006390:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 8006394:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 8006398:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 800639c:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 80063a0:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80063a4:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80063a8:	681a      	ldr	r2, [r3, #0]
 80063aa:	f507 7384 	add.w	r3, r7, #264	@ 0x108
 80063ae:	f5a3 7384 	sub.w	r3, r3, #264	@ 0x108
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	781b      	ldrb	r3, [r3, #0]
 80063b6:	009b      	lsls	r3, r3, #2
 80063b8:	441a      	add	r2, r3
 80063ba:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 80063be:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80063c2:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80063c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80063ca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80063ce:	b29b      	uxth	r3, r3
 80063d0:	8013      	strh	r3, [r2, #0]
 80063d2:	2300      	movs	r3, #0
 80063d4:	4618      	mov	r0, r3
 80063d6:	f507 7784 	add.w	r7, r7, #264	@ 0x108
 80063da:	46bd      	mov	sp, r7
 80063dc:	bd80      	pop	{r7, pc}

080063de <USB_EPSetStall>:
 80063de:	b480      	push	{r7}
 80063e0:	b085      	sub	sp, #20
 80063e2:	af00      	add	r7, sp, #0
 80063e4:	6078      	str	r0, [r7, #4]
 80063e6:	6039      	str	r1, [r7, #0]
 80063e8:	683b      	ldr	r3, [r7, #0]
 80063ea:	785b      	ldrb	r3, [r3, #1]
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d020      	beq.n	8006432 <USB_EPSetStall+0x54>
 80063f0:	687a      	ldr	r2, [r7, #4]
 80063f2:	683b      	ldr	r3, [r7, #0]
 80063f4:	781b      	ldrb	r3, [r3, #0]
 80063f6:	009b      	lsls	r3, r3, #2
 80063f8:	4413      	add	r3, r2
 80063fa:	881b      	ldrh	r3, [r3, #0]
 80063fc:	b29b      	uxth	r3, r3
 80063fe:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006402:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006406:	81bb      	strh	r3, [r7, #12]
 8006408:	89bb      	ldrh	r3, [r7, #12]
 800640a:	f083 0310 	eor.w	r3, r3, #16
 800640e:	81bb      	strh	r3, [r7, #12]
 8006410:	687a      	ldr	r2, [r7, #4]
 8006412:	683b      	ldr	r3, [r7, #0]
 8006414:	781b      	ldrb	r3, [r3, #0]
 8006416:	009b      	lsls	r3, r3, #2
 8006418:	441a      	add	r2, r3
 800641a:	89bb      	ldrh	r3, [r7, #12]
 800641c:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8006420:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8006424:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006428:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800642c:	b29b      	uxth	r3, r3
 800642e:	8013      	strh	r3, [r2, #0]
 8006430:	e01f      	b.n	8006472 <USB_EPSetStall+0x94>
 8006432:	687a      	ldr	r2, [r7, #4]
 8006434:	683b      	ldr	r3, [r7, #0]
 8006436:	781b      	ldrb	r3, [r3, #0]
 8006438:	009b      	lsls	r3, r3, #2
 800643a:	4413      	add	r3, r2
 800643c:	881b      	ldrh	r3, [r3, #0]
 800643e:	b29b      	uxth	r3, r3
 8006440:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006444:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006448:	81fb      	strh	r3, [r7, #14]
 800644a:	89fb      	ldrh	r3, [r7, #14]
 800644c:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 8006450:	81fb      	strh	r3, [r7, #14]
 8006452:	687a      	ldr	r2, [r7, #4]
 8006454:	683b      	ldr	r3, [r7, #0]
 8006456:	781b      	ldrb	r3, [r3, #0]
 8006458:	009b      	lsls	r3, r3, #2
 800645a:	441a      	add	r2, r3
 800645c:	89fb      	ldrh	r3, [r7, #14]
 800645e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8006462:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8006466:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800646a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800646e:	b29b      	uxth	r3, r3
 8006470:	8013      	strh	r3, [r2, #0]
 8006472:	2300      	movs	r3, #0
 8006474:	4618      	mov	r0, r3
 8006476:	3714      	adds	r7, #20
 8006478:	46bd      	mov	sp, r7
 800647a:	bc80      	pop	{r7}
 800647c:	4770      	bx	lr

0800647e <USB_EPClearStall>:
 800647e:	b480      	push	{r7}
 8006480:	b087      	sub	sp, #28
 8006482:	af00      	add	r7, sp, #0
 8006484:	6078      	str	r0, [r7, #4]
 8006486:	6039      	str	r1, [r7, #0]
 8006488:	683b      	ldr	r3, [r7, #0]
 800648a:	7b1b      	ldrb	r3, [r3, #12]
 800648c:	2b00      	cmp	r3, #0
 800648e:	f040 809d 	bne.w	80065cc <USB_EPClearStall+0x14e>
 8006492:	683b      	ldr	r3, [r7, #0]
 8006494:	785b      	ldrb	r3, [r3, #1]
 8006496:	2b00      	cmp	r3, #0
 8006498:	d04c      	beq.n	8006534 <USB_EPClearStall+0xb6>
 800649a:	687a      	ldr	r2, [r7, #4]
 800649c:	683b      	ldr	r3, [r7, #0]
 800649e:	781b      	ldrb	r3, [r3, #0]
 80064a0:	009b      	lsls	r3, r3, #2
 80064a2:	4413      	add	r3, r2
 80064a4:	881b      	ldrh	r3, [r3, #0]
 80064a6:	823b      	strh	r3, [r7, #16]
 80064a8:	8a3b      	ldrh	r3, [r7, #16]
 80064aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	d01b      	beq.n	80064ea <USB_EPClearStall+0x6c>
 80064b2:	687a      	ldr	r2, [r7, #4]
 80064b4:	683b      	ldr	r3, [r7, #0]
 80064b6:	781b      	ldrb	r3, [r3, #0]
 80064b8:	009b      	lsls	r3, r3, #2
 80064ba:	4413      	add	r3, r2
 80064bc:	881b      	ldrh	r3, [r3, #0]
 80064be:	b29b      	uxth	r3, r3
 80064c0:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80064c4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80064c8:	81fb      	strh	r3, [r7, #14]
 80064ca:	687a      	ldr	r2, [r7, #4]
 80064cc:	683b      	ldr	r3, [r7, #0]
 80064ce:	781b      	ldrb	r3, [r3, #0]
 80064d0:	009b      	lsls	r3, r3, #2
 80064d2:	441a      	add	r2, r3
 80064d4:	89fb      	ldrh	r3, [r7, #14]
 80064d6:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80064da:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80064de:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80064e2:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80064e6:	b29b      	uxth	r3, r3
 80064e8:	8013      	strh	r3, [r2, #0]
 80064ea:	683b      	ldr	r3, [r7, #0]
 80064ec:	78db      	ldrb	r3, [r3, #3]
 80064ee:	2b01      	cmp	r3, #1
 80064f0:	d06c      	beq.n	80065cc <USB_EPClearStall+0x14e>
 80064f2:	687a      	ldr	r2, [r7, #4]
 80064f4:	683b      	ldr	r3, [r7, #0]
 80064f6:	781b      	ldrb	r3, [r3, #0]
 80064f8:	009b      	lsls	r3, r3, #2
 80064fa:	4413      	add	r3, r2
 80064fc:	881b      	ldrh	r3, [r3, #0]
 80064fe:	b29b      	uxth	r3, r3
 8006500:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006504:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006508:	81bb      	strh	r3, [r7, #12]
 800650a:	89bb      	ldrh	r3, [r7, #12]
 800650c:	f083 0320 	eor.w	r3, r3, #32
 8006510:	81bb      	strh	r3, [r7, #12]
 8006512:	687a      	ldr	r2, [r7, #4]
 8006514:	683b      	ldr	r3, [r7, #0]
 8006516:	781b      	ldrb	r3, [r3, #0]
 8006518:	009b      	lsls	r3, r3, #2
 800651a:	441a      	add	r2, r3
 800651c:	89bb      	ldrh	r3, [r7, #12]
 800651e:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8006522:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8006526:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800652a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800652e:	b29b      	uxth	r3, r3
 8006530:	8013      	strh	r3, [r2, #0]
 8006532:	e04b      	b.n	80065cc <USB_EPClearStall+0x14e>
 8006534:	687a      	ldr	r2, [r7, #4]
 8006536:	683b      	ldr	r3, [r7, #0]
 8006538:	781b      	ldrb	r3, [r3, #0]
 800653a:	009b      	lsls	r3, r3, #2
 800653c:	4413      	add	r3, r2
 800653e:	881b      	ldrh	r3, [r3, #0]
 8006540:	82fb      	strh	r3, [r7, #22]
 8006542:	8afb      	ldrh	r3, [r7, #22]
 8006544:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006548:	2b00      	cmp	r3, #0
 800654a:	d01b      	beq.n	8006584 <USB_EPClearStall+0x106>
 800654c:	687a      	ldr	r2, [r7, #4]
 800654e:	683b      	ldr	r3, [r7, #0]
 8006550:	781b      	ldrb	r3, [r3, #0]
 8006552:	009b      	lsls	r3, r3, #2
 8006554:	4413      	add	r3, r2
 8006556:	881b      	ldrh	r3, [r3, #0]
 8006558:	b29b      	uxth	r3, r3
 800655a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800655e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006562:	82bb      	strh	r3, [r7, #20]
 8006564:	687a      	ldr	r2, [r7, #4]
 8006566:	683b      	ldr	r3, [r7, #0]
 8006568:	781b      	ldrb	r3, [r3, #0]
 800656a:	009b      	lsls	r3, r3, #2
 800656c:	441a      	add	r2, r3
 800656e:	8abb      	ldrh	r3, [r7, #20]
 8006570:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 8006574:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 8006578:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800657c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006580:	b29b      	uxth	r3, r3
 8006582:	8013      	strh	r3, [r2, #0]
 8006584:	687a      	ldr	r2, [r7, #4]
 8006586:	683b      	ldr	r3, [r7, #0]
 8006588:	781b      	ldrb	r3, [r3, #0]
 800658a:	009b      	lsls	r3, r3, #2
 800658c:	4413      	add	r3, r2
 800658e:	881b      	ldrh	r3, [r3, #0]
 8006590:	b29b      	uxth	r3, r3
 8006592:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006596:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800659a:	827b      	strh	r3, [r7, #18]
 800659c:	8a7b      	ldrh	r3, [r7, #18]
 800659e:	f483 5380 	eor.w	r3, r3, #4096	@ 0x1000
 80065a2:	827b      	strh	r3, [r7, #18]
 80065a4:	8a7b      	ldrh	r3, [r7, #18]
 80065a6:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 80065aa:	827b      	strh	r3, [r7, #18]
 80065ac:	687a      	ldr	r2, [r7, #4]
 80065ae:	683b      	ldr	r3, [r7, #0]
 80065b0:	781b      	ldrb	r3, [r3, #0]
 80065b2:	009b      	lsls	r3, r3, #2
 80065b4:	441a      	add	r2, r3
 80065b6:	8a7b      	ldrh	r3, [r7, #18]
 80065b8:	f043 437f 	orr.w	r3, r3, #4278190080	@ 0xff000000
 80065bc:	f443 037f 	orr.w	r3, r3, #16711680	@ 0xff0000
 80065c0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80065c4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80065c8:	b29b      	uxth	r3, r3
 80065ca:	8013      	strh	r3, [r2, #0]
 80065cc:	2300      	movs	r3, #0
 80065ce:	4618      	mov	r0, r3
 80065d0:	371c      	adds	r7, #28
 80065d2:	46bd      	mov	sp, r7
 80065d4:	bc80      	pop	{r7}
 80065d6:	4770      	bx	lr

080065d8 <USB_SetDevAddress>:
 80065d8:	b480      	push	{r7}
 80065da:	b083      	sub	sp, #12
 80065dc:	af00      	add	r7, sp, #0
 80065de:	6078      	str	r0, [r7, #4]
 80065e0:	460b      	mov	r3, r1
 80065e2:	70fb      	strb	r3, [r7, #3]
 80065e4:	78fb      	ldrb	r3, [r7, #3]
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d103      	bne.n	80065f2 <USB_SetDevAddress+0x1a>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	2280      	movs	r2, #128	@ 0x80
 80065ee:	f8a3 204c 	strh.w	r2, [r3, #76]	@ 0x4c
 80065f2:	2300      	movs	r3, #0
 80065f4:	4618      	mov	r0, r3
 80065f6:	370c      	adds	r7, #12
 80065f8:	46bd      	mov	sp, r7
 80065fa:	bc80      	pop	{r7}
 80065fc:	4770      	bx	lr

080065fe <USB_DevConnect>:
 80065fe:	b480      	push	{r7}
 8006600:	b083      	sub	sp, #12
 8006602:	af00      	add	r7, sp, #0
 8006604:	6078      	str	r0, [r7, #4]
 8006606:	2300      	movs	r3, #0
 8006608:	4618      	mov	r0, r3
 800660a:	370c      	adds	r7, #12
 800660c:	46bd      	mov	sp, r7
 800660e:	bc80      	pop	{r7}
 8006610:	4770      	bx	lr

08006612 <USB_DevDisconnect>:
 8006612:	b480      	push	{r7}
 8006614:	b083      	sub	sp, #12
 8006616:	af00      	add	r7, sp, #0
 8006618:	6078      	str	r0, [r7, #4]
 800661a:	2300      	movs	r3, #0
 800661c:	4618      	mov	r0, r3
 800661e:	370c      	adds	r7, #12
 8006620:	46bd      	mov	sp, r7
 8006622:	bc80      	pop	{r7}
 8006624:	4770      	bx	lr

08006626 <USB_ReadInterrupts>:
 8006626:	b480      	push	{r7}
 8006628:	b085      	sub	sp, #20
 800662a:	af00      	add	r7, sp, #0
 800662c:	6078      	str	r0, [r7, #4]
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	f8b3 3044 	ldrh.w	r3, [r3, #68]	@ 0x44
 8006634:	b29b      	uxth	r3, r3
 8006636:	60fb      	str	r3, [r7, #12]
 8006638:	68fb      	ldr	r3, [r7, #12]
 800663a:	4618      	mov	r0, r3
 800663c:	3714      	adds	r7, #20
 800663e:	46bd      	mov	sp, r7
 8006640:	bc80      	pop	{r7}
 8006642:	4770      	bx	lr

08006644 <USB_EP0_OutStart>:
 8006644:	b480      	push	{r7}
 8006646:	b083      	sub	sp, #12
 8006648:	af00      	add	r7, sp, #0
 800664a:	6078      	str	r0, [r7, #4]
 800664c:	6039      	str	r1, [r7, #0]
 800664e:	2300      	movs	r3, #0
 8006650:	4618      	mov	r0, r3
 8006652:	370c      	adds	r7, #12
 8006654:	46bd      	mov	sp, r7
 8006656:	bc80      	pop	{r7}
 8006658:	4770      	bx	lr

0800665a <USB_WritePMA>:
 800665a:	b480      	push	{r7}
 800665c:	b08b      	sub	sp, #44	@ 0x2c
 800665e:	af00      	add	r7, sp, #0
 8006660:	60f8      	str	r0, [r7, #12]
 8006662:	60b9      	str	r1, [r7, #8]
 8006664:	4611      	mov	r1, r2
 8006666:	461a      	mov	r2, r3
 8006668:	460b      	mov	r3, r1
 800666a:	80fb      	strh	r3, [r7, #6]
 800666c:	4613      	mov	r3, r2
 800666e:	80bb      	strh	r3, [r7, #4]
 8006670:	88bb      	ldrh	r3, [r7, #4]
 8006672:	3301      	adds	r3, #1
 8006674:	085b      	lsrs	r3, r3, #1
 8006676:	61bb      	str	r3, [r7, #24]
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	617b      	str	r3, [r7, #20]
 800667c:	68bb      	ldr	r3, [r7, #8]
 800667e:	61fb      	str	r3, [r7, #28]
 8006680:	88fb      	ldrh	r3, [r7, #6]
 8006682:	005a      	lsls	r2, r3, #1
 8006684:	697b      	ldr	r3, [r7, #20]
 8006686:	4413      	add	r3, r2
 8006688:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800668c:	623b      	str	r3, [r7, #32]
 800668e:	69bb      	ldr	r3, [r7, #24]
 8006690:	627b      	str	r3, [r7, #36]	@ 0x24
 8006692:	e01f      	b.n	80066d4 <USB_WritePMA+0x7a>
 8006694:	69fb      	ldr	r3, [r7, #28]
 8006696:	781b      	ldrb	r3, [r3, #0]
 8006698:	827b      	strh	r3, [r7, #18]
 800669a:	69fb      	ldr	r3, [r7, #28]
 800669c:	3301      	adds	r3, #1
 800669e:	781b      	ldrb	r3, [r3, #0]
 80066a0:	b21b      	sxth	r3, r3
 80066a2:	021b      	lsls	r3, r3, #8
 80066a4:	b21a      	sxth	r2, r3
 80066a6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80066aa:	4313      	orrs	r3, r2
 80066ac:	b21b      	sxth	r3, r3
 80066ae:	827b      	strh	r3, [r7, #18]
 80066b0:	6a3b      	ldr	r3, [r7, #32]
 80066b2:	8a7a      	ldrh	r2, [r7, #18]
 80066b4:	801a      	strh	r2, [r3, #0]
 80066b6:	6a3b      	ldr	r3, [r7, #32]
 80066b8:	3302      	adds	r3, #2
 80066ba:	623b      	str	r3, [r7, #32]
 80066bc:	6a3b      	ldr	r3, [r7, #32]
 80066be:	3302      	adds	r3, #2
 80066c0:	623b      	str	r3, [r7, #32]
 80066c2:	69fb      	ldr	r3, [r7, #28]
 80066c4:	3301      	adds	r3, #1
 80066c6:	61fb      	str	r3, [r7, #28]
 80066c8:	69fb      	ldr	r3, [r7, #28]
 80066ca:	3301      	adds	r3, #1
 80066cc:	61fb      	str	r3, [r7, #28]
 80066ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066d0:	3b01      	subs	r3, #1
 80066d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80066d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d1dc      	bne.n	8006694 <USB_WritePMA+0x3a>
 80066da:	bf00      	nop
 80066dc:	bf00      	nop
 80066de:	372c      	adds	r7, #44	@ 0x2c
 80066e0:	46bd      	mov	sp, r7
 80066e2:	bc80      	pop	{r7}
 80066e4:	4770      	bx	lr

080066e6 <USB_ReadPMA>:
 80066e6:	b480      	push	{r7}
 80066e8:	b08b      	sub	sp, #44	@ 0x2c
 80066ea:	af00      	add	r7, sp, #0
 80066ec:	60f8      	str	r0, [r7, #12]
 80066ee:	60b9      	str	r1, [r7, #8]
 80066f0:	4611      	mov	r1, r2
 80066f2:	461a      	mov	r2, r3
 80066f4:	460b      	mov	r3, r1
 80066f6:	80fb      	strh	r3, [r7, #6]
 80066f8:	4613      	mov	r3, r2
 80066fa:	80bb      	strh	r3, [r7, #4]
 80066fc:	88bb      	ldrh	r3, [r7, #4]
 80066fe:	085b      	lsrs	r3, r3, #1
 8006700:	b29b      	uxth	r3, r3
 8006702:	61bb      	str	r3, [r7, #24]
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	617b      	str	r3, [r7, #20]
 8006708:	68bb      	ldr	r3, [r7, #8]
 800670a:	61fb      	str	r3, [r7, #28]
 800670c:	88fb      	ldrh	r3, [r7, #6]
 800670e:	005a      	lsls	r2, r3, #1
 8006710:	697b      	ldr	r3, [r7, #20]
 8006712:	4413      	add	r3, r2
 8006714:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006718:	623b      	str	r3, [r7, #32]
 800671a:	69bb      	ldr	r3, [r7, #24]
 800671c:	627b      	str	r3, [r7, #36]	@ 0x24
 800671e:	e01b      	b.n	8006758 <USB_ReadPMA+0x72>
 8006720:	6a3b      	ldr	r3, [r7, #32]
 8006722:	881b      	ldrh	r3, [r3, #0]
 8006724:	b29b      	uxth	r3, r3
 8006726:	613b      	str	r3, [r7, #16]
 8006728:	6a3b      	ldr	r3, [r7, #32]
 800672a:	3302      	adds	r3, #2
 800672c:	623b      	str	r3, [r7, #32]
 800672e:	693b      	ldr	r3, [r7, #16]
 8006730:	b2da      	uxtb	r2, r3
 8006732:	69fb      	ldr	r3, [r7, #28]
 8006734:	701a      	strb	r2, [r3, #0]
 8006736:	69fb      	ldr	r3, [r7, #28]
 8006738:	3301      	adds	r3, #1
 800673a:	61fb      	str	r3, [r7, #28]
 800673c:	693b      	ldr	r3, [r7, #16]
 800673e:	0a1b      	lsrs	r3, r3, #8
 8006740:	b2da      	uxtb	r2, r3
 8006742:	69fb      	ldr	r3, [r7, #28]
 8006744:	701a      	strb	r2, [r3, #0]
 8006746:	69fb      	ldr	r3, [r7, #28]
 8006748:	3301      	adds	r3, #1
 800674a:	61fb      	str	r3, [r7, #28]
 800674c:	6a3b      	ldr	r3, [r7, #32]
 800674e:	3302      	adds	r3, #2
 8006750:	623b      	str	r3, [r7, #32]
 8006752:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006754:	3b01      	subs	r3, #1
 8006756:	627b      	str	r3, [r7, #36]	@ 0x24
 8006758:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800675a:	2b00      	cmp	r3, #0
 800675c:	d1e0      	bne.n	8006720 <USB_ReadPMA+0x3a>
 800675e:	88bb      	ldrh	r3, [r7, #4]
 8006760:	f003 0301 	and.w	r3, r3, #1
 8006764:	b29b      	uxth	r3, r3
 8006766:	2b00      	cmp	r3, #0
 8006768:	d007      	beq.n	800677a <USB_ReadPMA+0x94>
 800676a:	6a3b      	ldr	r3, [r7, #32]
 800676c:	881b      	ldrh	r3, [r3, #0]
 800676e:	b29b      	uxth	r3, r3
 8006770:	613b      	str	r3, [r7, #16]
 8006772:	693b      	ldr	r3, [r7, #16]
 8006774:	b2da      	uxtb	r2, r3
 8006776:	69fb      	ldr	r3, [r7, #28]
 8006778:	701a      	strb	r2, [r3, #0]
 800677a:	bf00      	nop
 800677c:	372c      	adds	r7, #44	@ 0x2c
 800677e:	46bd      	mov	sp, r7
 8006780:	bc80      	pop	{r7}
 8006782:	4770      	bx	lr

08006784 <USBD_HID_Init>:
  * @param  pdev: device instance
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_HID_Init(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8006784:	b580      	push	{r7, lr}
 8006786:	b082      	sub	sp, #8
 8006788:	af00      	add	r7, sp, #0
 800678a:	6078      	str	r0, [r7, #4]
 800678c:	460b      	mov	r3, r1
 800678e:	70fb      	strb	r3, [r7, #3]
  /* Open EP IN */
  USBD_LL_OpenEP(pdev, HID_EPIN_ADDR, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 8006790:	2304      	movs	r3, #4
 8006792:	2203      	movs	r2, #3
 8006794:	2181      	movs	r1, #129	@ 0x81
 8006796:	6878      	ldr	r0, [r7, #4]
 8006798:	f001 fc7f 	bl	800809a <USBD_LL_OpenEP>
  pdev->ep_in[HID_EPIN_ADDR & 0xFU].is_used = 1U;
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	2201      	movs	r2, #1
 80067a0:	62da      	str	r2, [r3, #44]	@ 0x2c

  pdev->pClassData = USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 80067a2:	2010      	movs	r0, #16
 80067a4:	f001 fd8c 	bl	80082c0 <USBD_static_malloc>
 80067a8:	4602      	mov	r2, r0
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8

  if (pdev->pClassData == NULL)
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80067b6:	2b00      	cmp	r3, #0
 80067b8:	d101      	bne.n	80067be <USBD_HID_Init+0x3a>
  {
    return USBD_FAIL;
 80067ba:	2302      	movs	r3, #2
 80067bc:	e005      	b.n	80067ca <USBD_HID_Init+0x46>
  }

  ((USBD_HID_HandleTypeDef *)pdev->pClassData)->state = HID_IDLE;
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80067c4:	2200      	movs	r2, #0
 80067c6:	731a      	strb	r2, [r3, #12]

  return USBD_OK;
 80067c8:	2300      	movs	r3, #0
}
 80067ca:	4618      	mov	r0, r3
 80067cc:	3708      	adds	r7, #8
 80067ce:	46bd      	mov	sp, r7
 80067d0:	bd80      	pop	{r7, pc}

080067d2 <USBD_HID_DeInit>:
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_HID_DeInit(USBD_HandleTypeDef *pdev,
                                uint8_t cfgidx)
{
 80067d2:	b580      	push	{r7, lr}
 80067d4:	b082      	sub	sp, #8
 80067d6:	af00      	add	r7, sp, #0
 80067d8:	6078      	str	r0, [r7, #4]
 80067da:	460b      	mov	r3, r1
 80067dc:	70fb      	strb	r3, [r7, #3]
  /* Close HID EPs */
  USBD_LL_CloseEP(pdev, HID_EPIN_ADDR);
 80067de:	2181      	movs	r1, #129	@ 0x81
 80067e0:	6878      	ldr	r0, [r7, #4]
 80067e2:	f001 fc80 	bl	80080e6 <USBD_LL_CloseEP>
  pdev->ep_in[HID_EPIN_ADDR & 0xFU].is_used = 0U;
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	2200      	movs	r2, #0
 80067ea:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* FRee allocated memory */
  if (pdev->pClassData != NULL)
 80067ec:	687b      	ldr	r3, [r7, #4]
 80067ee:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80067f2:	2b00      	cmp	r3, #0
 80067f4:	d009      	beq.n	800680a <USBD_HID_DeInit+0x38>
  {
    USBD_free(pdev->pClassData);
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80067fc:	4618      	mov	r0, r3
 80067fe:	f001 fd6b 	bl	80082d8 <USBD_static_free>
    pdev->pClassData = NULL;
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	2200      	movs	r2, #0
 8006806:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
  }

  return USBD_OK;
 800680a:	2300      	movs	r3, #0
}
 800680c:	4618      	mov	r0, r3
 800680e:	3708      	adds	r7, #8
 8006810:	46bd      	mov	sp, r7
 8006812:	bd80      	pop	{r7, pc}

08006814 <USBD_HID_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t  USBD_HID_Setup(USBD_HandleTypeDef *pdev,
                               USBD_SetupReqTypedef *req)
{
 8006814:	b580      	push	{r7, lr}
 8006816:	b088      	sub	sp, #32
 8006818:	af00      	add	r7, sp, #0
 800681a:	6078      	str	r0, [r7, #4]
 800681c:	6039      	str	r1, [r7, #0]
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *) pdev->pClassData;
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8006824:	613b      	str	r3, [r7, #16]
  uint16_t len = 0U;
 8006826:	2300      	movs	r3, #0
 8006828:	83fb      	strh	r3, [r7, #30]
  uint8_t *pbuf = NULL;
 800682a:	2300      	movs	r3, #0
 800682c:	61bb      	str	r3, [r7, #24]
  uint16_t status_info = 0U;
 800682e:	2300      	movs	r3, #0
 8006830:	81fb      	strh	r3, [r7, #14]
  USBD_StatusTypeDef ret = USBD_OK;
 8006832:	2300      	movs	r3, #0
 8006834:	75fb      	strb	r3, [r7, #23]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8006836:	683b      	ldr	r3, [r7, #0]
 8006838:	781b      	ldrb	r3, [r3, #0]
 800683a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800683e:	2b00      	cmp	r3, #0
 8006840:	d045      	beq.n	80068ce <USBD_HID_Setup+0xba>
 8006842:	2b20      	cmp	r3, #32
 8006844:	f040 80d3 	bne.w	80069ee <USBD_HID_Setup+0x1da>
  {
    case USB_REQ_TYPE_CLASS :
      switch (req->bRequest)
 8006848:	683b      	ldr	r3, [r7, #0]
 800684a:	785b      	ldrb	r3, [r3, #1]
 800684c:	3b02      	subs	r3, #2
 800684e:	2b09      	cmp	r3, #9
 8006850:	d835      	bhi.n	80068be <USBD_HID_Setup+0xaa>
 8006852:	a201      	add	r2, pc, #4	@ (adr r2, 8006858 <USBD_HID_Setup+0x44>)
 8006854:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006858:	080068af 	.word	0x080068af
 800685c:	0800688f 	.word	0x0800688f
 8006860:	080068bf 	.word	0x080068bf
 8006864:	080068bf 	.word	0x080068bf
 8006868:	080068bf 	.word	0x080068bf
 800686c:	080068bf 	.word	0x080068bf
 8006870:	080068bf 	.word	0x080068bf
 8006874:	080068bf 	.word	0x080068bf
 8006878:	0800689d 	.word	0x0800689d
 800687c:	08006881 	.word	0x08006881
      {
        case HID_REQ_SET_PROTOCOL:
          hhid->Protocol = (uint8_t)(req->wValue);
 8006880:	683b      	ldr	r3, [r7, #0]
 8006882:	885b      	ldrh	r3, [r3, #2]
 8006884:	b2db      	uxtb	r3, r3
 8006886:	461a      	mov	r2, r3
 8006888:	693b      	ldr	r3, [r7, #16]
 800688a:	601a      	str	r2, [r3, #0]
          break;
 800688c:	e01e      	b.n	80068cc <USBD_HID_Setup+0xb8>

        case HID_REQ_GET_PROTOCOL:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->Protocol, 1U);
 800688e:	693b      	ldr	r3, [r7, #16]
 8006890:	2201      	movs	r2, #1
 8006892:	4619      	mov	r1, r3
 8006894:	6878      	ldr	r0, [r7, #4]
 8006896:	f001 f941 	bl	8007b1c <USBD_CtlSendData>
          break;
 800689a:	e017      	b.n	80068cc <USBD_HID_Setup+0xb8>

        case HID_REQ_SET_IDLE:
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 800689c:	683b      	ldr	r3, [r7, #0]
 800689e:	885b      	ldrh	r3, [r3, #2]
 80068a0:	0a1b      	lsrs	r3, r3, #8
 80068a2:	b29b      	uxth	r3, r3
 80068a4:	b2db      	uxtb	r3, r3
 80068a6:	461a      	mov	r2, r3
 80068a8:	693b      	ldr	r3, [r7, #16]
 80068aa:	605a      	str	r2, [r3, #4]
          break;
 80068ac:	e00e      	b.n	80068cc <USBD_HID_Setup+0xb8>

        case HID_REQ_GET_IDLE:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->IdleState, 1U);
 80068ae:	693b      	ldr	r3, [r7, #16]
 80068b0:	3304      	adds	r3, #4
 80068b2:	2201      	movs	r2, #1
 80068b4:	4619      	mov	r1, r3
 80068b6:	6878      	ldr	r0, [r7, #4]
 80068b8:	f001 f930 	bl	8007b1c <USBD_CtlSendData>
          break;
 80068bc:	e006      	b.n	80068cc <USBD_HID_Setup+0xb8>

        default:
          USBD_CtlError(pdev, req);
 80068be:	6839      	ldr	r1, [r7, #0]
 80068c0:	6878      	ldr	r0, [r7, #4]
 80068c2:	f001 f8c1 	bl	8007a48 <USBD_CtlError>
          ret = USBD_FAIL;
 80068c6:	2302      	movs	r3, #2
 80068c8:	75fb      	strb	r3, [r7, #23]
          break;
 80068ca:	bf00      	nop
      }
      break;
 80068cc:	e096      	b.n	80069fc <USBD_HID_Setup+0x1e8>
    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 80068ce:	683b      	ldr	r3, [r7, #0]
 80068d0:	785b      	ldrb	r3, [r3, #1]
 80068d2:	2b0b      	cmp	r3, #11
 80068d4:	f200 8083 	bhi.w	80069de <USBD_HID_Setup+0x1ca>
 80068d8:	a201      	add	r2, pc, #4	@ (adr r2, 80068e0 <USBD_HID_Setup+0xcc>)
 80068da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80068de:	bf00      	nop
 80068e0:	08006911 	.word	0x08006911
 80068e4:	080069df 	.word	0x080069df
 80068e8:	080069df 	.word	0x080069df
 80068ec:	080069df 	.word	0x080069df
 80068f0:	080069df 	.word	0x080069df
 80068f4:	080069df 	.word	0x080069df
 80068f8:	08006939 	.word	0x08006939
 80068fc:	080069df 	.word	0x080069df
 8006900:	080069df 	.word	0x080069df
 8006904:	080069df 	.word	0x080069df
 8006908:	08006991 	.word	0x08006991
 800690c:	080069b9 	.word	0x080069b9
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8006916:	2b03      	cmp	r3, #3
 8006918:	d107      	bne.n	800692a <USBD_HID_Setup+0x116>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&status_info, 2U);
 800691a:	f107 030e 	add.w	r3, r7, #14
 800691e:	2202      	movs	r2, #2
 8006920:	4619      	mov	r1, r3
 8006922:	6878      	ldr	r0, [r7, #4]
 8006924:	f001 f8fa 	bl	8007b1c <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 8006928:	e060      	b.n	80069ec <USBD_HID_Setup+0x1d8>
            USBD_CtlError(pdev, req);
 800692a:	6839      	ldr	r1, [r7, #0]
 800692c:	6878      	ldr	r0, [r7, #4]
 800692e:	f001 f88b 	bl	8007a48 <USBD_CtlError>
            ret = USBD_FAIL;
 8006932:	2302      	movs	r3, #2
 8006934:	75fb      	strb	r3, [r7, #23]
          break;
 8006936:	e059      	b.n	80069ec <USBD_HID_Setup+0x1d8>

        case USB_REQ_GET_DESCRIPTOR:
          if (req->wValue >> 8 == HID_REPORT_DESC)
 8006938:	683b      	ldr	r3, [r7, #0]
 800693a:	885b      	ldrh	r3, [r3, #2]
 800693c:	0a1b      	lsrs	r3, r3, #8
 800693e:	b29b      	uxth	r3, r3
 8006940:	2b22      	cmp	r3, #34	@ 0x22
 8006942:	d108      	bne.n	8006956 <USBD_HID_Setup+0x142>
          {
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8006944:	683b      	ldr	r3, [r7, #0]
 8006946:	88db      	ldrh	r3, [r3, #6]
 8006948:	2b4a      	cmp	r3, #74	@ 0x4a
 800694a:	bf28      	it	cs
 800694c:	234a      	movcs	r3, #74	@ 0x4a
 800694e:	83fb      	strh	r3, [r7, #30]
            pbuf = HID_MOUSE_ReportDesc;
 8006950:	4b2d      	ldr	r3, [pc, #180]	@ (8006a08 <USBD_HID_Setup+0x1f4>)
 8006952:	61bb      	str	r3, [r7, #24]
 8006954:	e015      	b.n	8006982 <USBD_HID_Setup+0x16e>
          }
          else if (req->wValue >> 8 == HID_DESCRIPTOR_TYPE)
 8006956:	683b      	ldr	r3, [r7, #0]
 8006958:	885b      	ldrh	r3, [r3, #2]
 800695a:	0a1b      	lsrs	r3, r3, #8
 800695c:	b29b      	uxth	r3, r3
 800695e:	2b21      	cmp	r3, #33	@ 0x21
 8006960:	d108      	bne.n	8006974 <USBD_HID_Setup+0x160>
          {
            pbuf = USBD_HID_Desc;
 8006962:	4b2a      	ldr	r3, [pc, #168]	@ (8006a0c <USBD_HID_Setup+0x1f8>)
 8006964:	61bb      	str	r3, [r7, #24]
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8006966:	683b      	ldr	r3, [r7, #0]
 8006968:	88db      	ldrh	r3, [r3, #6]
 800696a:	2b09      	cmp	r3, #9
 800696c:	bf28      	it	cs
 800696e:	2309      	movcs	r3, #9
 8006970:	83fb      	strh	r3, [r7, #30]
 8006972:	e006      	b.n	8006982 <USBD_HID_Setup+0x16e>
          }
          else
          {
            USBD_CtlError(pdev, req);
 8006974:	6839      	ldr	r1, [r7, #0]
 8006976:	6878      	ldr	r0, [r7, #4]
 8006978:	f001 f866 	bl	8007a48 <USBD_CtlError>
            ret = USBD_FAIL;
 800697c:	2302      	movs	r3, #2
 800697e:	75fb      	strb	r3, [r7, #23]
            break;
 8006980:	e034      	b.n	80069ec <USBD_HID_Setup+0x1d8>
          }
          USBD_CtlSendData(pdev, pbuf, len);
 8006982:	8bfb      	ldrh	r3, [r7, #30]
 8006984:	461a      	mov	r2, r3
 8006986:	69b9      	ldr	r1, [r7, #24]
 8006988:	6878      	ldr	r0, [r7, #4]
 800698a:	f001 f8c7 	bl	8007b1c <USBD_CtlSendData>
          break;
 800698e:	e02d      	b.n	80069ec <USBD_HID_Setup+0x1d8>

        case USB_REQ_GET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8006996:	2b03      	cmp	r3, #3
 8006998:	d107      	bne.n	80069aa <USBD_HID_Setup+0x196>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->AltSetting, 1U);
 800699a:	693b      	ldr	r3, [r7, #16]
 800699c:	3308      	adds	r3, #8
 800699e:	2201      	movs	r2, #1
 80069a0:	4619      	mov	r1, r3
 80069a2:	6878      	ldr	r0, [r7, #4]
 80069a4:	f001 f8ba 	bl	8007b1c <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 80069a8:	e020      	b.n	80069ec <USBD_HID_Setup+0x1d8>
            USBD_CtlError(pdev, req);
 80069aa:	6839      	ldr	r1, [r7, #0]
 80069ac:	6878      	ldr	r0, [r7, #4]
 80069ae:	f001 f84b 	bl	8007a48 <USBD_CtlError>
            ret = USBD_FAIL;
 80069b2:	2302      	movs	r3, #2
 80069b4:	75fb      	strb	r3, [r7, #23]
          break;
 80069b6:	e019      	b.n	80069ec <USBD_HID_Setup+0x1d8>

        case USB_REQ_SET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80069be:	2b03      	cmp	r3, #3
 80069c0:	d106      	bne.n	80069d0 <USBD_HID_Setup+0x1bc>
          {
            hhid->AltSetting = (uint8_t)(req->wValue);
 80069c2:	683b      	ldr	r3, [r7, #0]
 80069c4:	885b      	ldrh	r3, [r3, #2]
 80069c6:	b2db      	uxtb	r3, r3
 80069c8:	461a      	mov	r2, r3
 80069ca:	693b      	ldr	r3, [r7, #16]
 80069cc:	609a      	str	r2, [r3, #8]
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 80069ce:	e00d      	b.n	80069ec <USBD_HID_Setup+0x1d8>
            USBD_CtlError(pdev, req);
 80069d0:	6839      	ldr	r1, [r7, #0]
 80069d2:	6878      	ldr	r0, [r7, #4]
 80069d4:	f001 f838 	bl	8007a48 <USBD_CtlError>
            ret = USBD_FAIL;
 80069d8:	2302      	movs	r3, #2
 80069da:	75fb      	strb	r3, [r7, #23]
          break;
 80069dc:	e006      	b.n	80069ec <USBD_HID_Setup+0x1d8>

        default:
          USBD_CtlError(pdev, req);
 80069de:	6839      	ldr	r1, [r7, #0]
 80069e0:	6878      	ldr	r0, [r7, #4]
 80069e2:	f001 f831 	bl	8007a48 <USBD_CtlError>
          ret = USBD_FAIL;
 80069e6:	2302      	movs	r3, #2
 80069e8:	75fb      	strb	r3, [r7, #23]
          break;
 80069ea:	bf00      	nop
      }
      break;
 80069ec:	e006      	b.n	80069fc <USBD_HID_Setup+0x1e8>

    default:
      USBD_CtlError(pdev, req);
 80069ee:	6839      	ldr	r1, [r7, #0]
 80069f0:	6878      	ldr	r0, [r7, #4]
 80069f2:	f001 f829 	bl	8007a48 <USBD_CtlError>
      ret = USBD_FAIL;
 80069f6:	2302      	movs	r3, #2
 80069f8:	75fb      	strb	r3, [r7, #23]
      break;
 80069fa:	bf00      	nop
  }

  return ret;
 80069fc:	7dfb      	ldrb	r3, [r7, #23]
}
 80069fe:	4618      	mov	r0, r3
 8006a00:	3720      	adds	r7, #32
 8006a02:	46bd      	mov	sp, r7
 8006a04:	bd80      	pop	{r7, pc}
 8006a06:	bf00      	nop
 8006a08:	200000cc 	.word	0x200000cc
 8006a0c:	200000b4 	.word	0x200000b4

08006a10 <USBD_HID_SendReport>:
  * @retval status
  */
uint8_t USBD_HID_SendReport(USBD_HandleTypeDef  *pdev,
                            uint8_t *report,
                            uint16_t len)
{
 8006a10:	b580      	push	{r7, lr}
 8006a12:	b086      	sub	sp, #24
 8006a14:	af00      	add	r7, sp, #0
 8006a16:	60f8      	str	r0, [r7, #12]
 8006a18:	60b9      	str	r1, [r7, #8]
 8006a1a:	4613      	mov	r3, r2
 8006a1c:	80fb      	strh	r3, [r7, #6]
  USBD_HID_HandleTypeDef     *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassData;
 8006a1e:	68fb      	ldr	r3, [r7, #12]
 8006a20:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8006a24:	617b      	str	r3, [r7, #20]

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006a26:	68fb      	ldr	r3, [r7, #12]
 8006a28:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8006a2c:	2b03      	cmp	r3, #3
 8006a2e:	d10c      	bne.n	8006a4a <USBD_HID_SendReport+0x3a>
  {
    if (hhid->state == HID_IDLE)
 8006a30:	697b      	ldr	r3, [r7, #20]
 8006a32:	7b1b      	ldrb	r3, [r3, #12]
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d108      	bne.n	8006a4a <USBD_HID_SendReport+0x3a>
    {
      hhid->state = HID_BUSY;
 8006a38:	697b      	ldr	r3, [r7, #20]
 8006a3a:	2201      	movs	r2, #1
 8006a3c:	731a      	strb	r2, [r3, #12]
      USBD_LL_Transmit(pdev,
 8006a3e:	88fb      	ldrh	r3, [r7, #6]
 8006a40:	68ba      	ldr	r2, [r7, #8]
 8006a42:	2181      	movs	r1, #129	@ 0x81
 8006a44:	68f8      	ldr	r0, [r7, #12]
 8006a46:	f001 fbf5 	bl	8008234 <USBD_LL_Transmit>
                       HID_EPIN_ADDR,
                       report,
                       len);
    }
  }
  return USBD_OK;
 8006a4a:	2300      	movs	r3, #0
}
 8006a4c:	4618      	mov	r0, r3
 8006a4e:	3718      	adds	r7, #24
 8006a50:	46bd      	mov	sp, r7
 8006a52:	bd80      	pop	{r7, pc}

08006a54 <USBD_HID_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_HID_GetFSCfgDesc(uint16_t *length)
{
 8006a54:	b480      	push	{r7}
 8006a56:	b083      	sub	sp, #12
 8006a58:	af00      	add	r7, sp, #0
 8006a5a:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_HID_CfgFSDesc);
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	2222      	movs	r2, #34	@ 0x22
 8006a60:	801a      	strh	r2, [r3, #0]
  return USBD_HID_CfgFSDesc;
 8006a62:	4b03      	ldr	r3, [pc, #12]	@ (8006a70 <USBD_HID_GetFSCfgDesc+0x1c>)
}
 8006a64:	4618      	mov	r0, r3
 8006a66:	370c      	adds	r7, #12
 8006a68:	46bd      	mov	sp, r7
 8006a6a:	bc80      	pop	{r7}
 8006a6c:	4770      	bx	lr
 8006a6e:	bf00      	nop
 8006a70:	20000048 	.word	0x20000048

08006a74 <USBD_HID_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_HID_GetHSCfgDesc(uint16_t *length)
{
 8006a74:	b480      	push	{r7}
 8006a76:	b083      	sub	sp, #12
 8006a78:	af00      	add	r7, sp, #0
 8006a7a:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_HID_CfgHSDesc);
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	2222      	movs	r2, #34	@ 0x22
 8006a80:	801a      	strh	r2, [r3, #0]
  return USBD_HID_CfgHSDesc;
 8006a82:	4b03      	ldr	r3, [pc, #12]	@ (8006a90 <USBD_HID_GetHSCfgDesc+0x1c>)
}
 8006a84:	4618      	mov	r0, r3
 8006a86:	370c      	adds	r7, #12
 8006a88:	46bd      	mov	sp, r7
 8006a8a:	bc80      	pop	{r7}
 8006a8c:	4770      	bx	lr
 8006a8e:	bf00      	nop
 8006a90:	2000006c 	.word	0x2000006c

08006a94 <USBD_HID_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
{
 8006a94:	b480      	push	{r7}
 8006a96:	b083      	sub	sp, #12
 8006a98:	af00      	add	r7, sp, #0
 8006a9a:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_HID_OtherSpeedCfgDesc);
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	2222      	movs	r2, #34	@ 0x22
 8006aa0:	801a      	strh	r2, [r3, #0]
  return USBD_HID_OtherSpeedCfgDesc;
 8006aa2:	4b03      	ldr	r3, [pc, #12]	@ (8006ab0 <USBD_HID_GetOtherSpeedCfgDesc+0x1c>)
}
 8006aa4:	4618      	mov	r0, r3
 8006aa6:	370c      	adds	r7, #12
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	bc80      	pop	{r7}
 8006aac:	4770      	bx	lr
 8006aae:	bf00      	nop
 8006ab0:	20000090 	.word	0x20000090

08006ab4 <USBD_HID_DataIn>:
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t  USBD_HID_DataIn(USBD_HandleTypeDef *pdev,
                                uint8_t epnum)
{
 8006ab4:	b480      	push	{r7}
 8006ab6:	b083      	sub	sp, #12
 8006ab8:	af00      	add	r7, sp, #0
 8006aba:	6078      	str	r0, [r7, #4]
 8006abc:	460b      	mov	r3, r1
 8006abe:	70fb      	strb	r3, [r7, #3]

  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassData)->state = HID_IDLE;
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8006ac6:	2200      	movs	r2, #0
 8006ac8:	731a      	strb	r2, [r3, #12]
  return USBD_OK;
 8006aca:	2300      	movs	r3, #0
}
 8006acc:	4618      	mov	r0, r3
 8006ace:	370c      	adds	r7, #12
 8006ad0:	46bd      	mov	sp, r7
 8006ad2:	bc80      	pop	{r7}
 8006ad4:	4770      	bx	lr
	...

08006ad8 <USBD_HID_GetDeviceQualifierDesc>:
*         return Device Qualifier descriptor
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
static uint8_t  *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
 8006ad8:	b480      	push	{r7}
 8006ada:	b083      	sub	sp, #12
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_HID_DeviceQualifierDesc);
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	220a      	movs	r2, #10
 8006ae4:	801a      	strh	r2, [r3, #0]
  return USBD_HID_DeviceQualifierDesc;
 8006ae6:	4b03      	ldr	r3, [pc, #12]	@ (8006af4 <USBD_HID_GetDeviceQualifierDesc+0x1c>)
}
 8006ae8:	4618      	mov	r0, r3
 8006aea:	370c      	adds	r7, #12
 8006aec:	46bd      	mov	sp, r7
 8006aee:	bc80      	pop	{r7}
 8006af0:	4770      	bx	lr
 8006af2:	bf00      	nop
 8006af4:	200000c0 	.word	0x200000c0

08006af8 <USBD_Init>:
* @param  id: Low level core index
* @retval None
*/
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 8006af8:	b580      	push	{r7, lr}
 8006afa:	b084      	sub	sp, #16
 8006afc:	af00      	add	r7, sp, #0
 8006afe:	60f8      	str	r0, [r7, #12]
 8006b00:	60b9      	str	r1, [r7, #8]
 8006b02:	4613      	mov	r3, r2
 8006b04:	71fb      	strb	r3, [r7, #7]
  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8006b06:	68fb      	ldr	r3, [r7, #12]
 8006b08:	2b00      	cmp	r3, #0
 8006b0a:	d101      	bne.n	8006b10 <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif
    return USBD_FAIL;
 8006b0c:	2302      	movs	r3, #2
 8006b0e:	e01a      	b.n	8006b46 <USBD_Init+0x4e>
  }

  /* Unlink previous class*/
  if (pdev->pClass != NULL)
 8006b10:	68fb      	ldr	r3, [r7, #12]
 8006b12:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d003      	beq.n	8006b22 <USBD_Init+0x2a>
  {
    pdev->pClass = NULL;
 8006b1a:	68fb      	ldr	r3, [r7, #12]
 8006b1c:	2200      	movs	r2, #0
 8006b1e:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8006b22:	68bb      	ldr	r3, [r7, #8]
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	d003      	beq.n	8006b30 <USBD_Init+0x38>
  {
    pdev->pDesc = pdesc;
 8006b28:	68fb      	ldr	r3, [r7, #12]
 8006b2a:	68ba      	ldr	r2, [r7, #8]
 8006b2c:	f8c3 22b0 	str.w	r2, [r3, #688]	@ 0x2b0
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8006b30:	68fb      	ldr	r3, [r7, #12]
 8006b32:	2201      	movs	r2, #1
 8006b34:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->id = id;
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	79fa      	ldrb	r2, [r7, #7]
 8006b3c:	701a      	strb	r2, [r3, #0]
  /* Initialize low level driver */
  USBD_LL_Init(pdev);
 8006b3e:	68f8      	ldr	r0, [r7, #12]
 8006b40:	f001 fa48 	bl	8007fd4 <USBD_LL_Init>

  return USBD_OK;
 8006b44:	2300      	movs	r3, #0
}
 8006b46:	4618      	mov	r0, r3
 8006b48:	3710      	adds	r7, #16
 8006b4a:	46bd      	mov	sp, r7
 8006b4c:	bd80      	pop	{r7, pc}

08006b4e <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8006b4e:	b480      	push	{r7}
 8006b50:	b085      	sub	sp, #20
 8006b52:	af00      	add	r7, sp, #0
 8006b54:	6078      	str	r0, [r7, #4]
 8006b56:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef status = USBD_OK;
 8006b58:	2300      	movs	r3, #0
 8006b5a:	73fb      	strb	r3, [r7, #15]
  if (pclass != NULL)
 8006b5c:	683b      	ldr	r3, [r7, #0]
 8006b5e:	2b00      	cmp	r3, #0
 8006b60:	d006      	beq.n	8006b70 <USBD_RegisterClass+0x22>
  {
    /* link the class to the USB Device handle */
    pdev->pClass = pclass;
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	683a      	ldr	r2, [r7, #0]
 8006b66:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
    status = USBD_OK;
 8006b6a:	2300      	movs	r3, #0
 8006b6c:	73fb      	strb	r3, [r7, #15]
 8006b6e:	e001      	b.n	8006b74 <USBD_RegisterClass+0x26>
  else
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif
    status = USBD_FAIL;
 8006b70:	2302      	movs	r3, #2
 8006b72:	73fb      	strb	r3, [r7, #15]
  }

  return status;
 8006b74:	7bfb      	ldrb	r3, [r7, #15]
}
 8006b76:	4618      	mov	r0, r3
 8006b78:	3714      	adds	r7, #20
 8006b7a:	46bd      	mov	sp, r7
 8006b7c:	bc80      	pop	{r7}
 8006b7e:	4770      	bx	lr

08006b80 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_Start(USBD_HandleTypeDef *pdev)
{
 8006b80:	b580      	push	{r7, lr}
 8006b82:	b082      	sub	sp, #8
 8006b84:	af00      	add	r7, sp, #0
 8006b86:	6078      	str	r0, [r7, #4]
  /* Start the low level driver  */
  USBD_LL_Start(pdev);
 8006b88:	6878      	ldr	r0, [r7, #4]
 8006b8a:	f001 fa6b 	bl	8008064 <USBD_LL_Start>

  return USBD_OK;
 8006b8e:	2300      	movs	r3, #0
}
 8006b90:	4618      	mov	r0, r3
 8006b92:	3708      	adds	r7, #8
 8006b94:	46bd      	mov	sp, r7
 8006b96:	bd80      	pop	{r7, pc}

08006b98 <USBD_RunTestMode>:
*         Launch test mode process
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef  USBD_RunTestMode(USBD_HandleTypeDef  *pdev)
{
 8006b98:	b480      	push	{r7}
 8006b9a:	b083      	sub	sp, #12
 8006b9c:	af00      	add	r7, sp, #0
 8006b9e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 8006ba0:	2300      	movs	r3, #0
}
 8006ba2:	4618      	mov	r0, r3
 8006ba4:	370c      	adds	r7, #12
 8006ba6:	46bd      	mov	sp, r7
 8006ba8:	bc80      	pop	{r7}
 8006baa:	4770      	bx	lr

08006bac <USBD_SetClassConfig>:
* @param  cfgidx: configuration index
* @retval status
*/

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 8006bac:	b580      	push	{r7, lr}
 8006bae:	b084      	sub	sp, #16
 8006bb0:	af00      	add	r7, sp, #0
 8006bb2:	6078      	str	r0, [r7, #4]
 8006bb4:	460b      	mov	r3, r1
 8006bb6:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_FAIL;
 8006bb8:	2302      	movs	r3, #2
 8006bba:	73fb      	strb	r3, [r7, #15]

  if (pdev->pClass != NULL)
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006bc2:	2b00      	cmp	r3, #0
 8006bc4:	d00c      	beq.n	8006be0 <USBD_SetClassConfig+0x34>
  {
    /* Set configuration  and Start the Class*/
    if (pdev->pClass->Init(pdev, cfgidx) == 0U)
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	78fa      	ldrb	r2, [r7, #3]
 8006bd0:	4611      	mov	r1, r2
 8006bd2:	6878      	ldr	r0, [r7, #4]
 8006bd4:	4798      	blx	r3
 8006bd6:	4603      	mov	r3, r0
 8006bd8:	2b00      	cmp	r3, #0
 8006bda:	d101      	bne.n	8006be0 <USBD_SetClassConfig+0x34>
    {
      ret = USBD_OK;
 8006bdc:	2300      	movs	r3, #0
 8006bde:	73fb      	strb	r3, [r7, #15]
    }
  }

  return ret;
 8006be0:	7bfb      	ldrb	r3, [r7, #15]
}
 8006be2:	4618      	mov	r0, r3
 8006be4:	3710      	adds	r7, #16
 8006be6:	46bd      	mov	sp, r7
 8006be8:	bd80      	pop	{r7, pc}

08006bea <USBD_ClrClassConfig>:
* @param  pdev: device instance
* @param  cfgidx: configuration index
* @retval status: USBD_StatusTypeDef
*/
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 8006bea:	b580      	push	{r7, lr}
 8006bec:	b082      	sub	sp, #8
 8006bee:	af00      	add	r7, sp, #0
 8006bf0:	6078      	str	r0, [r7, #4]
 8006bf2:	460b      	mov	r3, r1
 8006bf4:	70fb      	strb	r3, [r7, #3]
  /* Clear configuration  and De-initialize the Class process*/
  pdev->pClass->DeInit(pdev, cfgidx);
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006bfc:	685b      	ldr	r3, [r3, #4]
 8006bfe:	78fa      	ldrb	r2, [r7, #3]
 8006c00:	4611      	mov	r1, r2
 8006c02:	6878      	ldr	r0, [r7, #4]
 8006c04:	4798      	blx	r3

  return USBD_OK;
 8006c06:	2300      	movs	r3, #0
}
 8006c08:	4618      	mov	r0, r3
 8006c0a:	3708      	adds	r7, #8
 8006c0c:	46bd      	mov	sp, r7
 8006c0e:	bd80      	pop	{r7, pc}

08006c10 <USBD_LL_SetupStage>:
*         Handle the setup stage
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8006c10:	b580      	push	{r7, lr}
 8006c12:	b082      	sub	sp, #8
 8006c14:	af00      	add	r7, sp, #0
 8006c16:	6078      	str	r0, [r7, #4]
 8006c18:	6039      	str	r1, [r7, #0]
  USBD_ParseSetupRequest(&pdev->request, psetup);
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 8006c20:	6839      	ldr	r1, [r7, #0]
 8006c22:	4618      	mov	r0, r3
 8006c24:	f000 fed7 	bl	80079d6 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	2201      	movs	r2, #1
 8006c2c:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8006c36:	461a      	mov	r2, r3
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	f893 32a8 	ldrb.w	r3, [r3, #680]	@ 0x2a8
 8006c44:	f003 031f 	and.w	r3, r3, #31
 8006c48:	2b02      	cmp	r3, #2
 8006c4a:	d016      	beq.n	8006c7a <USBD_LL_SetupStage+0x6a>
 8006c4c:	2b02      	cmp	r3, #2
 8006c4e:	d81c      	bhi.n	8006c8a <USBD_LL_SetupStage+0x7a>
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d002      	beq.n	8006c5a <USBD_LL_SetupStage+0x4a>
 8006c54:	2b01      	cmp	r3, #1
 8006c56:	d008      	beq.n	8006c6a <USBD_LL_SetupStage+0x5a>
 8006c58:	e017      	b.n	8006c8a <USBD_LL_SetupStage+0x7a>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      USBD_StdDevReq(pdev, &pdev->request);
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 8006c60:	4619      	mov	r1, r3
 8006c62:	6878      	ldr	r0, [r7, #4]
 8006c64:	f000 f9ca 	bl	8006ffc <USBD_StdDevReq>
      break;
 8006c68:	e01a      	b.n	8006ca0 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_INTERFACE:
      USBD_StdItfReq(pdev, &pdev->request);
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 8006c70:	4619      	mov	r1, r3
 8006c72:	6878      	ldr	r0, [r7, #4]
 8006c74:	f000 fa2c 	bl	80070d0 <USBD_StdItfReq>
      break;
 8006c78:	e012      	b.n	8006ca0 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_ENDPOINT:
      USBD_StdEPReq(pdev, &pdev->request);
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	f503 732a 	add.w	r3, r3, #680	@ 0x2a8
 8006c80:	4619      	mov	r1, r3
 8006c82:	6878      	ldr	r0, [r7, #4]
 8006c84:	f000 fa6c 	bl	8007160 <USBD_StdEPReq>
      break;
 8006c88:	e00a      	b.n	8006ca0 <USBD_LL_SetupStage+0x90>

    default:
      USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	f893 32a8 	ldrb.w	r3, [r3, #680]	@ 0x2a8
 8006c90:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8006c94:	b2db      	uxtb	r3, r3
 8006c96:	4619      	mov	r1, r3
 8006c98:	6878      	ldr	r0, [r7, #4]
 8006c9a:	f001 fa43 	bl	8008124 <USBD_LL_StallEP>
      break;
 8006c9e:	bf00      	nop
  }

  return USBD_OK;
 8006ca0:	2300      	movs	r3, #0
}
 8006ca2:	4618      	mov	r0, r3
 8006ca4:	3708      	adds	r7, #8
 8006ca6:	46bd      	mov	sp, r7
 8006ca8:	bd80      	pop	{r7, pc}

08006caa <USBD_LL_DataOutStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8006caa:	b580      	push	{r7, lr}
 8006cac:	b086      	sub	sp, #24
 8006cae:	af00      	add	r7, sp, #0
 8006cb0:	60f8      	str	r0, [r7, #12]
 8006cb2:	460b      	mov	r3, r1
 8006cb4:	607a      	str	r2, [r7, #4]
 8006cb6:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 8006cb8:	7afb      	ldrb	r3, [r7, #11]
 8006cba:	2b00      	cmp	r3, #0
 8006cbc:	d14b      	bne.n	8006d56 <USBD_LL_DataOutStage+0xac>
  {
    pep = &pdev->ep_out[0];
 8006cbe:	68fb      	ldr	r3, [r7, #12]
 8006cc0:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8006cc4:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8006cc6:	68fb      	ldr	r3, [r7, #12]
 8006cc8:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8006ccc:	2b03      	cmp	r3, #3
 8006cce:	d134      	bne.n	8006d3a <USBD_LL_DataOutStage+0x90>
    {
      if (pep->rem_length > pep->maxpacket)
 8006cd0:	697b      	ldr	r3, [r7, #20]
 8006cd2:	68da      	ldr	r2, [r3, #12]
 8006cd4:	697b      	ldr	r3, [r7, #20]
 8006cd6:	691b      	ldr	r3, [r3, #16]
 8006cd8:	429a      	cmp	r2, r3
 8006cda:	d919      	bls.n	8006d10 <USBD_LL_DataOutStage+0x66>
      {
        pep->rem_length -= pep->maxpacket;
 8006cdc:	697b      	ldr	r3, [r7, #20]
 8006cde:	68da      	ldr	r2, [r3, #12]
 8006ce0:	697b      	ldr	r3, [r7, #20]
 8006ce2:	691b      	ldr	r3, [r3, #16]
 8006ce4:	1ad2      	subs	r2, r2, r3
 8006ce6:	697b      	ldr	r3, [r7, #20]
 8006ce8:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueRx(pdev, pdata,
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8006cea:	697b      	ldr	r3, [r7, #20]
 8006cec:	68da      	ldr	r2, [r3, #12]
 8006cee:	697b      	ldr	r3, [r7, #20]
 8006cf0:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 8006cf2:	429a      	cmp	r2, r3
 8006cf4:	d203      	bcs.n	8006cfe <USBD_LL_DataOutStage+0x54>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8006cf6:	697b      	ldr	r3, [r7, #20]
 8006cf8:	68db      	ldr	r3, [r3, #12]
        USBD_CtlContinueRx(pdev, pdata,
 8006cfa:	b29b      	uxth	r3, r3
 8006cfc:	e002      	b.n	8006d04 <USBD_LL_DataOutStage+0x5a>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8006cfe:	697b      	ldr	r3, [r7, #20]
 8006d00:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 8006d02:	b29b      	uxth	r3, r3
 8006d04:	461a      	mov	r2, r3
 8006d06:	6879      	ldr	r1, [r7, #4]
 8006d08:	68f8      	ldr	r0, [r7, #12]
 8006d0a:	f000 ff35 	bl	8007b78 <USBD_CtlContinueRx>
 8006d0e:	e038      	b.n	8006d82 <USBD_LL_DataOutStage+0xd8>
      }
      else
      {
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8006d10:	68fb      	ldr	r3, [r7, #12]
 8006d12:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006d16:	691b      	ldr	r3, [r3, #16]
 8006d18:	2b00      	cmp	r3, #0
 8006d1a:	d00a      	beq.n	8006d32 <USBD_LL_DataOutStage+0x88>
            (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8006d22:	2b03      	cmp	r3, #3
 8006d24:	d105      	bne.n	8006d32 <USBD_LL_DataOutStage+0x88>
        {
          pdev->pClass->EP0_RxReady(pdev);
 8006d26:	68fb      	ldr	r3, [r7, #12]
 8006d28:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006d2c:	691b      	ldr	r3, [r3, #16]
 8006d2e:	68f8      	ldr	r0, [r7, #12]
 8006d30:	4798      	blx	r3
        }
        USBD_CtlSendStatus(pdev);
 8006d32:	68f8      	ldr	r0, [r7, #12]
 8006d34:	f000 ff32 	bl	8007b9c <USBD_CtlSendStatus>
 8006d38:	e023      	b.n	8006d82 <USBD_LL_DataOutStage+0xd8>
      }
    }
    else
    {
      if (pdev->ep0_state == USBD_EP0_STATUS_OUT)
 8006d3a:	68fb      	ldr	r3, [r7, #12]
 8006d3c:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8006d40:	2b05      	cmp	r3, #5
 8006d42:	d11e      	bne.n	8006d82 <USBD_LL_DataOutStage+0xd8>
      {
        /*
         * STATUS PHASE completed, update ep0_state to idle
         */
        pdev->ep0_state = USBD_EP0_IDLE;
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	2200      	movs	r2, #0
 8006d48:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
        USBD_LL_StallEP(pdev, 0U);
 8006d4c:	2100      	movs	r1, #0
 8006d4e:	68f8      	ldr	r0, [r7, #12]
 8006d50:	f001 f9e8 	bl	8008124 <USBD_LL_StallEP>
 8006d54:	e015      	b.n	8006d82 <USBD_LL_DataOutStage+0xd8>
      }
    }
  }
  else if ((pdev->pClass->DataOut != NULL) &&
 8006d56:	68fb      	ldr	r3, [r7, #12]
 8006d58:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006d5c:	699b      	ldr	r3, [r3, #24]
 8006d5e:	2b00      	cmp	r3, #0
 8006d60:	d00d      	beq.n	8006d7e <USBD_LL_DataOutStage+0xd4>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006d62:	68fb      	ldr	r3, [r7, #12]
 8006d64:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
  else if ((pdev->pClass->DataOut != NULL) &&
 8006d68:	2b03      	cmp	r3, #3
 8006d6a:	d108      	bne.n	8006d7e <USBD_LL_DataOutStage+0xd4>
  {
    pdev->pClass->DataOut(pdev, epnum);
 8006d6c:	68fb      	ldr	r3, [r7, #12]
 8006d6e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006d72:	699b      	ldr	r3, [r3, #24]
 8006d74:	7afa      	ldrb	r2, [r7, #11]
 8006d76:	4611      	mov	r1, r2
 8006d78:	68f8      	ldr	r0, [r7, #12]
 8006d7a:	4798      	blx	r3
 8006d7c:	e001      	b.n	8006d82 <USBD_LL_DataOutStage+0xd8>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 8006d7e:	2302      	movs	r3, #2
 8006d80:	e000      	b.n	8006d84 <USBD_LL_DataOutStage+0xda>
  }

  return USBD_OK;
 8006d82:	2300      	movs	r3, #0
}
 8006d84:	4618      	mov	r0, r3
 8006d86:	3718      	adds	r7, #24
 8006d88:	46bd      	mov	sp, r7
 8006d8a:	bd80      	pop	{r7, pc}

08006d8c <USBD_LL_DataInStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8006d8c:	b580      	push	{r7, lr}
 8006d8e:	b086      	sub	sp, #24
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	60f8      	str	r0, [r7, #12]
 8006d94:	460b      	mov	r3, r1
 8006d96:	607a      	str	r2, [r7, #4]
 8006d98:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 8006d9a:	7afb      	ldrb	r3, [r7, #11]
 8006d9c:	2b00      	cmp	r3, #0
 8006d9e:	d17f      	bne.n	8006ea0 <USBD_LL_DataInStage+0x114>
  {
    pep = &pdev->ep_in[0];
 8006da0:	68fb      	ldr	r3, [r7, #12]
 8006da2:	3314      	adds	r3, #20
 8006da4:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8006dac:	2b02      	cmp	r3, #2
 8006dae:	d15c      	bne.n	8006e6a <USBD_LL_DataInStage+0xde>
    {
      if (pep->rem_length > pep->maxpacket)
 8006db0:	697b      	ldr	r3, [r7, #20]
 8006db2:	68da      	ldr	r2, [r3, #12]
 8006db4:	697b      	ldr	r3, [r7, #20]
 8006db6:	691b      	ldr	r3, [r3, #16]
 8006db8:	429a      	cmp	r2, r3
 8006dba:	d915      	bls.n	8006de8 <USBD_LL_DataInStage+0x5c>
      {
        pep->rem_length -= pep->maxpacket;
 8006dbc:	697b      	ldr	r3, [r7, #20]
 8006dbe:	68da      	ldr	r2, [r3, #12]
 8006dc0:	697b      	ldr	r3, [r7, #20]
 8006dc2:	691b      	ldr	r3, [r3, #16]
 8006dc4:	1ad2      	subs	r2, r2, r3
 8006dc6:	697b      	ldr	r3, [r7, #20]
 8006dc8:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueSendData(pdev, pdata, (uint16_t)pep->rem_length);
 8006dca:	697b      	ldr	r3, [r7, #20]
 8006dcc:	68db      	ldr	r3, [r3, #12]
 8006dce:	b29b      	uxth	r3, r3
 8006dd0:	461a      	mov	r2, r3
 8006dd2:	6879      	ldr	r1, [r7, #4]
 8006dd4:	68f8      	ldr	r0, [r7, #12]
 8006dd6:	f000 febd 	bl	8007b54 <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8006dda:	2300      	movs	r3, #0
 8006ddc:	2200      	movs	r2, #0
 8006dde:	2100      	movs	r1, #0
 8006de0:	68f8      	ldr	r0, [r7, #12]
 8006de2:	f001 fa4a 	bl	800827a <USBD_LL_PrepareReceive>
 8006de6:	e04e      	b.n	8006e86 <USBD_LL_DataInStage+0xfa>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->total_length % pep->maxpacket == 0U) &&
 8006de8:	697b      	ldr	r3, [r7, #20]
 8006dea:	689b      	ldr	r3, [r3, #8]
 8006dec:	697a      	ldr	r2, [r7, #20]
 8006dee:	6912      	ldr	r2, [r2, #16]
 8006df0:	fbb3 f1f2 	udiv	r1, r3, r2
 8006df4:	fb01 f202 	mul.w	r2, r1, r2
 8006df8:	1a9b      	subs	r3, r3, r2
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d11c      	bne.n	8006e38 <USBD_LL_DataInStage+0xac>
            (pep->total_length >= pep->maxpacket) &&
 8006dfe:	697b      	ldr	r3, [r7, #20]
 8006e00:	689a      	ldr	r2, [r3, #8]
 8006e02:	697b      	ldr	r3, [r7, #20]
 8006e04:	691b      	ldr	r3, [r3, #16]
        if ((pep->total_length % pep->maxpacket == 0U) &&
 8006e06:	429a      	cmp	r2, r3
 8006e08:	d316      	bcc.n	8006e38 <USBD_LL_DataInStage+0xac>
            (pep->total_length < pdev->ep0_data_len))
 8006e0a:	697b      	ldr	r3, [r7, #20]
 8006e0c:	689a      	ldr	r2, [r3, #8]
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
            (pep->total_length >= pep->maxpacket) &&
 8006e14:	429a      	cmp	r2, r3
 8006e16:	d20f      	bcs.n	8006e38 <USBD_LL_DataInStage+0xac>
        {
          USBD_CtlContinueSendData(pdev, NULL, 0U);
 8006e18:	2200      	movs	r2, #0
 8006e1a:	2100      	movs	r1, #0
 8006e1c:	68f8      	ldr	r0, [r7, #12]
 8006e1e:	f000 fe99 	bl	8007b54 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 8006e22:	68fb      	ldr	r3, [r7, #12]
 8006e24:	2200      	movs	r2, #0
 8006e26:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298

          /* Prepare endpoint for premature end of transfer */
          USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8006e2a:	2300      	movs	r3, #0
 8006e2c:	2200      	movs	r2, #0
 8006e2e:	2100      	movs	r1, #0
 8006e30:	68f8      	ldr	r0, [r7, #12]
 8006e32:	f001 fa22 	bl	800827a <USBD_LL_PrepareReceive>
 8006e36:	e026      	b.n	8006e86 <USBD_LL_DataInStage+0xfa>
        }
        else
        {
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 8006e38:	68fb      	ldr	r3, [r7, #12]
 8006e3a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006e3e:	68db      	ldr	r3, [r3, #12]
 8006e40:	2b00      	cmp	r3, #0
 8006e42:	d00a      	beq.n	8006e5a <USBD_LL_DataInStage+0xce>
              (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 8006e4a:	2b03      	cmp	r3, #3
 8006e4c:	d105      	bne.n	8006e5a <USBD_LL_DataInStage+0xce>
          {
            pdev->pClass->EP0_TxSent(pdev);
 8006e4e:	68fb      	ldr	r3, [r7, #12]
 8006e50:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006e54:	68db      	ldr	r3, [r3, #12]
 8006e56:	68f8      	ldr	r0, [r7, #12]
 8006e58:	4798      	blx	r3
          }
          USBD_LL_StallEP(pdev, 0x80U);
 8006e5a:	2180      	movs	r1, #128	@ 0x80
 8006e5c:	68f8      	ldr	r0, [r7, #12]
 8006e5e:	f001 f961 	bl	8008124 <USBD_LL_StallEP>
          USBD_CtlReceiveStatus(pdev);
 8006e62:	68f8      	ldr	r0, [r7, #12]
 8006e64:	f000 fead 	bl	8007bc2 <USBD_CtlReceiveStatus>
 8006e68:	e00d      	b.n	8006e86 <USBD_LL_DataInStage+0xfa>
        }
      }
    }
    else
    {
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 8006e6a:	68fb      	ldr	r3, [r7, #12]
 8006e6c:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8006e70:	2b04      	cmp	r3, #4
 8006e72:	d004      	beq.n	8006e7e <USBD_LL_DataInStage+0xf2>
          (pdev->ep0_state == USBD_EP0_IDLE))
 8006e74:	68fb      	ldr	r3, [r7, #12]
 8006e76:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 8006e7a:	2b00      	cmp	r3, #0
 8006e7c:	d103      	bne.n	8006e86 <USBD_LL_DataInStage+0xfa>
      {
        USBD_LL_StallEP(pdev, 0x80U);
 8006e7e:	2180      	movs	r1, #128	@ 0x80
 8006e80:	68f8      	ldr	r0, [r7, #12]
 8006e82:	f001 f94f 	bl	8008124 <USBD_LL_StallEP>
      }
    }

    if (pdev->dev_test_mode == 1U)
 8006e86:	68fb      	ldr	r3, [r7, #12]
 8006e88:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8006e8c:	2b01      	cmp	r3, #1
 8006e8e:	d11d      	bne.n	8006ecc <USBD_LL_DataInStage+0x140>
    {
      USBD_RunTestMode(pdev);
 8006e90:	68f8      	ldr	r0, [r7, #12]
 8006e92:	f7ff fe81 	bl	8006b98 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	2200      	movs	r2, #0
 8006e9a:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8006e9e:	e015      	b.n	8006ecc <USBD_LL_DataInStage+0x140>
    }
  }
  else if ((pdev->pClass->DataIn != NULL) &&
 8006ea0:	68fb      	ldr	r3, [r7, #12]
 8006ea2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006ea6:	695b      	ldr	r3, [r3, #20]
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	d00d      	beq.n	8006ec8 <USBD_LL_DataInStage+0x13c>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006eac:	68fb      	ldr	r3, [r7, #12]
 8006eae:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
  else if ((pdev->pClass->DataIn != NULL) &&
 8006eb2:	2b03      	cmp	r3, #3
 8006eb4:	d108      	bne.n	8006ec8 <USBD_LL_DataInStage+0x13c>
  {
    pdev->pClass->DataIn(pdev, epnum);
 8006eb6:	68fb      	ldr	r3, [r7, #12]
 8006eb8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006ebc:	695b      	ldr	r3, [r3, #20]
 8006ebe:	7afa      	ldrb	r2, [r7, #11]
 8006ec0:	4611      	mov	r1, r2
 8006ec2:	68f8      	ldr	r0, [r7, #12]
 8006ec4:	4798      	blx	r3
 8006ec6:	e001      	b.n	8006ecc <USBD_LL_DataInStage+0x140>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 8006ec8:	2302      	movs	r3, #2
 8006eca:	e000      	b.n	8006ece <USBD_LL_DataInStage+0x142>
  }

  return USBD_OK;
 8006ecc:	2300      	movs	r3, #0
}
 8006ece:	4618      	mov	r0, r3
 8006ed0:	3718      	adds	r7, #24
 8006ed2:	46bd      	mov	sp, r7
 8006ed4:	bd80      	pop	{r7, pc}

08006ed6 <USBD_LL_Reset>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 8006ed6:	b580      	push	{r7, lr}
 8006ed8:	b082      	sub	sp, #8
 8006eda:	af00      	add	r7, sp, #0
 8006edc:	6078      	str	r0, [r7, #4]
  /* Open EP0 OUT */
  USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8006ede:	2340      	movs	r3, #64	@ 0x40
 8006ee0:	2200      	movs	r2, #0
 8006ee2:	2100      	movs	r1, #0
 8006ee4:	6878      	ldr	r0, [r7, #4]
 8006ee6:	f001 f8d8 	bl	800809a <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	2201      	movs	r2, #1
 8006eee:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	2240      	movs	r2, #64	@ 0x40
 8006ef6:	f8c3 2164 	str.w	r2, [r3, #356]	@ 0x164

  /* Open EP0 IN */
  USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8006efa:	2340      	movs	r3, #64	@ 0x40
 8006efc:	2200      	movs	r2, #0
 8006efe:	2180      	movs	r1, #128	@ 0x80
 8006f00:	6878      	ldr	r0, [r7, #4]
 8006f02:	f001 f8ca 	bl	800809a <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	2201      	movs	r2, #1
 8006f0a:	619a      	str	r2, [r3, #24]

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	2240      	movs	r2, #64	@ 0x40
 8006f10:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	2201      	movs	r2, #1
 8006f16:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	2200      	movs	r2, #0
 8006f1e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->dev_config = 0U;
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	2200      	movs	r2, #0
 8006f26:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	2200      	movs	r2, #0
 8006f2c:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4

  if (pdev->pClassData)
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8006f36:	2b00      	cmp	r3, #0
 8006f38:	d009      	beq.n	8006f4e <USBD_LL_Reset+0x78>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006f40:	685b      	ldr	r3, [r3, #4]
 8006f42:	687a      	ldr	r2, [r7, #4]
 8006f44:	6852      	ldr	r2, [r2, #4]
 8006f46:	b2d2      	uxtb	r2, r2
 8006f48:	4611      	mov	r1, r2
 8006f4a:	6878      	ldr	r0, [r7, #4]
 8006f4c:	4798      	blx	r3
  }

  return USBD_OK;
 8006f4e:	2300      	movs	r3, #0
}
 8006f50:	4618      	mov	r0, r3
 8006f52:	3708      	adds	r7, #8
 8006f54:	46bd      	mov	sp, r7
 8006f56:	bd80      	pop	{r7, pc}

08006f58 <USBD_LL_SetSpeed>:
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 8006f58:	b480      	push	{r7}
 8006f5a:	b083      	sub	sp, #12
 8006f5c:	af00      	add	r7, sp, #0
 8006f5e:	6078      	str	r0, [r7, #4]
 8006f60:	460b      	mov	r3, r1
 8006f62:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	78fa      	ldrb	r2, [r7, #3]
 8006f68:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 8006f6a:	2300      	movs	r3, #0
}
 8006f6c:	4618      	mov	r0, r3
 8006f6e:	370c      	adds	r7, #12
 8006f70:	46bd      	mov	sp, r7
 8006f72:	bc80      	pop	{r7}
 8006f74:	4770      	bx	lr

08006f76 <USBD_LL_Suspend>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 8006f76:	b480      	push	{r7}
 8006f78:	b083      	sub	sp, #12
 8006f7a:	af00      	add	r7, sp, #0
 8006f7c:	6078      	str	r0, [r7, #4]
  pdev->dev_old_state =  pdev->dev_state;
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	f893 229c 	ldrb.w	r2, [r3, #668]	@ 0x29c
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
  pdev->dev_state  = USBD_STATE_SUSPENDED;
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	2204      	movs	r2, #4
 8006f8e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c

  return USBD_OK;
 8006f92:	2300      	movs	r3, #0
}
 8006f94:	4618      	mov	r0, r3
 8006f96:	370c      	adds	r7, #12
 8006f98:	46bd      	mov	sp, r7
 8006f9a:	bc80      	pop	{r7}
 8006f9c:	4770      	bx	lr

08006f9e <USBD_LL_Resume>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 8006f9e:	b480      	push	{r7}
 8006fa0:	b083      	sub	sp, #12
 8006fa2:	af00      	add	r7, sp, #0
 8006fa4:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8006fac:	2b04      	cmp	r3, #4
 8006fae:	d105      	bne.n	8006fbc <USBD_LL_Resume+0x1e>
  {
    pdev->dev_state = pdev->dev_old_state;
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	f893 229d 	ldrb.w	r2, [r3, #669]	@ 0x29d
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
  }

  return USBD_OK;
 8006fbc:	2300      	movs	r3, #0
}
 8006fbe:	4618      	mov	r0, r3
 8006fc0:	370c      	adds	r7, #12
 8006fc2:	46bd      	mov	sp, r7
 8006fc4:	bc80      	pop	{r7}
 8006fc6:	4770      	bx	lr

08006fc8 <USBD_LL_SOF>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 8006fc8:	b580      	push	{r7, lr}
 8006fca:	b082      	sub	sp, #8
 8006fcc:	af00      	add	r7, sp, #0
 8006fce:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8006fd6:	2b03      	cmp	r3, #3
 8006fd8:	d10b      	bne.n	8006ff2 <USBD_LL_SOF+0x2a>
  {
    if (pdev->pClass->SOF != NULL)
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006fe0:	69db      	ldr	r3, [r3, #28]
 8006fe2:	2b00      	cmp	r3, #0
 8006fe4:	d005      	beq.n	8006ff2 <USBD_LL_SOF+0x2a>
    {
      pdev->pClass->SOF(pdev);
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8006fec:	69db      	ldr	r3, [r3, #28]
 8006fee:	6878      	ldr	r0, [r7, #4]
 8006ff0:	4798      	blx	r3
    }
  }

  return USBD_OK;
 8006ff2:	2300      	movs	r3, #0
}
 8006ff4:	4618      	mov	r0, r3
 8006ff6:	3708      	adds	r7, #8
 8006ff8:	46bd      	mov	sp, r7
 8006ffa:	bd80      	pop	{r7, pc}

08006ffc <USBD_StdDevReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdDevReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef *req)
{
 8006ffc:	b580      	push	{r7, lr}
 8006ffe:	b084      	sub	sp, #16
 8007000:	af00      	add	r7, sp, #0
 8007002:	6078      	str	r0, [r7, #4]
 8007004:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8007006:	2300      	movs	r3, #0
 8007008:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800700a:	683b      	ldr	r3, [r7, #0]
 800700c:	781b      	ldrb	r3, [r3, #0]
 800700e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8007012:	2b40      	cmp	r3, #64	@ 0x40
 8007014:	d005      	beq.n	8007022 <USBD_StdDevReq+0x26>
 8007016:	2b40      	cmp	r3, #64	@ 0x40
 8007018:	d84f      	bhi.n	80070ba <USBD_StdDevReq+0xbe>
 800701a:	2b00      	cmp	r3, #0
 800701c:	d009      	beq.n	8007032 <USBD_StdDevReq+0x36>
 800701e:	2b20      	cmp	r3, #32
 8007020:	d14b      	bne.n	80070ba <USBD_StdDevReq+0xbe>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 8007022:	687b      	ldr	r3, [r7, #4]
 8007024:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8007028:	689b      	ldr	r3, [r3, #8]
 800702a:	6839      	ldr	r1, [r7, #0]
 800702c:	6878      	ldr	r0, [r7, #4]
 800702e:	4798      	blx	r3
      break;
 8007030:	e048      	b.n	80070c4 <USBD_StdDevReq+0xc8>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 8007032:	683b      	ldr	r3, [r7, #0]
 8007034:	785b      	ldrb	r3, [r3, #1]
 8007036:	2b09      	cmp	r3, #9
 8007038:	d839      	bhi.n	80070ae <USBD_StdDevReq+0xb2>
 800703a:	a201      	add	r2, pc, #4	@ (adr r2, 8007040 <USBD_StdDevReq+0x44>)
 800703c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007040:	08007091 	.word	0x08007091
 8007044:	080070a5 	.word	0x080070a5
 8007048:	080070af 	.word	0x080070af
 800704c:	0800709b 	.word	0x0800709b
 8007050:	080070af 	.word	0x080070af
 8007054:	08007073 	.word	0x08007073
 8007058:	08007069 	.word	0x08007069
 800705c:	080070af 	.word	0x080070af
 8007060:	08007087 	.word	0x08007087
 8007064:	0800707d 	.word	0x0800707d
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 8007068:	6839      	ldr	r1, [r7, #0]
 800706a:	6878      	ldr	r0, [r7, #4]
 800706c:	f000 f9dc 	bl	8007428 <USBD_GetDescriptor>
          break;
 8007070:	e022      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 8007072:	6839      	ldr	r1, [r7, #0]
 8007074:	6878      	ldr	r0, [r7, #4]
 8007076:	f000 fb3f 	bl	80076f8 <USBD_SetAddress>
          break;
 800707a:	e01d      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_CONFIGURATION:
          USBD_SetConfig(pdev, req);
 800707c:	6839      	ldr	r1, [r7, #0]
 800707e:	6878      	ldr	r0, [r7, #4]
 8007080:	f000 fb7e 	bl	8007780 <USBD_SetConfig>
          break;
 8007084:	e018      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 8007086:	6839      	ldr	r1, [r7, #0]
 8007088:	6878      	ldr	r0, [r7, #4]
 800708a:	f000 fc07 	bl	800789c <USBD_GetConfig>
          break;
 800708e:	e013      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 8007090:	6839      	ldr	r1, [r7, #0]
 8007092:	6878      	ldr	r0, [r7, #4]
 8007094:	f000 fc37 	bl	8007906 <USBD_GetStatus>
          break;
 8007098:	e00e      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800709a:	6839      	ldr	r1, [r7, #0]
 800709c:	6878      	ldr	r0, [r7, #4]
 800709e:	f000 fc65 	bl	800796c <USBD_SetFeature>
          break;
 80070a2:	e009      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 80070a4:	6839      	ldr	r1, [r7, #0]
 80070a6:	6878      	ldr	r0, [r7, #4]
 80070a8:	f000 fc74 	bl	8007994 <USBD_ClrFeature>
          break;
 80070ac:	e004      	b.n	80070b8 <USBD_StdDevReq+0xbc>

        default:
          USBD_CtlError(pdev, req);
 80070ae:	6839      	ldr	r1, [r7, #0]
 80070b0:	6878      	ldr	r0, [r7, #4]
 80070b2:	f000 fcc9 	bl	8007a48 <USBD_CtlError>
          break;
 80070b6:	bf00      	nop
      }
      break;
 80070b8:	e004      	b.n	80070c4 <USBD_StdDevReq+0xc8>

    default:
      USBD_CtlError(pdev, req);
 80070ba:	6839      	ldr	r1, [r7, #0]
 80070bc:	6878      	ldr	r0, [r7, #4]
 80070be:	f000 fcc3 	bl	8007a48 <USBD_CtlError>
      break;
 80070c2:	bf00      	nop
  }

  return ret;
 80070c4:	7bfb      	ldrb	r3, [r7, #15]
}
 80070c6:	4618      	mov	r0, r3
 80070c8:	3710      	adds	r7, #16
 80070ca:	46bd      	mov	sp, r7
 80070cc:	bd80      	pop	{r7, pc}
 80070ce:	bf00      	nop

080070d0 <USBD_StdItfReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdItfReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef  *req)
{
 80070d0:	b580      	push	{r7, lr}
 80070d2:	b084      	sub	sp, #16
 80070d4:	af00      	add	r7, sp, #0
 80070d6:	6078      	str	r0, [r7, #4]
 80070d8:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 80070da:	2300      	movs	r3, #0
 80070dc:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80070de:	683b      	ldr	r3, [r7, #0]
 80070e0:	781b      	ldrb	r3, [r3, #0]
 80070e2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80070e6:	2b40      	cmp	r3, #64	@ 0x40
 80070e8:	d005      	beq.n	80070f6 <USBD_StdItfReq+0x26>
 80070ea:	2b40      	cmp	r3, #64	@ 0x40
 80070ec:	d82e      	bhi.n	800714c <USBD_StdItfReq+0x7c>
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d001      	beq.n	80070f6 <USBD_StdItfReq+0x26>
 80070f2:	2b20      	cmp	r3, #32
 80070f4:	d12a      	bne.n	800714c <USBD_StdItfReq+0x7c>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80070fc:	3b01      	subs	r3, #1
 80070fe:	2b02      	cmp	r3, #2
 8007100:	d81d      	bhi.n	800713e <USBD_StdItfReq+0x6e>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8007102:	683b      	ldr	r3, [r7, #0]
 8007104:	889b      	ldrh	r3, [r3, #4]
 8007106:	b2db      	uxtb	r3, r3
 8007108:	2b01      	cmp	r3, #1
 800710a:	d813      	bhi.n	8007134 <USBD_StdItfReq+0x64>
          {
            ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8007112:	689b      	ldr	r3, [r3, #8]
 8007114:	6839      	ldr	r1, [r7, #0]
 8007116:	6878      	ldr	r0, [r7, #4]
 8007118:	4798      	blx	r3
 800711a:	4603      	mov	r3, r0
 800711c:	73fb      	strb	r3, [r7, #15]

            if ((req->wLength == 0U) && (ret == USBD_OK))
 800711e:	683b      	ldr	r3, [r7, #0]
 8007120:	88db      	ldrh	r3, [r3, #6]
 8007122:	2b00      	cmp	r3, #0
 8007124:	d110      	bne.n	8007148 <USBD_StdItfReq+0x78>
 8007126:	7bfb      	ldrb	r3, [r7, #15]
 8007128:	2b00      	cmp	r3, #0
 800712a:	d10d      	bne.n	8007148 <USBD_StdItfReq+0x78>
            {
              USBD_CtlSendStatus(pdev);
 800712c:	6878      	ldr	r0, [r7, #4]
 800712e:	f000 fd35 	bl	8007b9c <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 8007132:	e009      	b.n	8007148 <USBD_StdItfReq+0x78>
            USBD_CtlError(pdev, req);
 8007134:	6839      	ldr	r1, [r7, #0]
 8007136:	6878      	ldr	r0, [r7, #4]
 8007138:	f000 fc86 	bl	8007a48 <USBD_CtlError>
          break;
 800713c:	e004      	b.n	8007148 <USBD_StdItfReq+0x78>

        default:
          USBD_CtlError(pdev, req);
 800713e:	6839      	ldr	r1, [r7, #0]
 8007140:	6878      	ldr	r0, [r7, #4]
 8007142:	f000 fc81 	bl	8007a48 <USBD_CtlError>
          break;
 8007146:	e000      	b.n	800714a <USBD_StdItfReq+0x7a>
          break;
 8007148:	bf00      	nop
      }
      break;
 800714a:	e004      	b.n	8007156 <USBD_StdItfReq+0x86>

    default:
      USBD_CtlError(pdev, req);
 800714c:	6839      	ldr	r1, [r7, #0]
 800714e:	6878      	ldr	r0, [r7, #4]
 8007150:	f000 fc7a 	bl	8007a48 <USBD_CtlError>
      break;
 8007154:	bf00      	nop
  }

  return USBD_OK;
 8007156:	2300      	movs	r3, #0
}
 8007158:	4618      	mov	r0, r3
 800715a:	3710      	adds	r7, #16
 800715c:	46bd      	mov	sp, r7
 800715e:	bd80      	pop	{r7, pc}

08007160 <USBD_StdEPReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdEPReq(USBD_HandleTypeDef *pdev,
                                  USBD_SetupReqTypedef  *req)
{
 8007160:	b580      	push	{r7, lr}
 8007162:	b084      	sub	sp, #16
 8007164:	af00      	add	r7, sp, #0
 8007166:	6078      	str	r0, [r7, #4]
 8007168:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t   ep_addr;
  USBD_StatusTypeDef ret = USBD_OK;
 800716a:	2300      	movs	r3, #0
 800716c:	73fb      	strb	r3, [r7, #15]
  ep_addr  = LOBYTE(req->wIndex);
 800716e:	683b      	ldr	r3, [r7, #0]
 8007170:	889b      	ldrh	r3, [r3, #4]
 8007172:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8007174:	683b      	ldr	r3, [r7, #0]
 8007176:	781b      	ldrb	r3, [r3, #0]
 8007178:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800717c:	2b40      	cmp	r3, #64	@ 0x40
 800717e:	d007      	beq.n	8007190 <USBD_StdEPReq+0x30>
 8007180:	2b40      	cmp	r3, #64	@ 0x40
 8007182:	f200 8146 	bhi.w	8007412 <USBD_StdEPReq+0x2b2>
 8007186:	2b00      	cmp	r3, #0
 8007188:	d00a      	beq.n	80071a0 <USBD_StdEPReq+0x40>
 800718a:	2b20      	cmp	r3, #32
 800718c:	f040 8141 	bne.w	8007412 <USBD_StdEPReq+0x2b2>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8007196:	689b      	ldr	r3, [r3, #8]
 8007198:	6839      	ldr	r1, [r7, #0]
 800719a:	6878      	ldr	r0, [r7, #4]
 800719c:	4798      	blx	r3
      break;
 800719e:	e13d      	b.n	800741c <USBD_StdEPReq+0x2bc>

    case USB_REQ_TYPE_STANDARD:
      /* Check if it is a class request */
      if ((req->bmRequest & 0x60U) == 0x20U)
 80071a0:	683b      	ldr	r3, [r7, #0]
 80071a2:	781b      	ldrb	r3, [r3, #0]
 80071a4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80071a8:	2b20      	cmp	r3, #32
 80071aa:	d10a      	bne.n	80071c2 <USBD_StdEPReq+0x62>
      {
        ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80071b2:	689b      	ldr	r3, [r3, #8]
 80071b4:	6839      	ldr	r1, [r7, #0]
 80071b6:	6878      	ldr	r0, [r7, #4]
 80071b8:	4798      	blx	r3
 80071ba:	4603      	mov	r3, r0
 80071bc:	73fb      	strb	r3, [r7, #15]

        return ret;
 80071be:	7bfb      	ldrb	r3, [r7, #15]
 80071c0:	e12d      	b.n	800741e <USBD_StdEPReq+0x2be>
      }

      switch (req->bRequest)
 80071c2:	683b      	ldr	r3, [r7, #0]
 80071c4:	785b      	ldrb	r3, [r3, #1]
 80071c6:	2b03      	cmp	r3, #3
 80071c8:	d007      	beq.n	80071da <USBD_StdEPReq+0x7a>
 80071ca:	2b03      	cmp	r3, #3
 80071cc:	f300 811b 	bgt.w	8007406 <USBD_StdEPReq+0x2a6>
 80071d0:	2b00      	cmp	r3, #0
 80071d2:	d072      	beq.n	80072ba <USBD_StdEPReq+0x15a>
 80071d4:	2b01      	cmp	r3, #1
 80071d6:	d03a      	beq.n	800724e <USBD_StdEPReq+0xee>
 80071d8:	e115      	b.n	8007406 <USBD_StdEPReq+0x2a6>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 80071da:	687b      	ldr	r3, [r7, #4]
 80071dc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80071e0:	2b02      	cmp	r3, #2
 80071e2:	d002      	beq.n	80071ea <USBD_StdEPReq+0x8a>
 80071e4:	2b03      	cmp	r3, #3
 80071e6:	d015      	beq.n	8007214 <USBD_StdEPReq+0xb4>
 80071e8:	e02b      	b.n	8007242 <USBD_StdEPReq+0xe2>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 80071ea:	7bbb      	ldrb	r3, [r7, #14]
 80071ec:	2b00      	cmp	r3, #0
 80071ee:	d00c      	beq.n	800720a <USBD_StdEPReq+0xaa>
 80071f0:	7bbb      	ldrb	r3, [r7, #14]
 80071f2:	2b80      	cmp	r3, #128	@ 0x80
 80071f4:	d009      	beq.n	800720a <USBD_StdEPReq+0xaa>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 80071f6:	7bbb      	ldrb	r3, [r7, #14]
 80071f8:	4619      	mov	r1, r3
 80071fa:	6878      	ldr	r0, [r7, #4]
 80071fc:	f000 ff92 	bl	8008124 <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 8007200:	2180      	movs	r1, #128	@ 0x80
 8007202:	6878      	ldr	r0, [r7, #4]
 8007204:	f000 ff8e 	bl	8008124 <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 8007208:	e020      	b.n	800724c <USBD_StdEPReq+0xec>
                USBD_CtlError(pdev, req);
 800720a:	6839      	ldr	r1, [r7, #0]
 800720c:	6878      	ldr	r0, [r7, #4]
 800720e:	f000 fc1b 	bl	8007a48 <USBD_CtlError>
              break;
 8007212:	e01b      	b.n	800724c <USBD_StdEPReq+0xec>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 8007214:	683b      	ldr	r3, [r7, #0]
 8007216:	885b      	ldrh	r3, [r3, #2]
 8007218:	2b00      	cmp	r3, #0
 800721a:	d10e      	bne.n	800723a <USBD_StdEPReq+0xda>
              {
                if ((ep_addr != 0x00U) &&
 800721c:	7bbb      	ldrb	r3, [r7, #14]
 800721e:	2b00      	cmp	r3, #0
 8007220:	d00b      	beq.n	800723a <USBD_StdEPReq+0xda>
 8007222:	7bbb      	ldrb	r3, [r7, #14]
 8007224:	2b80      	cmp	r3, #128	@ 0x80
 8007226:	d008      	beq.n	800723a <USBD_StdEPReq+0xda>
                    (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8007228:	683b      	ldr	r3, [r7, #0]
 800722a:	88db      	ldrh	r3, [r3, #6]
 800722c:	2b00      	cmp	r3, #0
 800722e:	d104      	bne.n	800723a <USBD_StdEPReq+0xda>
                {
                  USBD_LL_StallEP(pdev, ep_addr);
 8007230:	7bbb      	ldrb	r3, [r7, #14]
 8007232:	4619      	mov	r1, r3
 8007234:	6878      	ldr	r0, [r7, #4]
 8007236:	f000 ff75 	bl	8008124 <USBD_LL_StallEP>
                }
              }
              USBD_CtlSendStatus(pdev);
 800723a:	6878      	ldr	r0, [r7, #4]
 800723c:	f000 fcae 	bl	8007b9c <USBD_CtlSendStatus>

              break;
 8007240:	e004      	b.n	800724c <USBD_StdEPReq+0xec>

            default:
              USBD_CtlError(pdev, req);
 8007242:	6839      	ldr	r1, [r7, #0]
 8007244:	6878      	ldr	r0, [r7, #4]
 8007246:	f000 fbff 	bl	8007a48 <USBD_CtlError>
              break;
 800724a:	bf00      	nop
          }
          break;
 800724c:	e0e0      	b.n	8007410 <USBD_StdEPReq+0x2b0>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8007254:	2b02      	cmp	r3, #2
 8007256:	d002      	beq.n	800725e <USBD_StdEPReq+0xfe>
 8007258:	2b03      	cmp	r3, #3
 800725a:	d015      	beq.n	8007288 <USBD_StdEPReq+0x128>
 800725c:	e026      	b.n	80072ac <USBD_StdEPReq+0x14c>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800725e:	7bbb      	ldrb	r3, [r7, #14]
 8007260:	2b00      	cmp	r3, #0
 8007262:	d00c      	beq.n	800727e <USBD_StdEPReq+0x11e>
 8007264:	7bbb      	ldrb	r3, [r7, #14]
 8007266:	2b80      	cmp	r3, #128	@ 0x80
 8007268:	d009      	beq.n	800727e <USBD_StdEPReq+0x11e>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 800726a:	7bbb      	ldrb	r3, [r7, #14]
 800726c:	4619      	mov	r1, r3
 800726e:	6878      	ldr	r0, [r7, #4]
 8007270:	f000 ff58 	bl	8008124 <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 8007274:	2180      	movs	r1, #128	@ 0x80
 8007276:	6878      	ldr	r0, [r7, #4]
 8007278:	f000 ff54 	bl	8008124 <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800727c:	e01c      	b.n	80072b8 <USBD_StdEPReq+0x158>
                USBD_CtlError(pdev, req);
 800727e:	6839      	ldr	r1, [r7, #0]
 8007280:	6878      	ldr	r0, [r7, #4]
 8007282:	f000 fbe1 	bl	8007a48 <USBD_CtlError>
              break;
 8007286:	e017      	b.n	80072b8 <USBD_StdEPReq+0x158>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 8007288:	683b      	ldr	r3, [r7, #0]
 800728a:	885b      	ldrh	r3, [r3, #2]
 800728c:	2b00      	cmp	r3, #0
 800728e:	d112      	bne.n	80072b6 <USBD_StdEPReq+0x156>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 8007290:	7bbb      	ldrb	r3, [r7, #14]
 8007292:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007296:	2b00      	cmp	r3, #0
 8007298:	d004      	beq.n	80072a4 <USBD_StdEPReq+0x144>
                {
                  USBD_LL_ClearStallEP(pdev, ep_addr);
 800729a:	7bbb      	ldrb	r3, [r7, #14]
 800729c:	4619      	mov	r1, r3
 800729e:	6878      	ldr	r0, [r7, #4]
 80072a0:	f000 ff5f 	bl	8008162 <USBD_LL_ClearStallEP>
                }
                USBD_CtlSendStatus(pdev);
 80072a4:	6878      	ldr	r0, [r7, #4]
 80072a6:	f000 fc79 	bl	8007b9c <USBD_CtlSendStatus>
              }
              break;
 80072aa:	e004      	b.n	80072b6 <USBD_StdEPReq+0x156>

            default:
              USBD_CtlError(pdev, req);
 80072ac:	6839      	ldr	r1, [r7, #0]
 80072ae:	6878      	ldr	r0, [r7, #4]
 80072b0:	f000 fbca 	bl	8007a48 <USBD_CtlError>
              break;
 80072b4:	e000      	b.n	80072b8 <USBD_StdEPReq+0x158>
              break;
 80072b6:	bf00      	nop
          }
          break;
 80072b8:	e0aa      	b.n	8007410 <USBD_StdEPReq+0x2b0>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80072c0:	2b02      	cmp	r3, #2
 80072c2:	d002      	beq.n	80072ca <USBD_StdEPReq+0x16a>
 80072c4:	2b03      	cmp	r3, #3
 80072c6:	d032      	beq.n	800732e <USBD_StdEPReq+0x1ce>
 80072c8:	e097      	b.n	80073fa <USBD_StdEPReq+0x29a>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 80072ca:	7bbb      	ldrb	r3, [r7, #14]
 80072cc:	2b00      	cmp	r3, #0
 80072ce:	d007      	beq.n	80072e0 <USBD_StdEPReq+0x180>
 80072d0:	7bbb      	ldrb	r3, [r7, #14]
 80072d2:	2b80      	cmp	r3, #128	@ 0x80
 80072d4:	d004      	beq.n	80072e0 <USBD_StdEPReq+0x180>
              {
                USBD_CtlError(pdev, req);
 80072d6:	6839      	ldr	r1, [r7, #0]
 80072d8:	6878      	ldr	r0, [r7, #4]
 80072da:	f000 fbb5 	bl	8007a48 <USBD_CtlError>
                break;
 80072de:	e091      	b.n	8007404 <USBD_StdEPReq+0x2a4>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 80072e0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80072e4:	2b00      	cmp	r3, #0
 80072e6:	da0b      	bge.n	8007300 <USBD_StdEPReq+0x1a0>
 80072e8:	7bbb      	ldrb	r3, [r7, #14]
 80072ea:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80072ee:	4613      	mov	r3, r2
 80072f0:	009b      	lsls	r3, r3, #2
 80072f2:	4413      	add	r3, r2
 80072f4:	009b      	lsls	r3, r3, #2
 80072f6:	3310      	adds	r3, #16
 80072f8:	687a      	ldr	r2, [r7, #4]
 80072fa:	4413      	add	r3, r2
 80072fc:	3304      	adds	r3, #4
 80072fe:	e00b      	b.n	8007318 <USBD_StdEPReq+0x1b8>
                    &pdev->ep_out[ep_addr & 0x7FU];
 8007300:	7bbb      	ldrb	r3, [r7, #14]
 8007302:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8007306:	4613      	mov	r3, r2
 8007308:	009b      	lsls	r3, r3, #2
 800730a:	4413      	add	r3, r2
 800730c:	009b      	lsls	r3, r3, #2
 800730e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8007312:	687a      	ldr	r2, [r7, #4]
 8007314:	4413      	add	r3, r2
 8007316:	3304      	adds	r3, #4
 8007318:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 800731a:	68bb      	ldr	r3, [r7, #8]
 800731c:	2200      	movs	r2, #0
 800731e:	601a      	str	r2, [r3, #0]

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 8007320:	68bb      	ldr	r3, [r7, #8]
 8007322:	2202      	movs	r2, #2
 8007324:	4619      	mov	r1, r3
 8007326:	6878      	ldr	r0, [r7, #4]
 8007328:	f000 fbf8 	bl	8007b1c <USBD_CtlSendData>
              break;
 800732c:	e06a      	b.n	8007404 <USBD_StdEPReq+0x2a4>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 800732e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007332:	2b00      	cmp	r3, #0
 8007334:	da11      	bge.n	800735a <USBD_StdEPReq+0x1fa>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8007336:	7bbb      	ldrb	r3, [r7, #14]
 8007338:	f003 020f 	and.w	r2, r3, #15
 800733c:	6879      	ldr	r1, [r7, #4]
 800733e:	4613      	mov	r3, r2
 8007340:	009b      	lsls	r3, r3, #2
 8007342:	4413      	add	r3, r2
 8007344:	009b      	lsls	r3, r3, #2
 8007346:	440b      	add	r3, r1
 8007348:	3318      	adds	r3, #24
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	2b00      	cmp	r3, #0
 800734e:	d117      	bne.n	8007380 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 8007350:	6839      	ldr	r1, [r7, #0]
 8007352:	6878      	ldr	r0, [r7, #4]
 8007354:	f000 fb78 	bl	8007a48 <USBD_CtlError>
                  break;
 8007358:	e054      	b.n	8007404 <USBD_StdEPReq+0x2a4>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800735a:	7bbb      	ldrb	r3, [r7, #14]
 800735c:	f003 020f 	and.w	r2, r3, #15
 8007360:	6879      	ldr	r1, [r7, #4]
 8007362:	4613      	mov	r3, r2
 8007364:	009b      	lsls	r3, r3, #2
 8007366:	4413      	add	r3, r2
 8007368:	009b      	lsls	r3, r3, #2
 800736a:	440b      	add	r3, r1
 800736c:	f503 73ac 	add.w	r3, r3, #344	@ 0x158
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	2b00      	cmp	r3, #0
 8007374:	d104      	bne.n	8007380 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 8007376:	6839      	ldr	r1, [r7, #0]
 8007378:	6878      	ldr	r0, [r7, #4]
 800737a:	f000 fb65 	bl	8007a48 <USBD_CtlError>
                  break;
 800737e:	e041      	b.n	8007404 <USBD_StdEPReq+0x2a4>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8007380:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8007384:	2b00      	cmp	r3, #0
 8007386:	da0b      	bge.n	80073a0 <USBD_StdEPReq+0x240>
 8007388:	7bbb      	ldrb	r3, [r7, #14]
 800738a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800738e:	4613      	mov	r3, r2
 8007390:	009b      	lsls	r3, r3, #2
 8007392:	4413      	add	r3, r2
 8007394:	009b      	lsls	r3, r3, #2
 8007396:	3310      	adds	r3, #16
 8007398:	687a      	ldr	r2, [r7, #4]
 800739a:	4413      	add	r3, r2
 800739c:	3304      	adds	r3, #4
 800739e:	e00b      	b.n	80073b8 <USBD_StdEPReq+0x258>
                    &pdev->ep_out[ep_addr & 0x7FU];
 80073a0:	7bbb      	ldrb	r3, [r7, #14]
 80073a2:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 80073a6:	4613      	mov	r3, r2
 80073a8:	009b      	lsls	r3, r3, #2
 80073aa:	4413      	add	r3, r2
 80073ac:	009b      	lsls	r3, r3, #2
 80073ae:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80073b2:	687a      	ldr	r2, [r7, #4]
 80073b4:	4413      	add	r3, r2
 80073b6:	3304      	adds	r3, #4
 80073b8:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 80073ba:	7bbb      	ldrb	r3, [r7, #14]
 80073bc:	2b00      	cmp	r3, #0
 80073be:	d002      	beq.n	80073c6 <USBD_StdEPReq+0x266>
 80073c0:	7bbb      	ldrb	r3, [r7, #14]
 80073c2:	2b80      	cmp	r3, #128	@ 0x80
 80073c4:	d103      	bne.n	80073ce <USBD_StdEPReq+0x26e>
              {
                pep->status = 0x0000U;
 80073c6:	68bb      	ldr	r3, [r7, #8]
 80073c8:	2200      	movs	r2, #0
 80073ca:	601a      	str	r2, [r3, #0]
 80073cc:	e00e      	b.n	80073ec <USBD_StdEPReq+0x28c>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr))
 80073ce:	7bbb      	ldrb	r3, [r7, #14]
 80073d0:	4619      	mov	r1, r3
 80073d2:	6878      	ldr	r0, [r7, #4]
 80073d4:	f000 fee4 	bl	80081a0 <USBD_LL_IsStallEP>
 80073d8:	4603      	mov	r3, r0
 80073da:	2b00      	cmp	r3, #0
 80073dc:	d003      	beq.n	80073e6 <USBD_StdEPReq+0x286>
              {
                pep->status = 0x0001U;
 80073de:	68bb      	ldr	r3, [r7, #8]
 80073e0:	2201      	movs	r2, #1
 80073e2:	601a      	str	r2, [r3, #0]
 80073e4:	e002      	b.n	80073ec <USBD_StdEPReq+0x28c>
              }
              else
              {
                pep->status = 0x0000U;
 80073e6:	68bb      	ldr	r3, [r7, #8]
 80073e8:	2200      	movs	r2, #0
 80073ea:	601a      	str	r2, [r3, #0]
              }

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 80073ec:	68bb      	ldr	r3, [r7, #8]
 80073ee:	2202      	movs	r2, #2
 80073f0:	4619      	mov	r1, r3
 80073f2:	6878      	ldr	r0, [r7, #4]
 80073f4:	f000 fb92 	bl	8007b1c <USBD_CtlSendData>
              break;
 80073f8:	e004      	b.n	8007404 <USBD_StdEPReq+0x2a4>

            default:
              USBD_CtlError(pdev, req);
 80073fa:	6839      	ldr	r1, [r7, #0]
 80073fc:	6878      	ldr	r0, [r7, #4]
 80073fe:	f000 fb23 	bl	8007a48 <USBD_CtlError>
              break;
 8007402:	bf00      	nop
          }
          break;
 8007404:	e004      	b.n	8007410 <USBD_StdEPReq+0x2b0>

        default:
          USBD_CtlError(pdev, req);
 8007406:	6839      	ldr	r1, [r7, #0]
 8007408:	6878      	ldr	r0, [r7, #4]
 800740a:	f000 fb1d 	bl	8007a48 <USBD_CtlError>
          break;
 800740e:	bf00      	nop
      }
      break;
 8007410:	e004      	b.n	800741c <USBD_StdEPReq+0x2bc>

    default:
      USBD_CtlError(pdev, req);
 8007412:	6839      	ldr	r1, [r7, #0]
 8007414:	6878      	ldr	r0, [r7, #4]
 8007416:	f000 fb17 	bl	8007a48 <USBD_CtlError>
      break;
 800741a:	bf00      	nop
  }

  return ret;
 800741c:	7bfb      	ldrb	r3, [r7, #15]
}
 800741e:	4618      	mov	r0, r3
 8007420:	3710      	adds	r7, #16
 8007422:	46bd      	mov	sp, r7
 8007424:	bd80      	pop	{r7, pc}
	...

08007428 <USBD_GetDescriptor>:
* @param  req: usb request
* @retval status
*/
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev,
                               USBD_SetupReqTypedef *req)
{
 8007428:	b580      	push	{r7, lr}
 800742a:	b084      	sub	sp, #16
 800742c:	af00      	add	r7, sp, #0
 800742e:	6078      	str	r0, [r7, #4]
 8007430:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 8007432:	2300      	movs	r3, #0
 8007434:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 8007436:	2300      	movs	r3, #0
 8007438:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 800743a:	2300      	movs	r3, #0
 800743c:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 800743e:	683b      	ldr	r3, [r7, #0]
 8007440:	885b      	ldrh	r3, [r3, #2]
 8007442:	0a1b      	lsrs	r3, r3, #8
 8007444:	b29b      	uxth	r3, r3
 8007446:	3b01      	subs	r3, #1
 8007448:	2b06      	cmp	r3, #6
 800744a:	f200 8128 	bhi.w	800769e <USBD_GetDescriptor+0x276>
 800744e:	a201      	add	r2, pc, #4	@ (adr r2, 8007454 <USBD_GetDescriptor+0x2c>)
 8007450:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007454:	08007471 	.word	0x08007471
 8007458:	08007489 	.word	0x08007489
 800745c:	080074c9 	.word	0x080074c9
 8007460:	0800769f 	.word	0x0800769f
 8007464:	0800769f 	.word	0x0800769f
 8007468:	0800763f 	.word	0x0800763f
 800746c:	0800766b 	.word	0x0800766b
        err++;
      }
      break;
#endif
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	687a      	ldr	r2, [r7, #4]
 800747a:	7c12      	ldrb	r2, [r2, #16]
 800747c:	f107 0108 	add.w	r1, r7, #8
 8007480:	4610      	mov	r0, r2
 8007482:	4798      	blx	r3
 8007484:	60f8      	str	r0, [r7, #12]
      break;
 8007486:	e112      	b.n	80076ae <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	7c1b      	ldrb	r3, [r3, #16]
 800748c:	2b00      	cmp	r3, #0
 800748e:	d10d      	bne.n	80074ac <USBD_GetDescriptor+0x84>
      {
        pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8007496:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007498:	f107 0208 	add.w	r2, r7, #8
 800749c:	4610      	mov	r0, r2
 800749e:	4798      	blx	r3
 80074a0:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	3301      	adds	r3, #1
 80074a6:	2202      	movs	r2, #2
 80074a8:	701a      	strb	r2, [r3, #0]
      else
      {
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 80074aa:	e100      	b.n	80076ae <USBD_GetDescriptor+0x286>
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80074b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074b4:	f107 0208 	add.w	r2, r7, #8
 80074b8:	4610      	mov	r0, r2
 80074ba:	4798      	blx	r3
 80074bc:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	3301      	adds	r3, #1
 80074c2:	2202      	movs	r2, #2
 80074c4:	701a      	strb	r2, [r3, #0]
      break;
 80074c6:	e0f2      	b.n	80076ae <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 80074c8:	683b      	ldr	r3, [r7, #0]
 80074ca:	885b      	ldrh	r3, [r3, #2]
 80074cc:	b2db      	uxtb	r3, r3
 80074ce:	2b05      	cmp	r3, #5
 80074d0:	f200 80ac 	bhi.w	800762c <USBD_GetDescriptor+0x204>
 80074d4:	a201      	add	r2, pc, #4	@ (adr r2, 80074dc <USBD_GetDescriptor+0xb4>)
 80074d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80074da:	bf00      	nop
 80074dc:	080074f5 	.word	0x080074f5
 80074e0:	08007529 	.word	0x08007529
 80074e4:	0800755d 	.word	0x0800755d
 80074e8:	08007591 	.word	0x08007591
 80074ec:	080075c5 	.word	0x080075c5
 80074f0:	080075f9 	.word	0x080075f9
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 80074fa:	685b      	ldr	r3, [r3, #4]
 80074fc:	2b00      	cmp	r3, #0
 80074fe:	d00b      	beq.n	8007518 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 8007506:	685b      	ldr	r3, [r3, #4]
 8007508:	687a      	ldr	r2, [r7, #4]
 800750a:	7c12      	ldrb	r2, [r2, #16]
 800750c:	f107 0108 	add.w	r1, r7, #8
 8007510:	4610      	mov	r0, r2
 8007512:	4798      	blx	r3
 8007514:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8007516:	e091      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8007518:	6839      	ldr	r1, [r7, #0]
 800751a:	6878      	ldr	r0, [r7, #4]
 800751c:	f000 fa94 	bl	8007a48 <USBD_CtlError>
            err++;
 8007520:	7afb      	ldrb	r3, [r7, #11]
 8007522:	3301      	adds	r3, #1
 8007524:	72fb      	strb	r3, [r7, #11]
          break;
 8007526:	e089      	b.n	800763c <USBD_GetDescriptor+0x214>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800752e:	689b      	ldr	r3, [r3, #8]
 8007530:	2b00      	cmp	r3, #0
 8007532:	d00b      	beq.n	800754c <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800753a:	689b      	ldr	r3, [r3, #8]
 800753c:	687a      	ldr	r2, [r7, #4]
 800753e:	7c12      	ldrb	r2, [r2, #16]
 8007540:	f107 0108 	add.w	r1, r7, #8
 8007544:	4610      	mov	r0, r2
 8007546:	4798      	blx	r3
 8007548:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800754a:	e077      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800754c:	6839      	ldr	r1, [r7, #0]
 800754e:	6878      	ldr	r0, [r7, #4]
 8007550:	f000 fa7a 	bl	8007a48 <USBD_CtlError>
            err++;
 8007554:	7afb      	ldrb	r3, [r7, #11]
 8007556:	3301      	adds	r3, #1
 8007558:	72fb      	strb	r3, [r7, #11]
          break;
 800755a:	e06f      	b.n	800763c <USBD_GetDescriptor+0x214>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 8007562:	68db      	ldr	r3, [r3, #12]
 8007564:	2b00      	cmp	r3, #0
 8007566:	d00b      	beq.n	8007580 <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 8007568:	687b      	ldr	r3, [r7, #4]
 800756a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800756e:	68db      	ldr	r3, [r3, #12]
 8007570:	687a      	ldr	r2, [r7, #4]
 8007572:	7c12      	ldrb	r2, [r2, #16]
 8007574:	f107 0108 	add.w	r1, r7, #8
 8007578:	4610      	mov	r0, r2
 800757a:	4798      	blx	r3
 800757c:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800757e:	e05d      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8007580:	6839      	ldr	r1, [r7, #0]
 8007582:	6878      	ldr	r0, [r7, #4]
 8007584:	f000 fa60 	bl	8007a48 <USBD_CtlError>
            err++;
 8007588:	7afb      	ldrb	r3, [r7, #11]
 800758a:	3301      	adds	r3, #1
 800758c:	72fb      	strb	r3, [r7, #11]
          break;
 800758e:	e055      	b.n	800763c <USBD_GetDescriptor+0x214>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 8007596:	691b      	ldr	r3, [r3, #16]
 8007598:	2b00      	cmp	r3, #0
 800759a:	d00b      	beq.n	80075b4 <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 80075a2:	691b      	ldr	r3, [r3, #16]
 80075a4:	687a      	ldr	r2, [r7, #4]
 80075a6:	7c12      	ldrb	r2, [r2, #16]
 80075a8:	f107 0108 	add.w	r1, r7, #8
 80075ac:	4610      	mov	r0, r2
 80075ae:	4798      	blx	r3
 80075b0:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 80075b2:	e043      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 80075b4:	6839      	ldr	r1, [r7, #0]
 80075b6:	6878      	ldr	r0, [r7, #4]
 80075b8:	f000 fa46 	bl	8007a48 <USBD_CtlError>
            err++;
 80075bc:	7afb      	ldrb	r3, [r7, #11]
 80075be:	3301      	adds	r3, #1
 80075c0:	72fb      	strb	r3, [r7, #11]
          break;
 80075c2:	e03b      	b.n	800763c <USBD_GetDescriptor+0x214>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 80075ca:	695b      	ldr	r3, [r3, #20]
 80075cc:	2b00      	cmp	r3, #0
 80075ce:	d00b      	beq.n	80075e8 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 80075d6:	695b      	ldr	r3, [r3, #20]
 80075d8:	687a      	ldr	r2, [r7, #4]
 80075da:	7c12      	ldrb	r2, [r2, #16]
 80075dc:	f107 0108 	add.w	r1, r7, #8
 80075e0:	4610      	mov	r0, r2
 80075e2:	4798      	blx	r3
 80075e4:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 80075e6:	e029      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 80075e8:	6839      	ldr	r1, [r7, #0]
 80075ea:	6878      	ldr	r0, [r7, #4]
 80075ec:	f000 fa2c 	bl	8007a48 <USBD_CtlError>
            err++;
 80075f0:	7afb      	ldrb	r3, [r7, #11]
 80075f2:	3301      	adds	r3, #1
 80075f4:	72fb      	strb	r3, [r7, #11]
          break;
 80075f6:	e021      	b.n	800763c <USBD_GetDescriptor+0x214>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80075f8:	687b      	ldr	r3, [r7, #4]
 80075fa:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 80075fe:	699b      	ldr	r3, [r3, #24]
 8007600:	2b00      	cmp	r3, #0
 8007602:	d00b      	beq.n	800761c <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 8007604:	687b      	ldr	r3, [r7, #4]
 8007606:	f8d3 32b0 	ldr.w	r3, [r3, #688]	@ 0x2b0
 800760a:	699b      	ldr	r3, [r3, #24]
 800760c:	687a      	ldr	r2, [r7, #4]
 800760e:	7c12      	ldrb	r2, [r2, #16]
 8007610:	f107 0108 	add.w	r1, r7, #8
 8007614:	4610      	mov	r0, r2
 8007616:	4798      	blx	r3
 8007618:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800761a:	e00f      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800761c:	6839      	ldr	r1, [r7, #0]
 800761e:	6878      	ldr	r0, [r7, #4]
 8007620:	f000 fa12 	bl	8007a48 <USBD_CtlError>
            err++;
 8007624:	7afb      	ldrb	r3, [r7, #11]
 8007626:	3301      	adds	r3, #1
 8007628:	72fb      	strb	r3, [r7, #11]
          break;
 800762a:	e007      	b.n	800763c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
#else
          USBD_CtlError(pdev, req);
 800762c:	6839      	ldr	r1, [r7, #0]
 800762e:	6878      	ldr	r0, [r7, #4]
 8007630:	f000 fa0a 	bl	8007a48 <USBD_CtlError>
          err++;
 8007634:	7afb      	ldrb	r3, [r7, #11]
 8007636:	3301      	adds	r3, #1
 8007638:	72fb      	strb	r3, [r7, #11]
#endif
      }
      break;
 800763a:	e038      	b.n	80076ae <USBD_GetDescriptor+0x286>
 800763c:	e037      	b.n	80076ae <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	7c1b      	ldrb	r3, [r3, #16]
 8007642:	2b00      	cmp	r3, #0
 8007644:	d109      	bne.n	800765a <USBD_GetDescriptor+0x232>
      {
        pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800764c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800764e:	f107 0208 	add.w	r2, r7, #8
 8007652:	4610      	mov	r0, r2
 8007654:	4798      	blx	r3
 8007656:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 8007658:	e029      	b.n	80076ae <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800765a:	6839      	ldr	r1, [r7, #0]
 800765c:	6878      	ldr	r0, [r7, #4]
 800765e:	f000 f9f3 	bl	8007a48 <USBD_CtlError>
        err++;
 8007662:	7afb      	ldrb	r3, [r7, #11]
 8007664:	3301      	adds	r3, #1
 8007666:	72fb      	strb	r3, [r7, #11]
      break;
 8007668:	e021      	b.n	80076ae <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	7c1b      	ldrb	r3, [r3, #16]
 800766e:	2b00      	cmp	r3, #0
 8007670:	d10d      	bne.n	800768e <USBD_GetDescriptor+0x266>
      {
        pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8007678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800767a:	f107 0208 	add.w	r2, r7, #8
 800767e:	4610      	mov	r0, r2
 8007680:	4798      	blx	r3
 8007682:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8007684:	68fb      	ldr	r3, [r7, #12]
 8007686:	3301      	adds	r3, #1
 8007688:	2207      	movs	r2, #7
 800768a:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800768c:	e00f      	b.n	80076ae <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800768e:	6839      	ldr	r1, [r7, #0]
 8007690:	6878      	ldr	r0, [r7, #4]
 8007692:	f000 f9d9 	bl	8007a48 <USBD_CtlError>
        err++;
 8007696:	7afb      	ldrb	r3, [r7, #11]
 8007698:	3301      	adds	r3, #1
 800769a:	72fb      	strb	r3, [r7, #11]
      break;
 800769c:	e007      	b.n	80076ae <USBD_GetDescriptor+0x286>

    default:
      USBD_CtlError(pdev, req);
 800769e:	6839      	ldr	r1, [r7, #0]
 80076a0:	6878      	ldr	r0, [r7, #4]
 80076a2:	f000 f9d1 	bl	8007a48 <USBD_CtlError>
      err++;
 80076a6:	7afb      	ldrb	r3, [r7, #11]
 80076a8:	3301      	adds	r3, #1
 80076aa:	72fb      	strb	r3, [r7, #11]
      break;
 80076ac:	bf00      	nop
  }

  if (err != 0U)
 80076ae:	7afb      	ldrb	r3, [r7, #11]
 80076b0:	2b00      	cmp	r3, #0
 80076b2:	d11c      	bne.n	80076ee <USBD_GetDescriptor+0x2c6>
  {
    return;
  }
  else
  {
    if ((len != 0U) && (req->wLength != 0U))
 80076b4:	893b      	ldrh	r3, [r7, #8]
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	d011      	beq.n	80076de <USBD_GetDescriptor+0x2b6>
 80076ba:	683b      	ldr	r3, [r7, #0]
 80076bc:	88db      	ldrh	r3, [r3, #6]
 80076be:	2b00      	cmp	r3, #0
 80076c0:	d00d      	beq.n	80076de <USBD_GetDescriptor+0x2b6>
    {
      len = MIN(len, req->wLength);
 80076c2:	683b      	ldr	r3, [r7, #0]
 80076c4:	88da      	ldrh	r2, [r3, #6]
 80076c6:	893b      	ldrh	r3, [r7, #8]
 80076c8:	4293      	cmp	r3, r2
 80076ca:	bf28      	it	cs
 80076cc:	4613      	movcs	r3, r2
 80076ce:	b29b      	uxth	r3, r3
 80076d0:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 80076d2:	893b      	ldrh	r3, [r7, #8]
 80076d4:	461a      	mov	r2, r3
 80076d6:	68f9      	ldr	r1, [r7, #12]
 80076d8:	6878      	ldr	r0, [r7, #4]
 80076da:	f000 fa1f 	bl	8007b1c <USBD_CtlSendData>
    }

    if (req->wLength == 0U)
 80076de:	683b      	ldr	r3, [r7, #0]
 80076e0:	88db      	ldrh	r3, [r3, #6]
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d104      	bne.n	80076f0 <USBD_GetDescriptor+0x2c8>
    {
      (void)USBD_CtlSendStatus(pdev);
 80076e6:	6878      	ldr	r0, [r7, #4]
 80076e8:	f000 fa58 	bl	8007b9c <USBD_CtlSendStatus>
 80076ec:	e000      	b.n	80076f0 <USBD_GetDescriptor+0x2c8>
    return;
 80076ee:	bf00      	nop
    }
  }
}
 80076f0:	3710      	adds	r7, #16
 80076f2:	46bd      	mov	sp, r7
 80076f4:	bd80      	pop	{r7, pc}
 80076f6:	bf00      	nop

080076f8 <USBD_SetAddress>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetAddress(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 80076f8:	b580      	push	{r7, lr}
 80076fa:	b084      	sub	sp, #16
 80076fc:	af00      	add	r7, sp, #0
 80076fe:	6078      	str	r0, [r7, #4]
 8007700:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8007702:	683b      	ldr	r3, [r7, #0]
 8007704:	889b      	ldrh	r3, [r3, #4]
 8007706:	2b00      	cmp	r3, #0
 8007708:	d130      	bne.n	800776c <USBD_SetAddress+0x74>
 800770a:	683b      	ldr	r3, [r7, #0]
 800770c:	88db      	ldrh	r3, [r3, #6]
 800770e:	2b00      	cmp	r3, #0
 8007710:	d12c      	bne.n	800776c <USBD_SetAddress+0x74>
 8007712:	683b      	ldr	r3, [r7, #0]
 8007714:	885b      	ldrh	r3, [r3, #2]
 8007716:	2b7f      	cmp	r3, #127	@ 0x7f
 8007718:	d828      	bhi.n	800776c <USBD_SetAddress+0x74>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 800771a:	683b      	ldr	r3, [r7, #0]
 800771c:	885b      	ldrh	r3, [r3, #2]
 800771e:	b2db      	uxtb	r3, r3
 8007720:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007724:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800772c:	2b03      	cmp	r3, #3
 800772e:	d104      	bne.n	800773a <USBD_SetAddress+0x42>
    {
      USBD_CtlError(pdev, req);
 8007730:	6839      	ldr	r1, [r7, #0]
 8007732:	6878      	ldr	r0, [r7, #4]
 8007734:	f000 f988 	bl	8007a48 <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8007738:	e01d      	b.n	8007776 <USBD_SetAddress+0x7e>
    }
    else
    {
      pdev->dev_address = dev_addr;
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	7bfa      	ldrb	r2, [r7, #15]
 800773e:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
      USBD_LL_SetUSBAddress(pdev, dev_addr);
 8007742:	7bfb      	ldrb	r3, [r7, #15]
 8007744:	4619      	mov	r1, r3
 8007746:	6878      	ldr	r0, [r7, #4]
 8007748:	f000 fd55 	bl	80081f6 <USBD_LL_SetUSBAddress>
      USBD_CtlSendStatus(pdev);
 800774c:	6878      	ldr	r0, [r7, #4]
 800774e:	f000 fa25 	bl	8007b9c <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 8007752:	7bfb      	ldrb	r3, [r7, #15]
 8007754:	2b00      	cmp	r3, #0
 8007756:	d004      	beq.n	8007762 <USBD_SetAddress+0x6a>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	2202      	movs	r2, #2
 800775c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8007760:	e009      	b.n	8007776 <USBD_SetAddress+0x7e>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	2201      	movs	r2, #1
 8007766:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800776a:	e004      	b.n	8007776 <USBD_SetAddress+0x7e>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 800776c:	6839      	ldr	r1, [r7, #0]
 800776e:	6878      	ldr	r0, [r7, #4]
 8007770:	f000 f96a 	bl	8007a48 <USBD_CtlError>
  }
}
 8007774:	bf00      	nop
 8007776:	bf00      	nop
 8007778:	3710      	adds	r7, #16
 800777a:	46bd      	mov	sp, r7
 800777c:	bd80      	pop	{r7, pc}
	...

08007780 <USBD_SetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8007780:	b580      	push	{r7, lr}
 8007782:	b082      	sub	sp, #8
 8007784:	af00      	add	r7, sp, #0
 8007786:	6078      	str	r0, [r7, #4]
 8007788:	6039      	str	r1, [r7, #0]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 800778a:	683b      	ldr	r3, [r7, #0]
 800778c:	885b      	ldrh	r3, [r3, #2]
 800778e:	b2da      	uxtb	r2, r3
 8007790:	4b41      	ldr	r3, [pc, #260]	@ (8007898 <USBD_SetConfig+0x118>)
 8007792:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8007794:	4b40      	ldr	r3, [pc, #256]	@ (8007898 <USBD_SetConfig+0x118>)
 8007796:	781b      	ldrb	r3, [r3, #0]
 8007798:	2b01      	cmp	r3, #1
 800779a:	d904      	bls.n	80077a6 <USBD_SetConfig+0x26>
  {
    USBD_CtlError(pdev, req);
 800779c:	6839      	ldr	r1, [r7, #0]
 800779e:	6878      	ldr	r0, [r7, #4]
 80077a0:	f000 f952 	bl	8007a48 <USBD_CtlError>
 80077a4:	e075      	b.n	8007892 <USBD_SetConfig+0x112>
  }
  else
  {
    switch (pdev->dev_state)
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80077ac:	2b02      	cmp	r3, #2
 80077ae:	d002      	beq.n	80077b6 <USBD_SetConfig+0x36>
 80077b0:	2b03      	cmp	r3, #3
 80077b2:	d023      	beq.n	80077fc <USBD_SetConfig+0x7c>
 80077b4:	e062      	b.n	800787c <USBD_SetConfig+0xfc>
    {
      case USBD_STATE_ADDRESSED:
        if (cfgidx)
 80077b6:	4b38      	ldr	r3, [pc, #224]	@ (8007898 <USBD_SetConfig+0x118>)
 80077b8:	781b      	ldrb	r3, [r3, #0]
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d01a      	beq.n	80077f4 <USBD_SetConfig+0x74>
        {
          pdev->dev_config = cfgidx;
 80077be:	4b36      	ldr	r3, [pc, #216]	@ (8007898 <USBD_SetConfig+0x118>)
 80077c0:	781b      	ldrb	r3, [r3, #0]
 80077c2:	461a      	mov	r2, r3
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	605a      	str	r2, [r3, #4]
          pdev->dev_state = USBD_STATE_CONFIGURED;
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	2203      	movs	r2, #3
 80077cc:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 80077d0:	4b31      	ldr	r3, [pc, #196]	@ (8007898 <USBD_SetConfig+0x118>)
 80077d2:	781b      	ldrb	r3, [r3, #0]
 80077d4:	4619      	mov	r1, r3
 80077d6:	6878      	ldr	r0, [r7, #4]
 80077d8:	f7ff f9e8 	bl	8006bac <USBD_SetClassConfig>
 80077dc:	4603      	mov	r3, r0
 80077de:	2b02      	cmp	r3, #2
 80077e0:	d104      	bne.n	80077ec <USBD_SetConfig+0x6c>
          {
            USBD_CtlError(pdev, req);
 80077e2:	6839      	ldr	r1, [r7, #0]
 80077e4:	6878      	ldr	r0, [r7, #4]
 80077e6:	f000 f92f 	bl	8007a48 <USBD_CtlError>
            return;
 80077ea:	e052      	b.n	8007892 <USBD_SetConfig+0x112>
          }
          USBD_CtlSendStatus(pdev);
 80077ec:	6878      	ldr	r0, [r7, #4]
 80077ee:	f000 f9d5 	bl	8007b9c <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 80077f2:	e04e      	b.n	8007892 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 80077f4:	6878      	ldr	r0, [r7, #4]
 80077f6:	f000 f9d1 	bl	8007b9c <USBD_CtlSendStatus>
        break;
 80077fa:	e04a      	b.n	8007892 <USBD_SetConfig+0x112>

      case USBD_STATE_CONFIGURED:
        if (cfgidx == 0U)
 80077fc:	4b26      	ldr	r3, [pc, #152]	@ (8007898 <USBD_SetConfig+0x118>)
 80077fe:	781b      	ldrb	r3, [r3, #0]
 8007800:	2b00      	cmp	r3, #0
 8007802:	d112      	bne.n	800782a <USBD_SetConfig+0xaa>
        {
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	2202      	movs	r2, #2
 8007808:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
          pdev->dev_config = cfgidx;
 800780c:	4b22      	ldr	r3, [pc, #136]	@ (8007898 <USBD_SetConfig+0x118>)
 800780e:	781b      	ldrb	r3, [r3, #0]
 8007810:	461a      	mov	r2, r3
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	605a      	str	r2, [r3, #4]
          USBD_ClrClassConfig(pdev, cfgidx);
 8007816:	4b20      	ldr	r3, [pc, #128]	@ (8007898 <USBD_SetConfig+0x118>)
 8007818:	781b      	ldrb	r3, [r3, #0]
 800781a:	4619      	mov	r1, r3
 800781c:	6878      	ldr	r0, [r7, #4]
 800781e:	f7ff f9e4 	bl	8006bea <USBD_ClrClassConfig>
          USBD_CtlSendStatus(pdev);
 8007822:	6878      	ldr	r0, [r7, #4]
 8007824:	f000 f9ba 	bl	8007b9c <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 8007828:	e033      	b.n	8007892 <USBD_SetConfig+0x112>
        else if (cfgidx != pdev->dev_config)
 800782a:	4b1b      	ldr	r3, [pc, #108]	@ (8007898 <USBD_SetConfig+0x118>)
 800782c:	781b      	ldrb	r3, [r3, #0]
 800782e:	461a      	mov	r2, r3
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	685b      	ldr	r3, [r3, #4]
 8007834:	429a      	cmp	r2, r3
 8007836:	d01d      	beq.n	8007874 <USBD_SetConfig+0xf4>
          USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8007838:	687b      	ldr	r3, [r7, #4]
 800783a:	685b      	ldr	r3, [r3, #4]
 800783c:	b2db      	uxtb	r3, r3
 800783e:	4619      	mov	r1, r3
 8007840:	6878      	ldr	r0, [r7, #4]
 8007842:	f7ff f9d2 	bl	8006bea <USBD_ClrClassConfig>
          pdev->dev_config = cfgidx;
 8007846:	4b14      	ldr	r3, [pc, #80]	@ (8007898 <USBD_SetConfig+0x118>)
 8007848:	781b      	ldrb	r3, [r3, #0]
 800784a:	461a      	mov	r2, r3
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	605a      	str	r2, [r3, #4]
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 8007850:	4b11      	ldr	r3, [pc, #68]	@ (8007898 <USBD_SetConfig+0x118>)
 8007852:	781b      	ldrb	r3, [r3, #0]
 8007854:	4619      	mov	r1, r3
 8007856:	6878      	ldr	r0, [r7, #4]
 8007858:	f7ff f9a8 	bl	8006bac <USBD_SetClassConfig>
 800785c:	4603      	mov	r3, r0
 800785e:	2b02      	cmp	r3, #2
 8007860:	d104      	bne.n	800786c <USBD_SetConfig+0xec>
            USBD_CtlError(pdev, req);
 8007862:	6839      	ldr	r1, [r7, #0]
 8007864:	6878      	ldr	r0, [r7, #4]
 8007866:	f000 f8ef 	bl	8007a48 <USBD_CtlError>
            return;
 800786a:	e012      	b.n	8007892 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 800786c:	6878      	ldr	r0, [r7, #4]
 800786e:	f000 f995 	bl	8007b9c <USBD_CtlSendStatus>
        break;
 8007872:	e00e      	b.n	8007892 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 8007874:	6878      	ldr	r0, [r7, #4]
 8007876:	f000 f991 	bl	8007b9c <USBD_CtlSendStatus>
        break;
 800787a:	e00a      	b.n	8007892 <USBD_SetConfig+0x112>

      default:
        USBD_CtlError(pdev, req);
 800787c:	6839      	ldr	r1, [r7, #0]
 800787e:	6878      	ldr	r0, [r7, #4]
 8007880:	f000 f8e2 	bl	8007a48 <USBD_CtlError>
        USBD_ClrClassConfig(pdev, cfgidx);
 8007884:	4b04      	ldr	r3, [pc, #16]	@ (8007898 <USBD_SetConfig+0x118>)
 8007886:	781b      	ldrb	r3, [r3, #0]
 8007888:	4619      	mov	r1, r3
 800788a:	6878      	ldr	r0, [r7, #4]
 800788c:	f7ff f9ad 	bl	8006bea <USBD_ClrClassConfig>
        break;
 8007890:	bf00      	nop
    }
  }
}
 8007892:	3708      	adds	r7, #8
 8007894:	46bd      	mov	sp, r7
 8007896:	bd80      	pop	{r7, pc}
 8007898:	200001d4 	.word	0x200001d4

0800789c <USBD_GetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 800789c:	b580      	push	{r7, lr}
 800789e:	b082      	sub	sp, #8
 80078a0:	af00      	add	r7, sp, #0
 80078a2:	6078      	str	r0, [r7, #4]
 80078a4:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 80078a6:	683b      	ldr	r3, [r7, #0]
 80078a8:	88db      	ldrh	r3, [r3, #6]
 80078aa:	2b01      	cmp	r3, #1
 80078ac:	d004      	beq.n	80078b8 <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 80078ae:	6839      	ldr	r1, [r7, #0]
 80078b0:	6878      	ldr	r0, [r7, #4]
 80078b2:	f000 f8c9 	bl	8007a48 <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 80078b6:	e022      	b.n	80078fe <USBD_GetConfig+0x62>
    switch (pdev->dev_state)
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80078be:	2b02      	cmp	r3, #2
 80078c0:	dc02      	bgt.n	80078c8 <USBD_GetConfig+0x2c>
 80078c2:	2b00      	cmp	r3, #0
 80078c4:	dc03      	bgt.n	80078ce <USBD_GetConfig+0x32>
 80078c6:	e015      	b.n	80078f4 <USBD_GetConfig+0x58>
 80078c8:	2b03      	cmp	r3, #3
 80078ca:	d00b      	beq.n	80078e4 <USBD_GetConfig+0x48>
 80078cc:	e012      	b.n	80078f4 <USBD_GetConfig+0x58>
        pdev->dev_default_config = 0U;
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	2200      	movs	r2, #0
 80078d2:	609a      	str	r2, [r3, #8]
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_default_config, 1U);
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	3308      	adds	r3, #8
 80078d8:	2201      	movs	r2, #1
 80078da:	4619      	mov	r1, r3
 80078dc:	6878      	ldr	r0, [r7, #4]
 80078de:	f000 f91d 	bl	8007b1c <USBD_CtlSendData>
        break;
 80078e2:	e00c      	b.n	80078fe <USBD_GetConfig+0x62>
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config, 1U);
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	3304      	adds	r3, #4
 80078e8:	2201      	movs	r2, #1
 80078ea:	4619      	mov	r1, r3
 80078ec:	6878      	ldr	r0, [r7, #4]
 80078ee:	f000 f915 	bl	8007b1c <USBD_CtlSendData>
        break;
 80078f2:	e004      	b.n	80078fe <USBD_GetConfig+0x62>
        USBD_CtlError(pdev, req);
 80078f4:	6839      	ldr	r1, [r7, #0]
 80078f6:	6878      	ldr	r0, [r7, #4]
 80078f8:	f000 f8a6 	bl	8007a48 <USBD_CtlError>
        break;
 80078fc:	bf00      	nop
}
 80078fe:	bf00      	nop
 8007900:	3708      	adds	r7, #8
 8007902:	46bd      	mov	sp, r7
 8007904:	bd80      	pop	{r7, pc}

08007906 <USBD_GetStatus>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8007906:	b580      	push	{r7, lr}
 8007908:	b082      	sub	sp, #8
 800790a:	af00      	add	r7, sp, #0
 800790c:	6078      	str	r0, [r7, #4]
 800790e:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8007916:	3b01      	subs	r3, #1
 8007918:	2b02      	cmp	r3, #2
 800791a:	d81e      	bhi.n	800795a <USBD_GetStatus+0x54>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 800791c:	683b      	ldr	r3, [r7, #0]
 800791e:	88db      	ldrh	r3, [r3, #6]
 8007920:	2b02      	cmp	r3, #2
 8007922:	d004      	beq.n	800792e <USBD_GetStatus+0x28>
      {
        USBD_CtlError(pdev, req);
 8007924:	6839      	ldr	r1, [r7, #0]
 8007926:	6878      	ldr	r0, [r7, #4]
 8007928:	f000 f88e 	bl	8007a48 <USBD_CtlError>
        break;
 800792c:	e01a      	b.n	8007964 <USBD_GetStatus+0x5e>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	2201      	movs	r2, #1
 8007932:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif

      if (pdev->dev_remote_wakeup)
 8007934:	687b      	ldr	r3, [r7, #4]
 8007936:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 800793a:	2b00      	cmp	r3, #0
 800793c:	d005      	beq.n	800794a <USBD_GetStatus+0x44>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	68db      	ldr	r3, [r3, #12]
 8007942:	f043 0202 	orr.w	r2, r3, #2
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	60da      	str	r2, [r3, #12]
      }

      USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config_status, 2U);
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	330c      	adds	r3, #12
 800794e:	2202      	movs	r2, #2
 8007950:	4619      	mov	r1, r3
 8007952:	6878      	ldr	r0, [r7, #4]
 8007954:	f000 f8e2 	bl	8007b1c <USBD_CtlSendData>
      break;
 8007958:	e004      	b.n	8007964 <USBD_GetStatus+0x5e>

    default:
      USBD_CtlError(pdev, req);
 800795a:	6839      	ldr	r1, [r7, #0]
 800795c:	6878      	ldr	r0, [r7, #4]
 800795e:	f000 f873 	bl	8007a48 <USBD_CtlError>
      break;
 8007962:	bf00      	nop
  }
}
 8007964:	bf00      	nop
 8007966:	3708      	adds	r7, #8
 8007968:	46bd      	mov	sp, r7
 800796a:	bd80      	pop	{r7, pc}

0800796c <USBD_SetFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 800796c:	b580      	push	{r7, lr}
 800796e:	b082      	sub	sp, #8
 8007970:	af00      	add	r7, sp, #0
 8007972:	6078      	str	r0, [r7, #4]
 8007974:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8007976:	683b      	ldr	r3, [r7, #0]
 8007978:	885b      	ldrh	r3, [r3, #2]
 800797a:	2b01      	cmp	r3, #1
 800797c:	d106      	bne.n	800798c <USBD_SetFeature+0x20>
  {
    pdev->dev_remote_wakeup = 1U;
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	2201      	movs	r2, #1
 8007982:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
    USBD_CtlSendStatus(pdev);
 8007986:	6878      	ldr	r0, [r7, #4]
 8007988:	f000 f908 	bl	8007b9c <USBD_CtlSendStatus>
  }
}
 800798c:	bf00      	nop
 800798e:	3708      	adds	r7, #8
 8007990:	46bd      	mov	sp, r7
 8007992:	bd80      	pop	{r7, pc}

08007994 <USBD_ClrFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 8007994:	b580      	push	{r7, lr}
 8007996:	b082      	sub	sp, #8
 8007998:	af00      	add	r7, sp, #0
 800799a:	6078      	str	r0, [r7, #4]
 800799c:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80079a4:	3b01      	subs	r3, #1
 80079a6:	2b02      	cmp	r3, #2
 80079a8:	d80b      	bhi.n	80079c2 <USBD_ClrFeature+0x2e>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 80079aa:	683b      	ldr	r3, [r7, #0]
 80079ac:	885b      	ldrh	r3, [r3, #2]
 80079ae:	2b01      	cmp	r3, #1
 80079b0:	d10c      	bne.n	80079cc <USBD_ClrFeature+0x38>
      {
        pdev->dev_remote_wakeup = 0U;
 80079b2:	687b      	ldr	r3, [r7, #4]
 80079b4:	2200      	movs	r2, #0
 80079b6:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
        USBD_CtlSendStatus(pdev);
 80079ba:	6878      	ldr	r0, [r7, #4]
 80079bc:	f000 f8ee 	bl	8007b9c <USBD_CtlSendStatus>
      }
      break;
 80079c0:	e004      	b.n	80079cc <USBD_ClrFeature+0x38>

    default:
      USBD_CtlError(pdev, req);
 80079c2:	6839      	ldr	r1, [r7, #0]
 80079c4:	6878      	ldr	r0, [r7, #4]
 80079c6:	f000 f83f 	bl	8007a48 <USBD_CtlError>
      break;
 80079ca:	e000      	b.n	80079ce <USBD_ClrFeature+0x3a>
      break;
 80079cc:	bf00      	nop
  }
}
 80079ce:	bf00      	nop
 80079d0:	3708      	adds	r7, #8
 80079d2:	46bd      	mov	sp, r7
 80079d4:	bd80      	pop	{r7, pc}

080079d6 <USBD_ParseSetupRequest>:
* @param  req: usb request
* @retval None
*/

void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 80079d6:	b480      	push	{r7}
 80079d8:	b083      	sub	sp, #12
 80079da:	af00      	add	r7, sp, #0
 80079dc:	6078      	str	r0, [r7, #4]
 80079de:	6039      	str	r1, [r7, #0]
  req->bmRequest = *(uint8_t *)(pdata);
 80079e0:	683b      	ldr	r3, [r7, #0]
 80079e2:	781a      	ldrb	r2, [r3, #0]
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	701a      	strb	r2, [r3, #0]
  req->bRequest = *(uint8_t *)(pdata + 1U);
 80079e8:	683b      	ldr	r3, [r7, #0]
 80079ea:	785a      	ldrb	r2, [r3, #1]
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	705a      	strb	r2, [r3, #1]
  req->wValue = SWAPBYTE(pdata + 2U);
 80079f0:	683b      	ldr	r3, [r7, #0]
 80079f2:	3302      	adds	r3, #2
 80079f4:	781b      	ldrb	r3, [r3, #0]
 80079f6:	461a      	mov	r2, r3
 80079f8:	683b      	ldr	r3, [r7, #0]
 80079fa:	3303      	adds	r3, #3
 80079fc:	781b      	ldrb	r3, [r3, #0]
 80079fe:	021b      	lsls	r3, r3, #8
 8007a00:	b29b      	uxth	r3, r3
 8007a02:	4413      	add	r3, r2
 8007a04:	b29a      	uxth	r2, r3
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	805a      	strh	r2, [r3, #2]
  req->wIndex = SWAPBYTE(pdata + 4U);
 8007a0a:	683b      	ldr	r3, [r7, #0]
 8007a0c:	3304      	adds	r3, #4
 8007a0e:	781b      	ldrb	r3, [r3, #0]
 8007a10:	461a      	mov	r2, r3
 8007a12:	683b      	ldr	r3, [r7, #0]
 8007a14:	3305      	adds	r3, #5
 8007a16:	781b      	ldrb	r3, [r3, #0]
 8007a18:	021b      	lsls	r3, r3, #8
 8007a1a:	b29b      	uxth	r3, r3
 8007a1c:	4413      	add	r3, r2
 8007a1e:	b29a      	uxth	r2, r3
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	809a      	strh	r2, [r3, #4]
  req->wLength = SWAPBYTE(pdata + 6U);
 8007a24:	683b      	ldr	r3, [r7, #0]
 8007a26:	3306      	adds	r3, #6
 8007a28:	781b      	ldrb	r3, [r3, #0]
 8007a2a:	461a      	mov	r2, r3
 8007a2c:	683b      	ldr	r3, [r7, #0]
 8007a2e:	3307      	adds	r3, #7
 8007a30:	781b      	ldrb	r3, [r3, #0]
 8007a32:	021b      	lsls	r3, r3, #8
 8007a34:	b29b      	uxth	r3, r3
 8007a36:	4413      	add	r3, r2
 8007a38:	b29a      	uxth	r2, r3
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	80da      	strh	r2, [r3, #6]

}
 8007a3e:	bf00      	nop
 8007a40:	370c      	adds	r7, #12
 8007a42:	46bd      	mov	sp, r7
 8007a44:	bc80      	pop	{r7}
 8007a46:	4770      	bx	lr

08007a48 <USBD_CtlError>:
* @retval None
*/

void USBD_CtlError(USBD_HandleTypeDef *pdev,
                   USBD_SetupReqTypedef *req)
{
 8007a48:	b580      	push	{r7, lr}
 8007a4a:	b082      	sub	sp, #8
 8007a4c:	af00      	add	r7, sp, #0
 8007a4e:	6078      	str	r0, [r7, #4]
 8007a50:	6039      	str	r1, [r7, #0]
  USBD_LL_StallEP(pdev, 0x80U);
 8007a52:	2180      	movs	r1, #128	@ 0x80
 8007a54:	6878      	ldr	r0, [r7, #4]
 8007a56:	f000 fb65 	bl	8008124 <USBD_LL_StallEP>
  USBD_LL_StallEP(pdev, 0U);
 8007a5a:	2100      	movs	r1, #0
 8007a5c:	6878      	ldr	r0, [r7, #4]
 8007a5e:	f000 fb61 	bl	8008124 <USBD_LL_StallEP>
}
 8007a62:	bf00      	nop
 8007a64:	3708      	adds	r7, #8
 8007a66:	46bd      	mov	sp, r7
 8007a68:	bd80      	pop	{r7, pc}

08007a6a <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8007a6a:	b580      	push	{r7, lr}
 8007a6c:	b086      	sub	sp, #24
 8007a6e:	af00      	add	r7, sp, #0
 8007a70:	60f8      	str	r0, [r7, #12]
 8007a72:	60b9      	str	r1, [r7, #8]
 8007a74:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 8007a76:	2300      	movs	r3, #0
 8007a78:	75fb      	strb	r3, [r7, #23]

  if (desc != NULL)
 8007a7a:	68fb      	ldr	r3, [r7, #12]
 8007a7c:	2b00      	cmp	r3, #0
 8007a7e:	d032      	beq.n	8007ae6 <USBD_GetString+0x7c>
  {
    *len = (uint16_t)USBD_GetLen(desc) * 2U + 2U;
 8007a80:	68f8      	ldr	r0, [r7, #12]
 8007a82:	f000 f834 	bl	8007aee <USBD_GetLen>
 8007a86:	4603      	mov	r3, r0
 8007a88:	3301      	adds	r3, #1
 8007a8a:	b29b      	uxth	r3, r3
 8007a8c:	005b      	lsls	r3, r3, #1
 8007a8e:	b29a      	uxth	r2, r3
 8007a90:	687b      	ldr	r3, [r7, #4]
 8007a92:	801a      	strh	r2, [r3, #0]
    unicode[idx++] = *(uint8_t *)(void *)len;
 8007a94:	7dfb      	ldrb	r3, [r7, #23]
 8007a96:	1c5a      	adds	r2, r3, #1
 8007a98:	75fa      	strb	r2, [r7, #23]
 8007a9a:	461a      	mov	r2, r3
 8007a9c:	68bb      	ldr	r3, [r7, #8]
 8007a9e:	4413      	add	r3, r2
 8007aa0:	687a      	ldr	r2, [r7, #4]
 8007aa2:	7812      	ldrb	r2, [r2, #0]
 8007aa4:	701a      	strb	r2, [r3, #0]
    unicode[idx++] = USB_DESC_TYPE_STRING;
 8007aa6:	7dfb      	ldrb	r3, [r7, #23]
 8007aa8:	1c5a      	adds	r2, r3, #1
 8007aaa:	75fa      	strb	r2, [r7, #23]
 8007aac:	461a      	mov	r2, r3
 8007aae:	68bb      	ldr	r3, [r7, #8]
 8007ab0:	4413      	add	r3, r2
 8007ab2:	2203      	movs	r2, #3
 8007ab4:	701a      	strb	r2, [r3, #0]

    while (*desc != '\0')
 8007ab6:	e012      	b.n	8007ade <USBD_GetString+0x74>
    {
      unicode[idx++] = *desc++;
 8007ab8:	68fb      	ldr	r3, [r7, #12]
 8007aba:	1c5a      	adds	r2, r3, #1
 8007abc:	60fa      	str	r2, [r7, #12]
 8007abe:	7dfa      	ldrb	r2, [r7, #23]
 8007ac0:	1c51      	adds	r1, r2, #1
 8007ac2:	75f9      	strb	r1, [r7, #23]
 8007ac4:	4611      	mov	r1, r2
 8007ac6:	68ba      	ldr	r2, [r7, #8]
 8007ac8:	440a      	add	r2, r1
 8007aca:	781b      	ldrb	r3, [r3, #0]
 8007acc:	7013      	strb	r3, [r2, #0]
      unicode[idx++] =  0U;
 8007ace:	7dfb      	ldrb	r3, [r7, #23]
 8007ad0:	1c5a      	adds	r2, r3, #1
 8007ad2:	75fa      	strb	r2, [r7, #23]
 8007ad4:	461a      	mov	r2, r3
 8007ad6:	68bb      	ldr	r3, [r7, #8]
 8007ad8:	4413      	add	r3, r2
 8007ada:	2200      	movs	r2, #0
 8007adc:	701a      	strb	r2, [r3, #0]
    while (*desc != '\0')
 8007ade:	68fb      	ldr	r3, [r7, #12]
 8007ae0:	781b      	ldrb	r3, [r3, #0]
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d1e8      	bne.n	8007ab8 <USBD_GetString+0x4e>
    }
  }
}
 8007ae6:	bf00      	nop
 8007ae8:	3718      	adds	r7, #24
 8007aea:	46bd      	mov	sp, r7
 8007aec:	bd80      	pop	{r7, pc}

08007aee <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 8007aee:	b480      	push	{r7}
 8007af0:	b085      	sub	sp, #20
 8007af2:	af00      	add	r7, sp, #0
 8007af4:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 8007af6:	2300      	movs	r3, #0
 8007af8:	73fb      	strb	r3, [r7, #15]

  while (*buf != '\0')
 8007afa:	e005      	b.n	8007b08 <USBD_GetLen+0x1a>
  {
    len++;
 8007afc:	7bfb      	ldrb	r3, [r7, #15]
 8007afe:	3301      	adds	r3, #1
 8007b00:	73fb      	strb	r3, [r7, #15]
    buf++;
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	3301      	adds	r3, #1
 8007b06:	607b      	str	r3, [r7, #4]
  while (*buf != '\0')
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	781b      	ldrb	r3, [r3, #0]
 8007b0c:	2b00      	cmp	r3, #0
 8007b0e:	d1f5      	bne.n	8007afc <USBD_GetLen+0xe>
  }

  return len;
 8007b10:	7bfb      	ldrb	r3, [r7, #15]
}
 8007b12:	4618      	mov	r0, r3
 8007b14:	3714      	adds	r7, #20
 8007b16:	46bd      	mov	sp, r7
 8007b18:	bc80      	pop	{r7}
 8007b1a:	4770      	bx	lr

08007b1c <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint16_t len)
{
 8007b1c:	b580      	push	{r7, lr}
 8007b1e:	b084      	sub	sp, #16
 8007b20:	af00      	add	r7, sp, #0
 8007b22:	60f8      	str	r0, [r7, #12]
 8007b24:	60b9      	str	r1, [r7, #8]
 8007b26:	4613      	mov	r3, r2
 8007b28:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8007b2a:	68fb      	ldr	r3, [r7, #12]
 8007b2c:	2202      	movs	r2, #2
 8007b2e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
 8007b32:	88fa      	ldrh	r2, [r7, #6]
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	61da      	str	r2, [r3, #28]
  pdev->ep_in[0].rem_length   = len;
 8007b38:	88fa      	ldrh	r2, [r7, #6]
 8007b3a:	68fb      	ldr	r3, [r7, #12]
 8007b3c:	621a      	str	r2, [r3, #32]

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8007b3e:	88fb      	ldrh	r3, [r7, #6]
 8007b40:	68ba      	ldr	r2, [r7, #8]
 8007b42:	2100      	movs	r1, #0
 8007b44:	68f8      	ldr	r0, [r7, #12]
 8007b46:	f000 fb75 	bl	8008234 <USBD_LL_Transmit>

  return USBD_OK;
 8007b4a:	2300      	movs	r3, #0
}
 8007b4c:	4618      	mov	r0, r3
 8007b4e:	3710      	adds	r7, #16
 8007b50:	46bd      	mov	sp, r7
 8007b52:	bd80      	pop	{r7, pc}

08007b54 <USBD_CtlContinueSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint16_t len)
{
 8007b54:	b580      	push	{r7, lr}
 8007b56:	b084      	sub	sp, #16
 8007b58:	af00      	add	r7, sp, #0
 8007b5a:	60f8      	str	r0, [r7, #12]
 8007b5c:	60b9      	str	r1, [r7, #8]
 8007b5e:	4613      	mov	r3, r2
 8007b60:	80fb      	strh	r3, [r7, #6]
  /* Start the next transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8007b62:	88fb      	ldrh	r3, [r7, #6]
 8007b64:	68ba      	ldr	r2, [r7, #8]
 8007b66:	2100      	movs	r1, #0
 8007b68:	68f8      	ldr	r0, [r7, #12]
 8007b6a:	f000 fb63 	bl	8008234 <USBD_LL_Transmit>

  return USBD_OK;
 8007b6e:	2300      	movs	r3, #0
}
 8007b70:	4618      	mov	r0, r3
 8007b72:	3710      	adds	r7, #16
 8007b74:	46bd      	mov	sp, r7
 8007b76:	bd80      	pop	{r7, pc}

08007b78 <USBD_CtlContinueRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint16_t len)
{
 8007b78:	b580      	push	{r7, lr}
 8007b7a:	b084      	sub	sp, #16
 8007b7c:	af00      	add	r7, sp, #0
 8007b7e:	60f8      	str	r0, [r7, #12]
 8007b80:	60b9      	str	r1, [r7, #8]
 8007b82:	4613      	mov	r3, r2
 8007b84:	80fb      	strh	r3, [r7, #6]
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8007b86:	88fb      	ldrh	r3, [r7, #6]
 8007b88:	68ba      	ldr	r2, [r7, #8]
 8007b8a:	2100      	movs	r1, #0
 8007b8c:	68f8      	ldr	r0, [r7, #12]
 8007b8e:	f000 fb74 	bl	800827a <USBD_LL_PrepareReceive>

  return USBD_OK;
 8007b92:	2300      	movs	r3, #0
}
 8007b94:	4618      	mov	r0, r3
 8007b96:	3710      	adds	r7, #16
 8007b98:	46bd      	mov	sp, r7
 8007b9a:	bd80      	pop	{r7, pc}

08007b9c <USBD_CtlSendStatus>:
*         send zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8007b9c:	b580      	push	{r7, lr}
 8007b9e:	b082      	sub	sp, #8
 8007ba0:	af00      	add	r7, sp, #0
 8007ba2:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	2204      	movs	r2, #4
 8007ba8:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8007bac:	2300      	movs	r3, #0
 8007bae:	2200      	movs	r2, #0
 8007bb0:	2100      	movs	r1, #0
 8007bb2:	6878      	ldr	r0, [r7, #4]
 8007bb4:	f000 fb3e 	bl	8008234 <USBD_LL_Transmit>

  return USBD_OK;
 8007bb8:	2300      	movs	r3, #0
}
 8007bba:	4618      	mov	r0, r3
 8007bbc:	3708      	adds	r7, #8
 8007bbe:	46bd      	mov	sp, r7
 8007bc0:	bd80      	pop	{r7, pc}

08007bc2 <USBD_CtlReceiveStatus>:
*         receive zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 8007bc2:	b580      	push	{r7, lr}
 8007bc4:	b082      	sub	sp, #8
 8007bc6:	af00      	add	r7, sp, #0
 8007bc8:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	2205      	movs	r2, #5
 8007bce:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8007bd2:	2300      	movs	r3, #0
 8007bd4:	2200      	movs	r2, #0
 8007bd6:	2100      	movs	r1, #0
 8007bd8:	6878      	ldr	r0, [r7, #4]
 8007bda:	f000 fb4e 	bl	800827a <USBD_LL_PrepareReceive>

  return USBD_OK;
 8007bde:	2300      	movs	r3, #0
}
 8007be0:	4618      	mov	r0, r3
 8007be2:	3708      	adds	r7, #8
 8007be4:	46bd      	mov	sp, r7
 8007be6:	bd80      	pop	{r7, pc}

08007be8 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8007be8:	b580      	push	{r7, lr}
 8007bea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 8007bec:	2200      	movs	r2, #0
 8007bee:	490e      	ldr	r1, [pc, #56]	@ (8007c28 <MX_USB_DEVICE_Init+0x40>)
 8007bf0:	480e      	ldr	r0, [pc, #56]	@ (8007c2c <MX_USB_DEVICE_Init+0x44>)
 8007bf2:	f7fe ff81 	bl	8006af8 <USBD_Init>
 8007bf6:	4603      	mov	r3, r0
 8007bf8:	2b00      	cmp	r3, #0
 8007bfa:	d001      	beq.n	8007c00 <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
 8007bfc:	f7f8 ff32 	bl	8000a64 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID) != USBD_OK)
 8007c00:	490b      	ldr	r1, [pc, #44]	@ (8007c30 <MX_USB_DEVICE_Init+0x48>)
 8007c02:	480a      	ldr	r0, [pc, #40]	@ (8007c2c <MX_USB_DEVICE_Init+0x44>)
 8007c04:	f7fe ffa3 	bl	8006b4e <USBD_RegisterClass>
 8007c08:	4603      	mov	r3, r0
 8007c0a:	2b00      	cmp	r3, #0
 8007c0c:	d001      	beq.n	8007c12 <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
 8007c0e:	f7f8 ff29 	bl	8000a64 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 8007c12:	4806      	ldr	r0, [pc, #24]	@ (8007c2c <MX_USB_DEVICE_Init+0x44>)
 8007c14:	f7fe ffb4 	bl	8006b80 <USBD_Start>
 8007c18:	4603      	mov	r3, r0
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	d001      	beq.n	8007c22 <MX_USB_DEVICE_Init+0x3a>
  {
    Error_Handler();
 8007c1e:	f7f8 ff21 	bl	8000a64 <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8007c22:	bf00      	nop
 8007c24:	bd80      	pop	{r7, pc}
 8007c26:	bf00      	nop
 8007c28:	20000118 	.word	0x20000118
 8007c2c:	200001d8 	.word	0x200001d8
 8007c30:	20000010 	.word	0x20000010

08007c34 <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007c34:	b480      	push	{r7}
 8007c36:	b083      	sub	sp, #12
 8007c38:	af00      	add	r7, sp, #0
 8007c3a:	4603      	mov	r3, r0
 8007c3c:	6039      	str	r1, [r7, #0]
 8007c3e:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 8007c40:	683b      	ldr	r3, [r7, #0]
 8007c42:	2212      	movs	r2, #18
 8007c44:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
 8007c46:	4b03      	ldr	r3, [pc, #12]	@ (8007c54 <USBD_FS_DeviceDescriptor+0x20>)
}
 8007c48:	4618      	mov	r0, r3
 8007c4a:	370c      	adds	r7, #12
 8007c4c:	46bd      	mov	sp, r7
 8007c4e:	bc80      	pop	{r7}
 8007c50:	4770      	bx	lr
 8007c52:	bf00      	nop
 8007c54:	20000134 	.word	0x20000134

08007c58 <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007c58:	b480      	push	{r7}
 8007c5a:	b083      	sub	sp, #12
 8007c5c:	af00      	add	r7, sp, #0
 8007c5e:	4603      	mov	r3, r0
 8007c60:	6039      	str	r1, [r7, #0]
 8007c62:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8007c64:	683b      	ldr	r3, [r7, #0]
 8007c66:	2204      	movs	r2, #4
 8007c68:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
 8007c6a:	4b03      	ldr	r3, [pc, #12]	@ (8007c78 <USBD_FS_LangIDStrDescriptor+0x20>)
}
 8007c6c:	4618      	mov	r0, r3
 8007c6e:	370c      	adds	r7, #12
 8007c70:	46bd      	mov	sp, r7
 8007c72:	bc80      	pop	{r7}
 8007c74:	4770      	bx	lr
 8007c76:	bf00      	nop
 8007c78:	20000148 	.word	0x20000148

08007c7c <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007c7c:	b580      	push	{r7, lr}
 8007c7e:	b082      	sub	sp, #8
 8007c80:	af00      	add	r7, sp, #0
 8007c82:	4603      	mov	r3, r0
 8007c84:	6039      	str	r1, [r7, #0]
 8007c86:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 8007c88:	79fb      	ldrb	r3, [r7, #7]
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d105      	bne.n	8007c9a <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8007c8e:	683a      	ldr	r2, [r7, #0]
 8007c90:	4907      	ldr	r1, [pc, #28]	@ (8007cb0 <USBD_FS_ProductStrDescriptor+0x34>)
 8007c92:	4808      	ldr	r0, [pc, #32]	@ (8007cb4 <USBD_FS_ProductStrDescriptor+0x38>)
 8007c94:	f7ff fee9 	bl	8007a6a <USBD_GetString>
 8007c98:	e004      	b.n	8007ca4 <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 8007c9a:	683a      	ldr	r2, [r7, #0]
 8007c9c:	4904      	ldr	r1, [pc, #16]	@ (8007cb0 <USBD_FS_ProductStrDescriptor+0x34>)
 8007c9e:	4805      	ldr	r0, [pc, #20]	@ (8007cb4 <USBD_FS_ProductStrDescriptor+0x38>)
 8007ca0:	f7ff fee3 	bl	8007a6a <USBD_GetString>
  }
  return USBD_StrDesc;
 8007ca4:	4b02      	ldr	r3, [pc, #8]	@ (8007cb0 <USBD_FS_ProductStrDescriptor+0x34>)
}
 8007ca6:	4618      	mov	r0, r3
 8007ca8:	3708      	adds	r7, #8
 8007caa:	46bd      	mov	sp, r7
 8007cac:	bd80      	pop	{r7, pc}
 8007cae:	bf00      	nop
 8007cb0:	2000049c 	.word	0x2000049c
 8007cb4:	080083c8 	.word	0x080083c8

08007cb8 <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007cb8:	b580      	push	{r7, lr}
 8007cba:	b082      	sub	sp, #8
 8007cbc:	af00      	add	r7, sp, #0
 8007cbe:	4603      	mov	r3, r0
 8007cc0:	6039      	str	r1, [r7, #0]
 8007cc2:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8007cc4:	683a      	ldr	r2, [r7, #0]
 8007cc6:	4904      	ldr	r1, [pc, #16]	@ (8007cd8 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8007cc8:	4804      	ldr	r0, [pc, #16]	@ (8007cdc <USBD_FS_ManufacturerStrDescriptor+0x24>)
 8007cca:	f7ff fece 	bl	8007a6a <USBD_GetString>
  return USBD_StrDesc;
 8007cce:	4b02      	ldr	r3, [pc, #8]	@ (8007cd8 <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
 8007cd0:	4618      	mov	r0, r3
 8007cd2:	3708      	adds	r7, #8
 8007cd4:	46bd      	mov	sp, r7
 8007cd6:	bd80      	pop	{r7, pc}
 8007cd8:	2000049c 	.word	0x2000049c
 8007cdc:	080083e0 	.word	0x080083e0

08007ce0 <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007ce0:	b580      	push	{r7, lr}
 8007ce2:	b082      	sub	sp, #8
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	4603      	mov	r3, r0
 8007ce8:	6039      	str	r1, [r7, #0]
 8007cea:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
 8007cec:	683b      	ldr	r3, [r7, #0]
 8007cee:	221a      	movs	r2, #26
 8007cf0:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
 8007cf2:	f000 f843 	bl	8007d7c <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */

  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
 8007cf6:	4b02      	ldr	r3, [pc, #8]	@ (8007d00 <USBD_FS_SerialStrDescriptor+0x20>)
}
 8007cf8:	4618      	mov	r0, r3
 8007cfa:	3708      	adds	r7, #8
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	bd80      	pop	{r7, pc}
 8007d00:	2000014c 	.word	0x2000014c

08007d04 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007d04:	b580      	push	{r7, lr}
 8007d06:	b082      	sub	sp, #8
 8007d08:	af00      	add	r7, sp, #0
 8007d0a:	4603      	mov	r3, r0
 8007d0c:	6039      	str	r1, [r7, #0]
 8007d0e:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
 8007d10:	79fb      	ldrb	r3, [r7, #7]
 8007d12:	2b00      	cmp	r3, #0
 8007d14:	d105      	bne.n	8007d22 <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8007d16:	683a      	ldr	r2, [r7, #0]
 8007d18:	4907      	ldr	r1, [pc, #28]	@ (8007d38 <USBD_FS_ConfigStrDescriptor+0x34>)
 8007d1a:	4808      	ldr	r0, [pc, #32]	@ (8007d3c <USBD_FS_ConfigStrDescriptor+0x38>)
 8007d1c:	f7ff fea5 	bl	8007a6a <USBD_GetString>
 8007d20:	e004      	b.n	8007d2c <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 8007d22:	683a      	ldr	r2, [r7, #0]
 8007d24:	4904      	ldr	r1, [pc, #16]	@ (8007d38 <USBD_FS_ConfigStrDescriptor+0x34>)
 8007d26:	4805      	ldr	r0, [pc, #20]	@ (8007d3c <USBD_FS_ConfigStrDescriptor+0x38>)
 8007d28:	f7ff fe9f 	bl	8007a6a <USBD_GetString>
  }
  return USBD_StrDesc;
 8007d2c:	4b02      	ldr	r3, [pc, #8]	@ (8007d38 <USBD_FS_ConfigStrDescriptor+0x34>)
}
 8007d2e:	4618      	mov	r0, r3
 8007d30:	3708      	adds	r7, #8
 8007d32:	46bd      	mov	sp, r7
 8007d34:	bd80      	pop	{r7, pc}
 8007d36:	bf00      	nop
 8007d38:	2000049c 	.word	0x2000049c
 8007d3c:	080083f4 	.word	0x080083f4

08007d40 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007d40:	b580      	push	{r7, lr}
 8007d42:	b082      	sub	sp, #8
 8007d44:	af00      	add	r7, sp, #0
 8007d46:	4603      	mov	r3, r0
 8007d48:	6039      	str	r1, [r7, #0]
 8007d4a:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 8007d4c:	79fb      	ldrb	r3, [r7, #7]
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d105      	bne.n	8007d5e <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8007d52:	683a      	ldr	r2, [r7, #0]
 8007d54:	4907      	ldr	r1, [pc, #28]	@ (8007d74 <USBD_FS_InterfaceStrDescriptor+0x34>)
 8007d56:	4808      	ldr	r0, [pc, #32]	@ (8007d78 <USBD_FS_InterfaceStrDescriptor+0x38>)
 8007d58:	f7ff fe87 	bl	8007a6a <USBD_GetString>
 8007d5c:	e004      	b.n	8007d68 <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8007d5e:	683a      	ldr	r2, [r7, #0]
 8007d60:	4904      	ldr	r1, [pc, #16]	@ (8007d74 <USBD_FS_InterfaceStrDescriptor+0x34>)
 8007d62:	4805      	ldr	r0, [pc, #20]	@ (8007d78 <USBD_FS_InterfaceStrDescriptor+0x38>)
 8007d64:	f7ff fe81 	bl	8007a6a <USBD_GetString>
  }
  return USBD_StrDesc;
 8007d68:	4b02      	ldr	r3, [pc, #8]	@ (8007d74 <USBD_FS_InterfaceStrDescriptor+0x34>)
}
 8007d6a:	4618      	mov	r0, r3
 8007d6c:	3708      	adds	r7, #8
 8007d6e:	46bd      	mov	sp, r7
 8007d70:	bd80      	pop	{r7, pc}
 8007d72:	bf00      	nop
 8007d74:	2000049c 	.word	0x2000049c
 8007d78:	08008400 	.word	0x08008400

08007d7c <Get_SerialNum>:
  * @brief  Create the serial number string descriptor
  * @param  None
  * @retval None
  */
static void Get_SerialNum(void)
{
 8007d7c:	b580      	push	{r7, lr}
 8007d7e:	b084      	sub	sp, #16
 8007d80:	af00      	add	r7, sp, #0
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8007d82:	4b0f      	ldr	r3, [pc, #60]	@ (8007dc0 <Get_SerialNum+0x44>)
 8007d84:	681b      	ldr	r3, [r3, #0]
 8007d86:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8007d88:	4b0e      	ldr	r3, [pc, #56]	@ (8007dc4 <Get_SerialNum+0x48>)
 8007d8a:	681b      	ldr	r3, [r3, #0]
 8007d8c:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 8007d8e:	4b0e      	ldr	r3, [pc, #56]	@ (8007dc8 <Get_SerialNum+0x4c>)
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
 8007d94:	68fa      	ldr	r2, [r7, #12]
 8007d96:	687b      	ldr	r3, [r7, #4]
 8007d98:	4413      	add	r3, r2
 8007d9a:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
 8007d9c:	68fb      	ldr	r3, [r7, #12]
 8007d9e:	2b00      	cmp	r3, #0
 8007da0:	d009      	beq.n	8007db6 <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8007da2:	2208      	movs	r2, #8
 8007da4:	4909      	ldr	r1, [pc, #36]	@ (8007dcc <Get_SerialNum+0x50>)
 8007da6:	68f8      	ldr	r0, [r7, #12]
 8007da8:	f000 f814 	bl	8007dd4 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8007dac:	2204      	movs	r2, #4
 8007dae:	4908      	ldr	r1, [pc, #32]	@ (8007dd0 <Get_SerialNum+0x54>)
 8007db0:	68b8      	ldr	r0, [r7, #8]
 8007db2:	f000 f80f 	bl	8007dd4 <IntToUnicode>
  }
}
 8007db6:	bf00      	nop
 8007db8:	3710      	adds	r7, #16
 8007dba:	46bd      	mov	sp, r7
 8007dbc:	bd80      	pop	{r7, pc}
 8007dbe:	bf00      	nop
 8007dc0:	1ffff7e8 	.word	0x1ffff7e8
 8007dc4:	1ffff7ec 	.word	0x1ffff7ec
 8007dc8:	1ffff7f0 	.word	0x1ffff7f0
 8007dcc:	2000014e 	.word	0x2000014e
 8007dd0:	2000015e 	.word	0x2000015e

08007dd4 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8007dd4:	b480      	push	{r7}
 8007dd6:	b087      	sub	sp, #28
 8007dd8:	af00      	add	r7, sp, #0
 8007dda:	60f8      	str	r0, [r7, #12]
 8007ddc:	60b9      	str	r1, [r7, #8]
 8007dde:	4613      	mov	r3, r2
 8007de0:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
 8007de2:	2300      	movs	r3, #0
 8007de4:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
 8007de6:	2300      	movs	r3, #0
 8007de8:	75fb      	strb	r3, [r7, #23]
 8007dea:	e027      	b.n	8007e3c <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
 8007dec:	68fb      	ldr	r3, [r7, #12]
 8007dee:	0f1b      	lsrs	r3, r3, #28
 8007df0:	2b09      	cmp	r3, #9
 8007df2:	d80b      	bhi.n	8007e0c <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
 8007df4:	68fb      	ldr	r3, [r7, #12]
 8007df6:	0f1b      	lsrs	r3, r3, #28
 8007df8:	b2da      	uxtb	r2, r3
 8007dfa:	7dfb      	ldrb	r3, [r7, #23]
 8007dfc:	005b      	lsls	r3, r3, #1
 8007dfe:	4619      	mov	r1, r3
 8007e00:	68bb      	ldr	r3, [r7, #8]
 8007e02:	440b      	add	r3, r1
 8007e04:	3230      	adds	r2, #48	@ 0x30
 8007e06:	b2d2      	uxtb	r2, r2
 8007e08:	701a      	strb	r2, [r3, #0]
 8007e0a:	e00a      	b.n	8007e22 <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	0f1b      	lsrs	r3, r3, #28
 8007e10:	b2da      	uxtb	r2, r3
 8007e12:	7dfb      	ldrb	r3, [r7, #23]
 8007e14:	005b      	lsls	r3, r3, #1
 8007e16:	4619      	mov	r1, r3
 8007e18:	68bb      	ldr	r3, [r7, #8]
 8007e1a:	440b      	add	r3, r1
 8007e1c:	3237      	adds	r2, #55	@ 0x37
 8007e1e:	b2d2      	uxtb	r2, r2
 8007e20:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
 8007e22:	68fb      	ldr	r3, [r7, #12]
 8007e24:	011b      	lsls	r3, r3, #4
 8007e26:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
 8007e28:	7dfb      	ldrb	r3, [r7, #23]
 8007e2a:	005b      	lsls	r3, r3, #1
 8007e2c:	3301      	adds	r3, #1
 8007e2e:	68ba      	ldr	r2, [r7, #8]
 8007e30:	4413      	add	r3, r2
 8007e32:	2200      	movs	r2, #0
 8007e34:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
 8007e36:	7dfb      	ldrb	r3, [r7, #23]
 8007e38:	3301      	adds	r3, #1
 8007e3a:	75fb      	strb	r3, [r7, #23]
 8007e3c:	7dfa      	ldrb	r2, [r7, #23]
 8007e3e:	79fb      	ldrb	r3, [r7, #7]
 8007e40:	429a      	cmp	r2, r3
 8007e42:	d3d3      	bcc.n	8007dec <IntToUnicode+0x18>
  }
}
 8007e44:	bf00      	nop
 8007e46:	bf00      	nop
 8007e48:	371c      	adds	r7, #28
 8007e4a:	46bd      	mov	sp, r7
 8007e4c:	bc80      	pop	{r7}
 8007e4e:	4770      	bx	lr

08007e50 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b084      	sub	sp, #16
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
  if(pcdHandle->Instance==USB)
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	681b      	ldr	r3, [r3, #0]
 8007e5c:	4a0d      	ldr	r2, [pc, #52]	@ (8007e94 <HAL_PCD_MspInit+0x44>)
 8007e5e:	4293      	cmp	r3, r2
 8007e60:	d113      	bne.n	8007e8a <HAL_PCD_MspInit+0x3a>
  {
  /* USER CODE BEGIN USB_MspInit 0 */

  /* USER CODE END USB_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USB_CLK_ENABLE();
 8007e62:	4b0d      	ldr	r3, [pc, #52]	@ (8007e98 <HAL_PCD_MspInit+0x48>)
 8007e64:	69db      	ldr	r3, [r3, #28]
 8007e66:	4a0c      	ldr	r2, [pc, #48]	@ (8007e98 <HAL_PCD_MspInit+0x48>)
 8007e68:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8007e6c:	61d3      	str	r3, [r2, #28]
 8007e6e:	4b0a      	ldr	r3, [pc, #40]	@ (8007e98 <HAL_PCD_MspInit+0x48>)
 8007e70:	69db      	ldr	r3, [r3, #28]
 8007e72:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007e76:	60fb      	str	r3, [r7, #12]
 8007e78:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
 8007e7a:	2200      	movs	r2, #0
 8007e7c:	2100      	movs	r1, #0
 8007e7e:	2014      	movs	r0, #20
 8007e80:	f7f9 fc4f 	bl	8001722 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 8007e84:	2014      	movs	r0, #20
 8007e86:	f7f9 fc68 	bl	800175a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 8007e8a:	bf00      	nop
 8007e8c:	3710      	adds	r7, #16
 8007e8e:	46bd      	mov	sp, r7
 8007e90:	bd80      	pop	{r7, pc}
 8007e92:	bf00      	nop
 8007e94:	40005c00 	.word	0x40005c00
 8007e98:	40021000 	.word	0x40021000

08007e9c <HAL_PCD_SetupStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007e9c:	b580      	push	{r7, lr}
 8007e9e:	b082      	sub	sp, #8
 8007ea0:	af00      	add	r7, sp, #0
 8007ea2:	6078      	str	r0, [r7, #4]
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	f503 7326 	add.w	r3, r3, #664	@ 0x298
 8007eb0:	4619      	mov	r1, r3
 8007eb2:	4610      	mov	r0, r2
 8007eb4:	f7fe feac 	bl	8006c10 <USBD_LL_SetupStage>
}
 8007eb8:	bf00      	nop
 8007eba:	3708      	adds	r7, #8
 8007ebc:	46bd      	mov	sp, r7
 8007ebe:	bd80      	pop	{r7, pc}

08007ec0 <HAL_PCD_DataOutStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007ec0:	b580      	push	{r7, lr}
 8007ec2:	b082      	sub	sp, #8
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	6078      	str	r0, [r7, #4]
 8007ec8:	460b      	mov	r3, r1
 8007eca:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	f8d3 02d4 	ldr.w	r0, [r3, #724]	@ 0x2d4
 8007ed2:	78fa      	ldrb	r2, [r7, #3]
 8007ed4:	6879      	ldr	r1, [r7, #4]
 8007ed6:	4613      	mov	r3, r2
 8007ed8:	009b      	lsls	r3, r3, #2
 8007eda:	4413      	add	r3, r2
 8007edc:	00db      	lsls	r3, r3, #3
 8007ede:	440b      	add	r3, r1
 8007ee0:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8007ee4:	681a      	ldr	r2, [r3, #0]
 8007ee6:	78fb      	ldrb	r3, [r7, #3]
 8007ee8:	4619      	mov	r1, r3
 8007eea:	f7fe fede 	bl	8006caa <USBD_LL_DataOutStage>
}
 8007eee:	bf00      	nop
 8007ef0:	3708      	adds	r7, #8
 8007ef2:	46bd      	mov	sp, r7
 8007ef4:	bd80      	pop	{r7, pc}

08007ef6 <HAL_PCD_DataInStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007ef6:	b580      	push	{r7, lr}
 8007ef8:	b082      	sub	sp, #8
 8007efa:	af00      	add	r7, sp, #0
 8007efc:	6078      	str	r0, [r7, #4]
 8007efe:	460b      	mov	r3, r1
 8007f00:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	f8d3 02d4 	ldr.w	r0, [r3, #724]	@ 0x2d4
 8007f08:	78fa      	ldrb	r2, [r7, #3]
 8007f0a:	6879      	ldr	r1, [r7, #4]
 8007f0c:	4613      	mov	r3, r2
 8007f0e:	009b      	lsls	r3, r3, #2
 8007f10:	4413      	add	r3, r2
 8007f12:	00db      	lsls	r3, r3, #3
 8007f14:	440b      	add	r3, r1
 8007f16:	3324      	adds	r3, #36	@ 0x24
 8007f18:	681a      	ldr	r2, [r3, #0]
 8007f1a:	78fb      	ldrb	r3, [r7, #3]
 8007f1c:	4619      	mov	r1, r3
 8007f1e:	f7fe ff35 	bl	8006d8c <USBD_LL_DataInStage>
}
 8007f22:	bf00      	nop
 8007f24:	3708      	adds	r7, #8
 8007f26:	46bd      	mov	sp, r7
 8007f28:	bd80      	pop	{r7, pc}

08007f2a <HAL_PCD_SOFCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007f2a:	b580      	push	{r7, lr}
 8007f2c:	b082      	sub	sp, #8
 8007f2e:	af00      	add	r7, sp, #0
 8007f30:	6078      	str	r0, [r7, #4]
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8007f38:	4618      	mov	r0, r3
 8007f3a:	f7ff f845 	bl	8006fc8 <USBD_LL_SOF>
}
 8007f3e:	bf00      	nop
 8007f40:	3708      	adds	r7, #8
 8007f42:	46bd      	mov	sp, r7
 8007f44:	bd80      	pop	{r7, pc}

08007f46 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007f46:	b580      	push	{r7, lr}
 8007f48:	b084      	sub	sp, #16
 8007f4a:	af00      	add	r7, sp, #0
 8007f4c:	6078      	str	r0, [r7, #4]
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 8007f4e:	2301      	movs	r3, #1
 8007f50:	73fb      	strb	r3, [r7, #15]

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	799b      	ldrb	r3, [r3, #6]
 8007f56:	2b02      	cmp	r3, #2
 8007f58:	d001      	beq.n	8007f5e <HAL_PCD_ResetCallback+0x18>
  {
    Error_Handler();
 8007f5a:	f7f8 fd83 	bl	8000a64 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8007f64:	7bfa      	ldrb	r2, [r7, #15]
 8007f66:	4611      	mov	r1, r2
 8007f68:	4618      	mov	r0, r3
 8007f6a:	f7fe fff5 	bl	8006f58 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8007f74:	4618      	mov	r0, r3
 8007f76:	f7fe ffae 	bl	8006ed6 <USBD_LL_Reset>
}
 8007f7a:	bf00      	nop
 8007f7c:	3710      	adds	r7, #16
 8007f7e:	46bd      	mov	sp, r7
 8007f80:	bd80      	pop	{r7, pc}
	...

08007f84 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007f84:	b580      	push	{r7, lr}
 8007f86:	b082      	sub	sp, #8
 8007f88:	af00      	add	r7, sp, #0
 8007f8a:	6078      	str	r0, [r7, #4]
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8007f92:	4618      	mov	r0, r3
 8007f94:	f7fe ffef 	bl	8006f76 <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	7a9b      	ldrb	r3, [r3, #10]
 8007f9c:	2b00      	cmp	r3, #0
 8007f9e:	d005      	beq.n	8007fac <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8007fa0:	4b04      	ldr	r3, [pc, #16]	@ (8007fb4 <HAL_PCD_SuspendCallback+0x30>)
 8007fa2:	691b      	ldr	r3, [r3, #16]
 8007fa4:	4a03      	ldr	r2, [pc, #12]	@ (8007fb4 <HAL_PCD_SuspendCallback+0x30>)
 8007fa6:	f043 0306 	orr.w	r3, r3, #6
 8007faa:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 8007fac:	bf00      	nop
 8007fae:	3708      	adds	r7, #8
 8007fb0:	46bd      	mov	sp, r7
 8007fb2:	bd80      	pop	{r7, pc}
 8007fb4:	e000ed00 	.word	0xe000ed00

08007fb8 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007fb8:	b580      	push	{r7, lr}
 8007fba:	b082      	sub	sp, #8
 8007fbc:	af00      	add	r7, sp, #0
 8007fbe:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8007fc6:	4618      	mov	r0, r3
 8007fc8:	f7fe ffe9 	bl	8006f9e <USBD_LL_Resume>
}
 8007fcc:	bf00      	nop
 8007fce:	3708      	adds	r7, #8
 8007fd0:	46bd      	mov	sp, r7
 8007fd2:	bd80      	pop	{r7, pc}

08007fd4 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8007fd4:	b580      	push	{r7, lr}
 8007fd6:	b082      	sub	sp, #8
 8007fd8:	af00      	add	r7, sp, #0
 8007fda:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  /* Link the driver to the stack. */
  hpcd_USB_FS.pData = pdev;
 8007fdc:	4a1f      	ldr	r2, [pc, #124]	@ (800805c <USBD_LL_Init+0x88>)
 8007fde:	687b      	ldr	r3, [r7, #4]
 8007fe0:	f8c2 32d4 	str.w	r3, [r2, #724]	@ 0x2d4
  pdev->pData = &hpcd_USB_FS;
 8007fe4:	687b      	ldr	r3, [r7, #4]
 8007fe6:	4a1d      	ldr	r2, [pc, #116]	@ (800805c <USBD_LL_Init+0x88>)
 8007fe8:	f8c3 22c0 	str.w	r2, [r3, #704]	@ 0x2c0

  hpcd_USB_FS.Instance = USB;
 8007fec:	4b1b      	ldr	r3, [pc, #108]	@ (800805c <USBD_LL_Init+0x88>)
 8007fee:	4a1c      	ldr	r2, [pc, #112]	@ (8008060 <USBD_LL_Init+0x8c>)
 8007ff0:	601a      	str	r2, [r3, #0]
  hpcd_USB_FS.Init.dev_endpoints = 8;
 8007ff2:	4b1a      	ldr	r3, [pc, #104]	@ (800805c <USBD_LL_Init+0x88>)
 8007ff4:	2208      	movs	r2, #8
 8007ff6:	711a      	strb	r2, [r3, #4]
  hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 8007ff8:	4b18      	ldr	r3, [pc, #96]	@ (800805c <USBD_LL_Init+0x88>)
 8007ffa:	2202      	movs	r2, #2
 8007ffc:	719a      	strb	r2, [r3, #6]
  hpcd_USB_FS.Init.low_power_enable = DISABLE;
 8007ffe:	4b17      	ldr	r3, [pc, #92]	@ (800805c <USBD_LL_Init+0x88>)
 8008000:	2200      	movs	r2, #0
 8008002:	729a      	strb	r2, [r3, #10]
  hpcd_USB_FS.Init.lpm_enable = DISABLE;
 8008004:	4b15      	ldr	r3, [pc, #84]	@ (800805c <USBD_LL_Init+0x88>)
 8008006:	2200      	movs	r2, #0
 8008008:	72da      	strb	r2, [r3, #11]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 800800a:	4b14      	ldr	r3, [pc, #80]	@ (800805c <USBD_LL_Init+0x88>)
 800800c:	2200      	movs	r2, #0
 800800e:	731a      	strb	r2, [r3, #12]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 8008010:	4812      	ldr	r0, [pc, #72]	@ (800805c <USBD_LL_Init+0x88>)
 8008012:	f7f9 fd70 	bl	8001af6 <HAL_PCD_Init>
 8008016:	4603      	mov	r3, r0
 8008018:	2b00      	cmp	r3, #0
 800801a:	d001      	beq.n	8008020 <USBD_LL_Init+0x4c>
  {
    Error_Handler( );
 800801c:	f7f8 fd22 	bl	8000a64 <Error_Handler>
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  /* USER CODE BEGIN EndPoint_Configuration */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 8008020:	687b      	ldr	r3, [r7, #4]
 8008022:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 8008026:	2318      	movs	r3, #24
 8008028:	2200      	movs	r2, #0
 800802a:	2100      	movs	r1, #0
 800802c:	f7fb fa6a 	bl	8003504 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 8008036:	2358      	movs	r3, #88	@ 0x58
 8008038:	2200      	movs	r2, #0
 800803a:	2180      	movs	r1, #128	@ 0x80
 800803c:	f7fb fa62 	bl	8003504 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration */
  /* USER CODE BEGIN EndPoint_Configuration_HID */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x81 , PCD_SNG_BUF, 0x100);
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 8008046:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800804a:	2200      	movs	r2, #0
 800804c:	2181      	movs	r1, #129	@ 0x81
 800804e:	f7fb fa59 	bl	8003504 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration_HID */
  return USBD_OK;
 8008052:	2300      	movs	r3, #0
}
 8008054:	4618      	mov	r0, r3
 8008056:	3708      	adds	r7, #8
 8008058:	46bd      	mov	sp, r7
 800805a:	bd80      	pop	{r7, pc}
 800805c:	2000069c 	.word	0x2000069c
 8008060:	40005c00 	.word	0x40005c00

08008064 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 8008064:	b580      	push	{r7, lr}
 8008066:	b084      	sub	sp, #16
 8008068:	af00      	add	r7, sp, #0
 800806a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800806c:	2300      	movs	r3, #0
 800806e:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8008070:	2300      	movs	r3, #0
 8008072:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_Start(pdev->pData);
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800807a:	4618      	mov	r0, r3
 800807c:	f7f9 fe31 	bl	8001ce2 <HAL_PCD_Start>
 8008080:	4603      	mov	r3, r0
 8008082:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8008084:	7bfb      	ldrb	r3, [r7, #15]
 8008086:	4618      	mov	r0, r3
 8008088:	f000 f93a 	bl	8008300 <USBD_Get_USB_Status>
 800808c:	4603      	mov	r3, r0
 800808e:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8008090:	7bbb      	ldrb	r3, [r7, #14]
}
 8008092:	4618      	mov	r0, r3
 8008094:	3710      	adds	r7, #16
 8008096:	46bd      	mov	sp, r7
 8008098:	bd80      	pop	{r7, pc}

0800809a <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
 800809a:	b580      	push	{r7, lr}
 800809c:	b084      	sub	sp, #16
 800809e:	af00      	add	r7, sp, #0
 80080a0:	6078      	str	r0, [r7, #4]
 80080a2:	4608      	mov	r0, r1
 80080a4:	4611      	mov	r1, r2
 80080a6:	461a      	mov	r2, r3
 80080a8:	4603      	mov	r3, r0
 80080aa:	70fb      	strb	r3, [r7, #3]
 80080ac:	460b      	mov	r3, r1
 80080ae:	70bb      	strb	r3, [r7, #2]
 80080b0:	4613      	mov	r3, r2
 80080b2:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
 80080b4:	2300      	movs	r3, #0
 80080b6:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80080b8:	2300      	movs	r3, #0
 80080ba:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80080bc:	687b      	ldr	r3, [r7, #4]
 80080be:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 80080c2:	78bb      	ldrb	r3, [r7, #2]
 80080c4:	883a      	ldrh	r2, [r7, #0]
 80080c6:	78f9      	ldrb	r1, [r7, #3]
 80080c8:	f7f9 ff85 	bl	8001fd6 <HAL_PCD_EP_Open>
 80080cc:	4603      	mov	r3, r0
 80080ce:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 80080d0:	7bfb      	ldrb	r3, [r7, #15]
 80080d2:	4618      	mov	r0, r3
 80080d4:	f000 f914 	bl	8008300 <USBD_Get_USB_Status>
 80080d8:	4603      	mov	r3, r0
 80080da:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 80080dc:	7bbb      	ldrb	r3, [r7, #14]
}
 80080de:	4618      	mov	r0, r3
 80080e0:	3710      	adds	r7, #16
 80080e2:	46bd      	mov	sp, r7
 80080e4:	bd80      	pop	{r7, pc}

080080e6 <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 80080e6:	b580      	push	{r7, lr}
 80080e8:	b084      	sub	sp, #16
 80080ea:	af00      	add	r7, sp, #0
 80080ec:	6078      	str	r0, [r7, #4]
 80080ee:	460b      	mov	r3, r1
 80080f0:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 80080f2:	2300      	movs	r3, #0
 80080f4:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80080f6:	2300      	movs	r3, #0
 80080f8:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 8008100:	78fa      	ldrb	r2, [r7, #3]
 8008102:	4611      	mov	r1, r2
 8008104:	4618      	mov	r0, r3
 8008106:	f7f9 ffc3 	bl	8002090 <HAL_PCD_EP_Close>
 800810a:	4603      	mov	r3, r0
 800810c:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800810e:	7bfb      	ldrb	r3, [r7, #15]
 8008110:	4618      	mov	r0, r3
 8008112:	f000 f8f5 	bl	8008300 <USBD_Get_USB_Status>
 8008116:	4603      	mov	r3, r0
 8008118:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800811a:	7bbb      	ldrb	r3, [r7, #14]
}
 800811c:	4618      	mov	r0, r3
 800811e:	3710      	adds	r7, #16
 8008120:	46bd      	mov	sp, r7
 8008122:	bd80      	pop	{r7, pc}

08008124 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8008124:	b580      	push	{r7, lr}
 8008126:	b084      	sub	sp, #16
 8008128:	af00      	add	r7, sp, #0
 800812a:	6078      	str	r0, [r7, #4]
 800812c:	460b      	mov	r3, r1
 800812e:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8008130:	2300      	movs	r3, #0
 8008132:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8008134:	2300      	movs	r3, #0
 8008136:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800813e:	78fa      	ldrb	r2, [r7, #3]
 8008140:	4611      	mov	r1, r2
 8008142:	4618      	mov	r0, r3
 8008144:	f7fa f854 	bl	80021f0 <HAL_PCD_EP_SetStall>
 8008148:	4603      	mov	r3, r0
 800814a:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800814c:	7bfb      	ldrb	r3, [r7, #15]
 800814e:	4618      	mov	r0, r3
 8008150:	f000 f8d6 	bl	8008300 <USBD_Get_USB_Status>
 8008154:	4603      	mov	r3, r0
 8008156:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8008158:	7bbb      	ldrb	r3, [r7, #14]
}
 800815a:	4618      	mov	r0, r3
 800815c:	3710      	adds	r7, #16
 800815e:	46bd      	mov	sp, r7
 8008160:	bd80      	pop	{r7, pc}

08008162 <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8008162:	b580      	push	{r7, lr}
 8008164:	b084      	sub	sp, #16
 8008166:	af00      	add	r7, sp, #0
 8008168:	6078      	str	r0, [r7, #4]
 800816a:	460b      	mov	r3, r1
 800816c:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800816e:	2300      	movs	r3, #0
 8008170:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8008172:	2300      	movs	r3, #0
 8008174:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 800817c:	78fa      	ldrb	r2, [r7, #3]
 800817e:	4611      	mov	r1, r2
 8008180:	4618      	mov	r0, r3
 8008182:	f7fa f895 	bl	80022b0 <HAL_PCD_EP_ClrStall>
 8008186:	4603      	mov	r3, r0
 8008188:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800818a:	7bfb      	ldrb	r3, [r7, #15]
 800818c:	4618      	mov	r0, r3
 800818e:	f000 f8b7 	bl	8008300 <USBD_Get_USB_Status>
 8008192:	4603      	mov	r3, r0
 8008194:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8008196:	7bbb      	ldrb	r3, [r7, #14]
}
 8008198:	4618      	mov	r0, r3
 800819a:	3710      	adds	r7, #16
 800819c:	46bd      	mov	sp, r7
 800819e:	bd80      	pop	{r7, pc}

080081a0 <USBD_LL_IsStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Stall (1: Yes, 0: No)
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 80081a0:	b480      	push	{r7}
 80081a2:	b085      	sub	sp, #20
 80081a4:	af00      	add	r7, sp, #0
 80081a6:	6078      	str	r0, [r7, #4]
 80081a8:	460b      	mov	r3, r1
 80081aa:	70fb      	strb	r3, [r7, #3]
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 80081b2:	60fb      	str	r3, [r7, #12]

  if((ep_addr & 0x80) == 0x80)
 80081b4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	da0b      	bge.n	80081d4 <USBD_LL_IsStallEP+0x34>
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 80081bc:	78fb      	ldrb	r3, [r7, #3]
 80081be:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80081c2:	68f9      	ldr	r1, [r7, #12]
 80081c4:	4613      	mov	r3, r2
 80081c6:	009b      	lsls	r3, r3, #2
 80081c8:	4413      	add	r3, r2
 80081ca:	00db      	lsls	r3, r3, #3
 80081cc:	440b      	add	r3, r1
 80081ce:	3312      	adds	r3, #18
 80081d0:	781b      	ldrb	r3, [r3, #0]
 80081d2:	e00b      	b.n	80081ec <USBD_LL_IsStallEP+0x4c>
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 80081d4:	78fb      	ldrb	r3, [r7, #3]
 80081d6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80081da:	68f9      	ldr	r1, [r7, #12]
 80081dc:	4613      	mov	r3, r2
 80081de:	009b      	lsls	r3, r3, #2
 80081e0:	4413      	add	r3, r2
 80081e2:	00db      	lsls	r3, r3, #3
 80081e4:	440b      	add	r3, r1
 80081e6:	f503 73a9 	add.w	r3, r3, #338	@ 0x152
 80081ea:	781b      	ldrb	r3, [r3, #0]
  }
}
 80081ec:	4618      	mov	r0, r3
 80081ee:	3714      	adds	r7, #20
 80081f0:	46bd      	mov	sp, r7
 80081f2:	bc80      	pop	{r7}
 80081f4:	4770      	bx	lr

080081f6 <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  dev_addr: Device address
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
 80081f6:	b580      	push	{r7, lr}
 80081f8:	b084      	sub	sp, #16
 80081fa:	af00      	add	r7, sp, #0
 80081fc:	6078      	str	r0, [r7, #4]
 80081fe:	460b      	mov	r3, r1
 8008200:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8008202:	2300      	movs	r3, #0
 8008204:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8008206:	2300      	movs	r3, #0
 8008208:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	f8d3 32c0 	ldr.w	r3, [r3, #704]	@ 0x2c0
 8008210:	78fa      	ldrb	r2, [r7, #3]
 8008212:	4611      	mov	r1, r2
 8008214:	4618      	mov	r0, r3
 8008216:	f7f9 feba 	bl	8001f8e <HAL_PCD_SetAddress>
 800821a:	4603      	mov	r3, r0
 800821c:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800821e:	7bfb      	ldrb	r3, [r7, #15]
 8008220:	4618      	mov	r0, r3
 8008222:	f000 f86d 	bl	8008300 <USBD_Get_USB_Status>
 8008226:	4603      	mov	r3, r0
 8008228:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800822a:	7bbb      	ldrb	r3, [r7, #14]
}
 800822c:	4618      	mov	r0, r3
 800822e:	3710      	adds	r7, #16
 8008230:	46bd      	mov	sp, r7
 8008232:	bd80      	pop	{r7, pc}

08008234 <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 8008234:	b580      	push	{r7, lr}
 8008236:	b086      	sub	sp, #24
 8008238:	af00      	add	r7, sp, #0
 800823a:	60f8      	str	r0, [r7, #12]
 800823c:	607a      	str	r2, [r7, #4]
 800823e:	461a      	mov	r2, r3
 8008240:	460b      	mov	r3, r1
 8008242:	72fb      	strb	r3, [r7, #11]
 8008244:	4613      	mov	r3, r2
 8008246:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8008248:	2300      	movs	r3, #0
 800824a:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800824c:	2300      	movs	r3, #0
 800824e:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8008250:	68fb      	ldr	r3, [r7, #12]
 8008252:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 8008256:	893b      	ldrh	r3, [r7, #8]
 8008258:	7af9      	ldrb	r1, [r7, #11]
 800825a:	687a      	ldr	r2, [r7, #4]
 800825c:	f7f9 ff91 	bl	8002182 <HAL_PCD_EP_Transmit>
 8008260:	4603      	mov	r3, r0
 8008262:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8008264:	7dfb      	ldrb	r3, [r7, #23]
 8008266:	4618      	mov	r0, r3
 8008268:	f000 f84a 	bl	8008300 <USBD_Get_USB_Status>
 800826c:	4603      	mov	r3, r0
 800826e:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 8008270:	7dbb      	ldrb	r3, [r7, #22]
}
 8008272:	4618      	mov	r0, r3
 8008274:	3718      	adds	r7, #24
 8008276:	46bd      	mov	sp, r7
 8008278:	bd80      	pop	{r7, pc}

0800827a <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 800827a:	b580      	push	{r7, lr}
 800827c:	b086      	sub	sp, #24
 800827e:	af00      	add	r7, sp, #0
 8008280:	60f8      	str	r0, [r7, #12]
 8008282:	607a      	str	r2, [r7, #4]
 8008284:	461a      	mov	r2, r3
 8008286:	460b      	mov	r3, r1
 8008288:	72fb      	strb	r3, [r7, #11]
 800828a:	4613      	mov	r3, r2
 800828c:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800828e:	2300      	movs	r3, #0
 8008290:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8008292:	2300      	movs	r3, #0
 8008294:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8008296:	68fb      	ldr	r3, [r7, #12]
 8008298:	f8d3 02c0 	ldr.w	r0, [r3, #704]	@ 0x2c0
 800829c:	893b      	ldrh	r3, [r7, #8]
 800829e:	7af9      	ldrb	r1, [r7, #11]
 80082a0:	687a      	ldr	r2, [r7, #4]
 80082a2:	f7f9 ff3d 	bl	8002120 <HAL_PCD_EP_Receive>
 80082a6:	4603      	mov	r3, r0
 80082a8:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 80082aa:	7dfb      	ldrb	r3, [r7, #23]
 80082ac:	4618      	mov	r0, r3
 80082ae:	f000 f827 	bl	8008300 <USBD_Get_USB_Status>
 80082b2:	4603      	mov	r3, r0
 80082b4:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 80082b6:	7dbb      	ldrb	r3, [r7, #22]
}
 80082b8:	4618      	mov	r0, r3
 80082ba:	3718      	adds	r7, #24
 80082bc:	46bd      	mov	sp, r7
 80082be:	bd80      	pop	{r7, pc}

080082c0 <USBD_static_malloc>:
  * @brief  Static single allocation.
  * @param  size: Size of allocated memory
  * @retval None
  */
void *USBD_static_malloc(uint32_t size)
{
 80082c0:	b480      	push	{r7}
 80082c2:	b083      	sub	sp, #12
 80082c4:	af00      	add	r7, sp, #0
 80082c6:	6078      	str	r0, [r7, #4]
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
 80082c8:	4b02      	ldr	r3, [pc, #8]	@ (80082d4 <USBD_static_malloc+0x14>)
}
 80082ca:	4618      	mov	r0, r3
 80082cc:	370c      	adds	r7, #12
 80082ce:	46bd      	mov	sp, r7
 80082d0:	bc80      	pop	{r7}
 80082d2:	4770      	bx	lr
 80082d4:	20000974 	.word	0x20000974

080082d8 <USBD_static_free>:
  * @brief  Dummy memory free
  * @param  p: Pointer to allocated  memory address
  * @retval None
  */
void USBD_static_free(void *p)
{
 80082d8:	b480      	push	{r7}
 80082da:	b083      	sub	sp, #12
 80082dc:	af00      	add	r7, sp, #0
 80082de:	6078      	str	r0, [r7, #4]

}
 80082e0:	bf00      	nop
 80082e2:	370c      	adds	r7, #12
 80082e4:	46bd      	mov	sp, r7
 80082e6:	bc80      	pop	{r7}
 80082e8:	4770      	bx	lr

080082ea <HAL_PCDEx_SetConnectionState>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#else
void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80082ea:	b480      	push	{r7}
 80082ec:	b083      	sub	sp, #12
 80082ee:	af00      	add	r7, sp, #0
 80082f0:	6078      	str	r0, [r7, #4]
 80082f2:	460b      	mov	r3, r1
 80082f4:	70fb      	strb	r3, [r7, #3]
  {
    /* Configure High connection state. */

  }
  /* USER CODE END 6 */
}
 80082f6:	bf00      	nop
 80082f8:	370c      	adds	r7, #12
 80082fa:	46bd      	mov	sp, r7
 80082fc:	bc80      	pop	{r7}
 80082fe:	4770      	bx	lr

08008300 <USBD_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 8008300:	b480      	push	{r7}
 8008302:	b085      	sub	sp, #20
 8008304:	af00      	add	r7, sp, #0
 8008306:	4603      	mov	r3, r0
 8008308:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800830a:	2300      	movs	r3, #0
 800830c:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 800830e:	79fb      	ldrb	r3, [r7, #7]
 8008310:	2b03      	cmp	r3, #3
 8008312:	d817      	bhi.n	8008344 <USBD_Get_USB_Status+0x44>
 8008314:	a201      	add	r2, pc, #4	@ (adr r2, 800831c <USBD_Get_USB_Status+0x1c>)
 8008316:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800831a:	bf00      	nop
 800831c:	0800832d 	.word	0x0800832d
 8008320:	08008333 	.word	0x08008333
 8008324:	08008339 	.word	0x08008339
 8008328:	0800833f 	.word	0x0800833f
  {
    case HAL_OK :
      usb_status = USBD_OK;
 800832c:	2300      	movs	r3, #0
 800832e:	73fb      	strb	r3, [r7, #15]
    break;
 8008330:	e00b      	b.n	800834a <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 8008332:	2302      	movs	r3, #2
 8008334:	73fb      	strb	r3, [r7, #15]
    break;
 8008336:	e008      	b.n	800834a <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
 8008338:	2301      	movs	r3, #1
 800833a:	73fb      	strb	r3, [r7, #15]
    break;
 800833c:	e005      	b.n	800834a <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
 800833e:	2302      	movs	r3, #2
 8008340:	73fb      	strb	r3, [r7, #15]
    break;
 8008342:	e002      	b.n	800834a <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
 8008344:	2302      	movs	r3, #2
 8008346:	73fb      	strb	r3, [r7, #15]
    break;
 8008348:	bf00      	nop
  }
  return usb_status;
 800834a:	7bfb      	ldrb	r3, [r7, #15]
}
 800834c:	4618      	mov	r0, r3
 800834e:	3714      	adds	r7, #20
 8008350:	46bd      	mov	sp, r7
 8008352:	bc80      	pop	{r7}
 8008354:	4770      	bx	lr
 8008356:	bf00      	nop

08008358 <memset>:
 8008358:	4603      	mov	r3, r0
 800835a:	4402      	add	r2, r0
 800835c:	4293      	cmp	r3, r2
 800835e:	d100      	bne.n	8008362 <memset+0xa>
 8008360:	4770      	bx	lr
 8008362:	f803 1b01 	strb.w	r1, [r3], #1
 8008366:	e7f9      	b.n	800835c <memset+0x4>

08008368 <__libc_init_array>:
 8008368:	b570      	push	{r4, r5, r6, lr}
 800836a:	2600      	movs	r6, #0
 800836c:	4d0c      	ldr	r5, [pc, #48]	@ (80083a0 <__libc_init_array+0x38>)
 800836e:	4c0d      	ldr	r4, [pc, #52]	@ (80083a4 <__libc_init_array+0x3c>)
 8008370:	1b64      	subs	r4, r4, r5
 8008372:	10a4      	asrs	r4, r4, #2
 8008374:	42a6      	cmp	r6, r4
 8008376:	d109      	bne.n	800838c <__libc_init_array+0x24>
 8008378:	f000 f81a 	bl	80083b0 <_init>
 800837c:	2600      	movs	r6, #0
 800837e:	4d0a      	ldr	r5, [pc, #40]	@ (80083a8 <__libc_init_array+0x40>)
 8008380:	4c0a      	ldr	r4, [pc, #40]	@ (80083ac <__libc_init_array+0x44>)
 8008382:	1b64      	subs	r4, r4, r5
 8008384:	10a4      	asrs	r4, r4, #2
 8008386:	42a6      	cmp	r6, r4
 8008388:	d105      	bne.n	8008396 <__libc_init_array+0x2e>
 800838a:	bd70      	pop	{r4, r5, r6, pc}
 800838c:	f855 3b04 	ldr.w	r3, [r5], #4
 8008390:	4798      	blx	r3
 8008392:	3601      	adds	r6, #1
 8008394:	e7ee      	b.n	8008374 <__libc_init_array+0xc>
 8008396:	f855 3b04 	ldr.w	r3, [r5], #4
 800839a:	4798      	blx	r3
 800839c:	3601      	adds	r6, #1
 800839e:	e7f2      	b.n	8008386 <__libc_init_array+0x1e>
 80083a0:	08008450 	.word	0x08008450
 80083a4:	08008450 	.word	0x08008450
 80083a8:	08008450 	.word	0x08008450
 80083ac:	08008454 	.word	0x08008454

080083b0 <_init>:
 80083b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083b2:	bf00      	nop
 80083b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80083b6:	bc08      	pop	{r3}
 80083b8:	469e      	mov	lr, r3
 80083ba:	4770      	bx	lr

080083bc <_fini>:
 80083bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80083be:	bf00      	nop
 80083c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80083c2:	bc08      	pop	{r3}
 80083c4:	469e      	mov	lr, r3
 80083c6:	4770      	bx	lr
