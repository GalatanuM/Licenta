/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : usbd_custom_hid_if.h
  * @version        : v1.0_Cube
  * @brief          : Header for usbd_custom_hid_if.c file.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2025 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __USBD_CUSTOM_HID_IF_H__
#define __USBD_CUSTOM_HID_IF_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "usbd_customhid.h"

/* USER CODE BEGIN INCLUDE */

/* USER CODE END INCLUDE */

/** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  * @brief For Usb device.
  * @{
  */

/** @defgroup USBD_CUSTOM_HID USBD_CUSTOM_HID
  * @brief Usb custom human interface device module.
  * @{
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Defines USBD_CUSTOM_HID_Exported_Defines
  * @brief Defines.
  * @{
  */

/* USER CODE BEGIN EXPORTED_DEFINES */
#define FFB_ID_OFFSET 0x00
#define MAX_EFFECTS 0x28
#define MAX_AXIS 3
#define MAX_REPORT_SIZE 64

// HID Usage - Axes
#define HID_USAGE_X     0x30
#define HID_USAGE_Y     0x31
#define HID_USAGE_Z     0x32
#define HID_USAGE_RX    0x33
#define HID_USAGE_RY    0x34
#define HID_USAGE_RZ    0x35
#define HID_USAGE_SL0	0x36
#define HID_USAGE_SL1	0x37

// HID Usage - Effects
#define HID_USAGE_CONST 0x26
#define HID_USAGE_RAMP  0x27
#define HID_USAGE_SINE  0x31
#define HID_USAGE_SQUR  0x30
#define HID_USAGE_TRNG  0x32
#define HID_USAGE_STUP  0x33
#define HID_USAGE_STDN  0x34
#define HID_USAGE_SPRNG 0x40
#define HID_USAGE_DMPR  0x41
#define HID_USAGE_INRT  0x42
#define HID_USAGE_FRIC  0x43

// HID Report IDs
#define HID_ID_STATE    0x02
#define HID_ID_EFFREP   0x01
#define HID_ID_ENVREP   0x02
#define HID_ID_CONDREP  0x03
#define HID_ID_PRIDREP  0x04
#define HID_ID_CONSTREP 0x05
#define HID_ID_RAMPREP  0x06
#define HID_ID_CSTMREP  0x07
#define HID_ID_SMPLREP  0x08
#define HID_ID_EFOPREP  0x0A
#define HID_ID_BLKFRREP 0x0B
#define HID_ID_CTRLREP  0x0C
#define HID_ID_GAINREP  0x0D
#define HID_ID_SETCREP  0x0E
#define HID_ID_NEWEFREP 0x11
#define HID_ID_BLKLDREP 0x12
#define HID_ID_POOLREP  0x13

// Effect Types
#define FFB_EFFECT_NONE         0x00
#define FFB_EFFECT_CONSTANT     0x01
#define FFB_EFFECT_RAMP         0x02
#define FFB_EFFECT_SQUARE       0x03
#define FFB_EFFECT_SINE         0x04
#define FFB_EFFECT_TRIANGLE     0x05
#define FFB_EFFECT_SAWTOOTHUP   0x06
#define FFB_EFFECT_SAWTOOTHDOWN 0x07
#define FFB_EFFECT_SPRING       0x08
#define FFB_EFFECT_DAMPER       0x09
#define FFB_EFFECT_INERTIA      0x0A
#define FFB_EFFECT_FRICTION     0x0B
#define FFB_EFFECT_CUSTOM       0x0C

// Flags
#define HID_EFFECT_PLAYING      0x10
#define HID_ACTUATOR_POWER      0x08
#define HID_SAFETY_SWITCH       0x04
#define HID_ENABLE_ACTUATORS    0x02
#define HID_EFFECT_PAUSE        0x01
#define HID_ENABLE_ACTUATORS_MASK 0xFD
#define HID_DIRECTION_ENABLE    0x04
#define FFB_EFFECT_DURATION_INFINITE 0xFFFF

#define HID_ID_HIDCMD	 0xA1   // HID cmd
/* USER CODE END EXPORTED_DEFINES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Types USBD_CUSTOM_HID_Exported_Types
  * @brief Types.
  * @{
  */

/* USER CODE BEGIN EXPORTED_TYPES */
 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t effectState;
 } FFB_PIDStateReport_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t effectType;
     uint16_t duration;
     uint16_t triggerRepeatInterval;
     uint16_t samplePeriod;
     uint16_t startDelay;
     uint8_t gain;
     uint8_t triggerButton;
     uint8_t enableAxis;
     uint16_t directionX;
 } FFB_SetEffect_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     int16_t cpOffset;
     int16_t positiveCoefficient;
     int16_t negativeCoefficient;
     uint16_t positiveSaturation;
     uint16_t negativeSaturation;
     uint16_t deadBand;
 } FFB_SetCondition_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t magnitude;
     int16_t offset;
     uint16_t phase;
     uint32_t period;
 } FFB_SetPeriodic_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t startLevel;
     uint16_t endLevel;
 } FFB_SetRamp_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t magnitude;
 } FFB_SetConstantForce_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t attackLevel;
     uint16_t fadeLevel;
     uint32_t attackTime;
     uint32_t fadeTime;
 } FFB_SetEnvelope_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t operation;
     uint8_t loopCount;
 } FFB_EffectOp_t;

 typedef struct {
     uint8_t effectType;
     uint16_t byteCount;
 } FFB_CreateNewEffect_Feature_t;

 typedef struct {
     uint8_t effectBlockIndex;
     uint8_t loadStatus;
     uint16_t ramPoolAvailable;
 } FFB_BlockLoad_Feature_t;

 typedef struct {
     uint16_t ramPoolSize;
     uint8_t maxSimultaneousEffects;
     uint8_t memoryManagement;
 } FFB_PIDPool_Feature_t;
/* USER CODE END EXPORTED_TYPES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Macros USBD_CUSTOM_HID_Exported_Macros
  * @brief Aliases.
  * @{
  */

/* USER CODE BEGIN EXPORTED_MACRO */

/* USER CODE END EXPORTED_MACRO */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Variables USBD_CUSTOM_HID_Exported_Variables
  * @brief Public variables.
  * @{
  */

/** CUSTOMHID Interface callback. */
extern USBD_CUSTOM_HID_ItfTypeDef USBD_CustomHID_fops_FS;

/* USER CODE BEGIN EXPORTED_VARIABLES */

/* USER CODE END EXPORTED_VARIABLES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_FunctionsPrototype USBD_CUSTOM_HID_Exported_FunctionsPrototype
  * @brief Public functions declaration.
  * @{
  */

/* USER CODE BEGIN EXPORTED_FUNCTIONS */

/* USER CODE END EXPORTED_FUNCTIONS */

/**
  * @}
  */

/**
  * @}
  */

/**
  * @}
  */

#ifdef __cplusplus
}
#endif

#endif /* __USBD_CUSTOM_HID_IF_H__ */

