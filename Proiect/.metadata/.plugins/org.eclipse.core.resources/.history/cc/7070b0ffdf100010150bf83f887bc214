/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : usbd_custom_hid_if.h
  * @version        : v1.0_Cube
  * @brief          : Header for usbd_custom_hid_if.c file.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2025 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __USBD_CUSTOM_HID_IF_H__
#define __USBD_CUSTOM_HID_IF_H__

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "usbd_customhid.h"

/* USER CODE BEGIN INCLUDE */

/* USER CODE END INCLUDE */

/** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  * @brief For Usb device.
  * @{
  */

/** @defgroup USBD_CUSTOM_HID USBD_CUSTOM_HID
  * @brief Usb custom human interface device module.
  * @{
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Defines USBD_CUSTOM_HID_Exported_Defines
  * @brief Defines.
  * @{
  */

/* USER CODE BEGIN EXPORTED_DEFINES */

/* USER CODE END EXPORTED_DEFINES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Types USBD_CUSTOM_HID_Exported_Types
  * @brief Types.
  * @{
  */

/* USER CODE BEGIN EXPORTED_TYPES */
 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t effectState;
 } FFB_PIDStateReport_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t effectType;
     uint16_t duration;
     uint16_t triggerRepeatInterval;
     uint16_t samplePeriod;
     uint16_t startDelay;
     uint8_t gain;
     uint8_t triggerButton;
     uint8_t enableAxis;
     uint16_t directionX;
 } FFB_SetEffect_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     int16_t cpOffset;
     int16_t positiveCoefficient;
     int16_t negativeCoefficient;
     uint16_t positiveSaturation;
     uint16_t negativeSaturation;
     uint16_t deadBand;
 } FFB_SetCondition_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t magnitude;
     int16_t offset;
     uint16_t phase;
     uint32_t period;
 } FFB_SetPeriodic_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t startLevel;
     uint16_t endLevel;
 } FFB_SetRamp_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t magnitude;
 } FFB_SetConstantForce_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint16_t attackLevel;
     uint16_t fadeLevel;
     uint32_t attackTime;
     uint32_t fadeTime;
 } FFB_SetEnvelope_t;

 typedef struct {
     uint8_t reportId;
     uint8_t effectBlockIndex;
     uint8_t operation;
     uint8_t loopCount;
 } FFB_EffectOp_t;

 typedef struct {
     uint8_t effectType;
     uint16_t byteCount;
 } FFB_CreateNewEffect_Feature_t;

 typedef struct {
     uint8_t effectBlockIndex;
     uint8_t loadStatus;
     uint16_t ramPoolAvailable;
 } FFB_BlockLoad_Feature_t;

 typedef struct {
     uint16_t ramPoolSize;
     uint8_t maxSimultaneousEffects;
     uint8_t memoryManagement;
 } FFB_PIDPool_Feature_t;
/* USER CODE END EXPORTED_TYPES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Macros USBD_CUSTOM_HID_Exported_Macros
  * @brief Aliases.
  * @{
  */

/* USER CODE BEGIN EXPORTED_MACRO */

/* USER CODE END EXPORTED_MACRO */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_Variables USBD_CUSTOM_HID_Exported_Variables
  * @brief Public variables.
  * @{
  */

/** CUSTOMHID Interface callback. */
extern USBD_CUSTOM_HID_ItfTypeDef USBD_CustomHID_fops_FS;

/* USER CODE BEGIN EXPORTED_VARIABLES */

/* USER CODE END EXPORTED_VARIABLES */

/**
  * @}
  */

/** @defgroup USBD_CUSTOM_HID_Exported_FunctionsPrototype USBD_CUSTOM_HID_Exported_FunctionsPrototype
  * @brief Public functions declaration.
  * @{
  */

/* USER CODE BEGIN EXPORTED_FUNCTIONS */

/* USER CODE END EXPORTED_FUNCTIONS */

/**
  * @}
  */

/**
  * @}
  */

/**
  * @}
  */

#ifdef __cplusplus
}
#endif

#endif /* __USBD_CUSTOM_HID_IF_H__ */

